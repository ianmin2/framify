{"version":3,"sources":["framify.es6"],"names":["angular","module","service","$http","remoteAuth","$q","app","this","url","window","location","href","split","filter","urlPortion","pathPos","scheme","ip","port","hlink","undefined","nav","redirect","loc","resolve","catch","e","console","log","dir","setVar","obj","key","val","isNaN","parseInt","set_var","set","value","getval","str","_typeof","JSON","stringify","json","parse","jsonify","md5","test","CryptoJS","MD5","toString","md5ify","base64_encode","string","enc","Base64","Utf8","base64_encodify","base64_decode","encoded","base64_decodify","upload","data","destination","reject","fd","FormData","append","post","transformRequest","identity","headers","Content-Type","then","d","keys","Object","vals","forEach","v","push","clone","copy","constructor","attr","hasOwnProperty","doNothing","getNumbers","firstOnly","arguments","length","numMatch","match","notify","notificationContent","notificationClass","notificationTimeout","position","UIkit","message","status","timeout","pos","countries","name","makeResponse","response","command","make_response","date","Date","newDate","toDateString","new_date","isoDate","format","iso_date","getIsoDate","get_iso_date","toIsoDate","dObj","to_iso_date","dateTime","date_time","getDateTime","get_date_time","toDateTime","to_date_time","monthNum","month_num","getMonthNum","get_month_num","toMonthNum","to_month_num","$month_array","month_array","month_o_array","id","ajax","method","target","$","dataType","Access-Control-Allow-Origin","getJSON","replace","get_json","cgi","loadify","duration","modal","blockUI","setTimeout","hide","alert","title","cb","confirm","prompt","label","placeholder","userValue","isemail","isEmail","prospective_email","is_email","isusername","isUsername","prospective_username","is_username","ispassword","isPassword","prospective_password","is_password","isnumber","isNumber","prospective_number","is_number","istelephone","isTelephone","prospective_telephone","is_telephone","isimei","isImei","prospective_imei","is_imei","isdateTime","isDateTime","prospective_date","is_date_time","matches","val1","val2","num2month","month_number","unique","array_","Array","isArray","ret_array","a","b","reverse","removeDuplicates","remove_duplicates","count","searchParam","arrayObject","i","cnt","searchVal","success","error","get","params","put","delete","db","mail","handler","errorHandler","error_handler","e_handler","remote_handler","remoteHandler","_this","socket","start","framify_sms_server_url","io","connect","on","stop","disconnect","SMS","smsData","emit","oneSMS","tel","mess","apiKey","telephone","password","bulkSMS","contacts","element","$localStorage","auth","SetAuth","AuthToken","defaults","common","Authorization","framify_user","token","set_auth","Register","credentials","register","Login","login","Logout","logout","r_auth","setUrl","accessUrl","set_url","run","$rootScope","$state","sms","storage","frame","path","absUrl","admin","relocate","go","is_admin","isAdmin","isRoot","access","changeAdmin","bool","reset","user","controller","$scope","current","ui","search","links","hasFilters","openFilters","reinit","exec","f","shift","secure","securityFunc","parts","part","indexOf","add","fetch","fetched","counted","logedin","appRedirect","partialState","app_redirect","goTo","completeState","go_to","unwanted","removeUnwanted","insertObj","insertKey","remove_unwanted","table","cryptFields","_","extras","cryptField","r","specifics","update","do_fetch","$apply","_ret2","promiseArr","tData","tkey","all","del","username","adminLogin","admin_name","islogedin","authorize","deauthorize","custom","cFetched","sort","keyname","sortKey","sanitize","dPush","d_push","dPushify","d_pushify","currmoin","setMoin","moin","set_moin","delParams","mainObj","removeKeys","del_params","addExtras","targetObj","extrasObj","subStrings","k","x","fg","add_extras","target_k","extras_k","target_v","extras_v","target_removeKeys","extras_removeKeys","target_subStrings","extras_subStrings","extras_keys","target_keys","entity","showService","serviceData","available","showEntity","howMany","owner","me","setData","handlers","r_handlers","regSuccess","reg_success","loginSuccess","login_success","regError","reg_error","reg_rror","loginError","login_error","isLogedIn","is_loged_in","directive","restrict","require","link","scope","attrs","ngModel","read","$setViewValue","html","$render","$viewValue","bind","$parse","model","fileModel","modelSetter","assign","files","config","ChartJsProvider","setOptions","colors"],"mappings":"kOAAAA,SAAQC,OAAO,cACX,YACC,mBACA,YACA,gBACA,WACA,SACA,aACA,eAIJC,QAAQ,OACP,QAAQ,aAAa,KACtB,SAASC,EAAMC,EAAWC,GAEnB,GAAIC,GAAMC,KAGNC,EAAMC,OAAOC,SAASC,KAAKC,MAAM,KAAKC,OAAO,SAASC,GAAc,MAAsB,IAAdA,GAAkC,SAAdA,GAAuC,UAAdA,IACzHC,EAAUN,OAAOC,SAASC,KAAKC,MAAM,KAAKC,OAAO,SAASC,GAAc,MAAsB,IAAdA,GAGpFP,MAAKS,OAASD,EAAQ,GACtBR,KAAKU,GAAST,EAAI,GAAGI,MAAM,KAAK,GAChCL,KAAKW,KAASV,EAAI,GAAGI,MAAM,KAAK,GAChCL,KAAKY,MAAYZ,KAAKS,OAAtB,KAAiCT,KAAKU,IAAsBG,QAAbb,KAAKW,KAAsB,IAAMX,KAAKW,KAAO,IAI5FX,KAAKC,IAAMD,KAAKY,KAEhB,IAAIA,GAAQZ,KAAKY,KAEjBZ,MAAKc,OAGLd,KAAKe,SAAW,SAACC,GAMb,MALIA,GACAd,OAAOC,SAAWa,EAElBd,OAAOC,SAAW,IAEfL,EAAGmB,SAAQ,GACjBC,MAAM,SAASC,GACZC,QAAQC,IAAI,+DACZD,QAAQE,IAAIH,MAIpBnB,KAAKuB,OAAa,SAAEC,EAAKC,EAAKC,GAI1B,MAFAF,GAAgBA,EAAQA,KACxBA,EAAIC,GAAaE,MAAMD,GAAyBA,EAAhBE,SAASF,GAClCF,GAIXxB,KAAK6B,QAAW,SAAEL,EAAIC,EAAIC,GAKtB,MAHPF,GAAgBA,EAAQA,KACjBA,EAAIC,GAAUC,EAEP5B,EAAGmB,QAASO,IAIvBxB,KAAK8B,IAAM,SAAEN,EAAKC,EAAKM,GACnBP,EAAIC,GAAOM,GAGf/B,KAAKgC,OAAS,SAAER,EAAKC,GACjB,MAAOD,GAAIC,IAKfzB,KAAKiC,IAAS,SAACT,GAAD,MAA0B,YAAhB,mBAAOA,GAAP,YAAAU,QAAOV,IAAqBW,KAAKC,UAAUZ,GAAOA,GAC1ExB,KAAKoC,UAAY,SAAEZ,GAAF,MAAW1B,GAAGmB,QAASlB,EAAIkC,IAAIT,KAGhDxB,KAAKqC,KAAS,SAACb,GAAD,MAA0B,YAAhB,mBAAOA,GAAP,YAAAU,QAAOV,IAAqBA,EAAMW,KAAKG,MAAMd,IACrExB,KAAKuC,QAAU,SAACf,GAAD,MAAS1B,GAAGmB,QAASlB,EAAIsC,KAAKb,KAG7CxB,KAAKwC,IAAS,SAACP,GAAD,MAAU,mBAAmBQ,KAAKR,GAAQA,EAAMS,SAASC,IAAIV,GAAKW,YAChF5C,KAAK6C,OAAS,SAACZ,GAAD,MAASnC,GAAGmB,QAASlB,EAAIyC,IAAIP,KAG3CjC,KAAK8C,cAAgB,SAACC,GAAD,MAAYL,UAASM,IAAIC,OAAOb,UAAWM,SAASM,IAAIE,KAAKZ,MAAMS,KACxF/C,KAAKmD,gBAAqB,SAACJ,GAAD,MAAYjD,GAAGmB,QAASlB,EAAI+C,cAAeC,KAGrE/C,KAAKoD,cAAgB,SAACC,GAAD,MAAcX,UAASM,IAAIC,OAAOX,MAAMe,GAAUT,SAASF,SAASM,IAAIE,OAC7FlD,KAAKsD,gBAAmB,SAACD,GAAD,MAAavD,GAAGmB,QAASlB,EAAIqD,cAAcC,KAGnErD,KAAKuD,OAAS,SAACC,EAAMC,GAEjB,MAAO3D,GAAI,SAACmB,EAASyC,GAEjB,GAAMC,GAAK,GAAIC,SAGf,KAAK,GAAInC,KAAO+B,GACZG,EAAGE,OAAOpC,EAAK+B,EAAK/B,GAIxB7B,GAAMkE,KAAQlD,EAAd,WAA8B6C,EAAeE,GAEzCI,iBAAkBtE,QAAQuE,SAG1BC,SAAWC,eAAgBrD,UAE5BsD,KAAK,SAAAC,GAAA,MAAGnD,GAAQmD,QAM3BpE,KAAKqE,KAAS,SAAA7C,GAAA,MAAK8C,QAAOD,KAAK7C,IAE/BxB,KAAKuE,KAAS,SAAA/C,GACV,GAAI+C,KAKJ,OAJAD,QAAOD,KAAK7C,GACXgD,QAAQ,SAAAC,GACLF,EAAKG,KAAKlD,EAAIiD,MAEXF,GAIXvE,KAAK2E,MAAQ,SAACnD,GAGV,GAAI,MAAQA,GAAO,WAAA,mBAAmBA,GAAnB,YAAAU,QAAmBV,IAAK,MAAOA,EAGlD,IAAIoD,GAAOpD,EAAIqD,aAGf,KAAK,GAAIC,KAAQtD,GACTA,EAAIuD,eAAeD,KAAOF,EAAKE,GAAU,WAAWrC,KAAKjB,EAAIsD,IAAWlD,SAASJ,EAAIsD,IAAStD,EAAIsD,GAI1G,OAAOF,IAMX5E,KAAK4B,SAAW,SAAAK,GAAA,MAAOL,UAASK,IAGhCjC,KAAKgF,UAAY,WACb,MAAOlF,GAAGmB,UACTC,MAAM,SAASC,GACZC,QAAQC,IAAI,gEACZD,QAAQE,IAAIH,MAKpBnB,KAAKiF,WAAa,SAAChD,GAAuB,GAAnBiD,KAAmBC,UAAAC,OAAA,GAAAvE,SAAAsE,UAAA,KAAAA,UAAA,GAClCE,EAAW,MACf,OAAQH,GAAajD,EAAIW,WAAW0C,MAAMD,GAAU,GAAKpD,EAAIW,WAAW0C,MAAMD,IAIlFrF,KAAKuF,OAAS,SAACC,EAAqBC,EAAmBC,EAAoBC,GASvE,MAPAC,OAAML,QACFM,QAAAA,YAAqBL,GAAsB,uCAA3C,YACAM,OAAUL,GAAqB,OAC/BM,QAAUL,GAAuB,IACjCM,IAAU,eAGPlG,EAAGmB,SAAQ,GACjBC,MAAM,SAASC,GACZC,QAAQE,IAAIH,KAKPnB,MAAKuF,MAElBvF,MAAKiG,YAAeC,KAAM,cAAenE,MAAO,MAASmE,KAAM,UAAWnE,MAAO,MAASmE,KAAM,UAAWnE,MAAO,MAASmE,KAAM,iBAAkBnE,MAAO,MAASmE,KAAM,UAAWnE,MAAO,MAASmE,KAAM,SAAUnE,MAAO,MAASmE,KAAM,WAAYnE,MAAO,MAASmE,KAAM,aAAcnE,MAAO,MAASmE,KAAM,sBAAuBnE,MAAO,MAASmE,KAAM,YAAanE,MAAO,OAAUmE,KAAM,UAAWnE,MAAO,OAAUmE,KAAM,QAASnE,MAAO,OAAUmE,KAAM,YAAanE,MAAO,OAAUmE,KAAM,UAAWnE,MAAO,OAAUmE,KAAM,aAAcnE,MAAO,OAAUmE,KAAM,UAAWnE,MAAO,OAAUmE,KAAM,UAAWnE,MAAO,OAAUmE,KAAM,aAAcnE,MAAO,OAAUmE,KAAM,WAAYnE,MAAO,OAAUmE,KAAM,UAAWnE,MAAO,OAAUmE,KAAM,UAAWnE,MAAO,OAAUmE,KAAM,SAAUnE,MAAO,OAAUmE,KAAM,QAASnE,MAAO,OAAUmE,KAAM,UAAWnE,MAAO,OAAUmE,KAAM,SAAUnE,MAAO,OAAUmE,KAAM,UAAWnE,MAAO,OAAUmE,KAAM,yBAA0BnE,MAAO,OAAUmE,KAAM,WAAYnE,MAAO,OAAUmE,KAAM,gBAAiBnE,MAAO,OAAUmE,KAAM,SAAUnE,MAAO,OAAUmE,KAAM,iCAAkCnE,MAAO,OAAUmE,KAAM,oBAAqBnE,MAAO,OAAUmE,KAAM,WAAYnE,MAAO,OAAUmE,KAAM,eAAgBnE,MAAO,OAAUmE,KAAM,UAAWnE,MAAO,OAAUmE,KAAM,WAAYnE,MAAO,OAAUmE,KAAM,WAAYnE,MAAO,OAAUmE,KAAM,SAAUnE,MAAO,OAAUmE,KAAM,aAAcnE,MAAO,OAAUmE,KAAM,iBAAkBnE,MAAO,OAAUmE,KAAM,2BAA4BnE,MAAO,OAAUmE,KAAM,OAAQnE,MAAO,OAAUmE,KAAM,QAASnE,MAAO,OAAUmE,KAAM,QAASnE,MAAO,OAAUmE,KAAM,mBAAoBnE,MAAO,OAAUmE,KAAM,0BAA2BnE,MAAO,OAAUmE,KAAM,WAAYnE,MAAO,OAAUmE,KAAM,UAAWnE,MAAO,OAAUmE,KAAM,QAASnE,MAAO,OAAUmE,KAAM,wCAAyCnE,MAAO,OAAUmE,KAAM,eAAgBnE,MAAO,OAAUmE,KAAM,aAAcnE,MAAO,OAAUmE,KAAM,gBAAkBnE,MAAO,OAAUmE,KAAM,qBAAsBnE,MAAO,OAAUmE,KAAM,OAAQnE,MAAO,OAAUmE,KAAM,SAAUnE,MAAO,OAAUmE,KAAM,iBAAkBnE,MAAO,OAAUmE,KAAM,UAAWnE,MAAO,OAAUmE,KAAM,WAAYnE,MAAO,OAAUmE,KAAM,WAAYnE,MAAO,OAAUmE,KAAM,qBAAsBnE,MAAO,OAAUmE,KAAM,aAAcnE,MAAO,OAAUmE,KAAM,UAAWnE,MAAO,OAAUmE,KAAM,QAASnE,MAAO,OAAUmE,KAAM,cAAenE,MAAO,OAAUmE,KAAM,oBAAqBnE,MAAO,OAAUmE,KAAM,UAAWnE,MAAO,OAAUmE,KAAM,UAAWnE,MAAO,OAAUmE,KAAM,WAAYnE,MAAO,OAAUmE,KAAM,8BAA+BnE,MAAO,OAAUmE,KAAM,gBAAiBnE,MAAO,OAAUmE,KAAM,OAAQnE,MAAO,OAAUmE,KAAM,UAAWnE,MAAO,OAAUmE,KAAM,SAAUnE,MAAO,OAAUmE,KAAM,sBAAuBnE,MAAO,OAAUmE,KAAM,gBAAiBnE,MAAO,OAAUmE,KAAM,mBAAoBnE,MAAO,OAAUmE,KAAM,8BAA+BnE,MAAO,OAAUmE,KAAM,QAASnE,MAAO,OAAUmE,KAAM,SAAUnE,MAAO,OAAUmE,KAAM,UAAWnE,MAAO,OAAUmE,KAAM,UAAWnE,MAAO,OAAUmE,KAAM,QAASnE,MAAO,OAAUmE,KAAM,YAAanE,MAAO,OAAUmE,KAAM,SAAUnE,MAAO,OAAUmE,KAAM,YAAanE,MAAO,OAAUmE,KAAM,UAAWnE,MAAO,OAAUmE,KAAM,aAAcnE,MAAO,OAAUmE,KAAM,OAAQnE,MAAO,OAAUmE,KAAM,YAAanE,MAAO,OAAUmE,KAAM,SAAUnE,MAAO,OAAUmE,KAAM,gBAAiBnE,MAAO,OAAUmE,KAAM,SAAUnE,MAAO,OAAUmE,KAAM,QAASnE,MAAO,OAAUmE,KAAM,8BAA+BnE,MAAO,OAAUmE,KAAM,gCAAiCnE,MAAO,OAAUmE,KAAM,WAAYnE,MAAO,OAAUmE,KAAM,YAAanE,MAAO,OAAUmE,KAAM,UAAWnE,MAAO,OAAUmE,KAAM,UAAWnE,MAAO,QAAWmE,KAAM,QAASnE,MAAO,QAAWmE,KAAM,YAAanE,MAAO,QAAWmE,KAAM,6BAA8BnE,MAAO,QAAWmE,KAAM,OAAQnE,MAAO,QAAWmE,KAAM,UAAWnE,MAAO,QAAWmE,KAAM,SAAUnE,MAAO,QAAWmE,KAAM,QAASnE,MAAO,QAAWmE,KAAM,UAAWnE,MAAO,QAAWmE,KAAM,QAASnE,MAAO,QAAWmE,KAAM,SAAUnE,MAAO,QAAWmE,KAAM,aAAcnE,MAAO,QAAWmE,KAAM,QAASnE,MAAO,QAAWmE,KAAM,WAAYnE,MAAO,QAAWmE,KAAM,yCAA2CnE,MAAO,QAAWmE,KAAM,qBAAsBnE,MAAO,QAAWmE,KAAM,SAAUnE,MAAO,QAAWmE,KAAM,aAAcnE,MAAO,QAAWmE,KAAM,oCAAsCnE,MAAO,QAAWmE,KAAM,SAAUnE,MAAO,QAAWmE,KAAM,UAAWnE,MAAO,QAAWmE,KAAM,UAAWnE,MAAO,QAAWmE,KAAM,UAAWnE,MAAO,QAAWmE,KAAM,yBAA0BnE,MAAO,QAAWmE,KAAM,gBAAiBnE,MAAO,QAAWmE,KAAM,YAAanE,MAAO,QAAWmE,KAAM,aAAcnE,MAAO,QAAWmE,KAAM,QAASnE,MAAO,QAAWmE,KAAM,6CAA8CnE,MAAO,QAAWmE,KAAM,aAAcnE,MAAO,QAAWmE,KAAM,SAAUnE,MAAO,QAAWmE,KAAM,WAAYnE,MAAO,QAAWmE,KAAM,WAAYnE,MAAO,QAAWmE,KAAM,OAAQnE,MAAO,QAAWmE,KAAM,QAASnE,MAAO,QAAWmE,KAAM,mBAAoBnE,MAAO,QAAWmE,KAAM,aAAcnE,MAAO,QAAWmE,KAAM,aAAcnE,MAAO,QAAWmE,KAAM,YAAanE,MAAO,QAAWmE,KAAM,UAAWnE,MAAO,QAAWmE,KAAM,SAAUnE,MAAO,QAAWmE,KAAM,kCAAmCnE,MAAO,QAAWmE,KAAM,uBAAwBnE,MAAO,QAAWmE,KAAM,SAAUnE,MAAO,QAAWmE,KAAM,WAAYnE,MAAO,QAAWmE,KAAM,aAAcnE,MAAO,QAAWmE,KAAM,UAAWnE,MAAO,QAAWmE,KAAM,aAAcnE,MAAO,QAAWmE,KAAM,UAAWnE,MAAO,QAAWmE,KAAM,UAAWnE,MAAO,QAAWmE,KAAM,QAASnE,MAAO,QAAWmE,KAAM,QAASnE,MAAO,QAAWmE,KAAM,cAAenE,MAAO,QAAWmE,KAAM,uBAAwBnE,MAAO,QAAWmE,KAAM,gBAAiBnE,MAAO,QAAWmE,KAAM,cAAenE,MAAO,QAAWmE,KAAM,YAAanE,MAAO,QAAWmE,KAAM,QAASnE,MAAO,QAAWmE,KAAM,UAAWnE,MAAO,QAAWmE,KAAM,OAAQnE,MAAO,QAAWmE,KAAM,iBAAkBnE,MAAO,QAAWmE,KAAM,2BAA4BnE,MAAO,QAAWmE,KAAM,SAAUnE,MAAO,QAAWmE,KAAM,OAAQnE,MAAO,QAAWmE,KAAM,WAAYnE,MAAO,QAAWmE,KAAM,QAASnE,MAAO,QAAWmE,KAAM,SAAUnE,MAAO,QAAWmE,KAAM,mBAAoBnE,MAAO,QAAWmE,KAAM,WAAYnE,MAAO,QAAWmE,KAAM,OAAQnE,MAAO,QAAWmE,KAAM,cAAenE,MAAO,QAAWmE,KAAM,WAAYnE,MAAO,QAAWmE,KAAM,SAAUnE,MAAO,QAAWmE,KAAM,WAAYnE,MAAO,QAAWmE,KAAM,cAAenE,MAAO,QAAWmE,KAAM,QAASnE,MAAO,QAAWmE,KAAM,UAAWnE,MAAO,QAAWmE,KAAM,UAAWnE,MAAO,QAAWmE,KAAM,qBAAsBnE,MAAO,QAAWmE,KAAM,SAAUnE,MAAO,QAAWmE,KAAM,wBAAyBnE,MAAO,QAAWmE,KAAM,cAAenE,MAAO,QAAWmE,KAAM,mCAAoCnE,MAAO,QAAWmE,KAAM,QAASnE,MAAO,QAAWmE,KAAM,aAAcnE,MAAO,QAAWmE,KAAM,wBAAyBnE,MAAO,QAAWmE,KAAM,eAAgBnE,MAAO,QAAWmE,KAAM,UAAWnE,MAAO,QAAWmE,KAAM,aAAcnE,MAAO,QAAWmE,KAAM,eAAgBnE,MAAO,QAAWmE,KAAM,YAAanE,MAAO,QAAWmE,KAAM,6BAA8BnE,MAAO,QAAWmE,KAAM,WAAYnE,MAAO,QAAWmE,KAAM,kBAAmBnE,MAAO,QAAWmE,KAAM,UAAWnE,MAAO,QAAWmE,KAAM,eAAgBnE,MAAO,QAAWmE,KAAM,+CAAgDnE,MAAO,QAAWmE,KAAM,cAAenE,MAAO,QAAWmE,KAAM,QAASnE,MAAO,QAAWmE,KAAM,YAAanE,MAAO,QAAWmE,KAAM,aAAcnE,MAAO,QAAWmE,KAAM,0BAA2BnE,MAAO,QAAWmE,KAAM,QAASnE,MAAO,QAAWmE,KAAM,WAAYnE,MAAO,QAAWmE,KAAM,iCAAkCnE,MAAO,QAAWmE,KAAM,YAAanE,MAAO,QAAWmE,KAAM,SAAUnE,MAAO,QAAWmE,KAAM,cAAenE,MAAO,QAAWmE,KAAM,uBAAwBnE,MAAO,QAAWmE,KAAM,4BAA6BnE,MAAO,QAAWmE,KAAM,aAAcnE,MAAO,QAAWmE,KAAM,+BAAgCnE,MAAO,QAAWmE,KAAM,WAAYnE,MAAO,QAAWmE,KAAM,OAAQnE,MAAO,QAAWmE,KAAM,UAAWnE,MAAO,QAAWmE,KAAM,QAASnE,MAAO,QAAWmE,KAAM,sBAAuBnE,MAAO,QAAWmE,KAAM,UAAWnE,MAAO,QAAWmE,KAAM,SAAUnE,MAAO,QAAWmE,KAAM,eAAgBnE,MAAO,QAAWmE,KAAM,2BAA4BnE,MAAO,QAAWmE,KAAM,SAAUnE,MAAO,QAAWmE,KAAM,SAAUnE,MAAO,QAAWmE,KAAM,UAAWnE,MAAO,QAAWmE,KAAM,uBAAwBnE,MAAO,QAAWmE,KAAM,iBAAkBnE,MAAO,QAAWmE,KAAM,gBAAiBnE,MAAO,QAAWmE,KAAM,uCAAwCnE,MAAO,QAAWmE,KAAM,UAAWnE,MAAO,QAAWmE,KAAM,aAAcnE,MAAO,QAAWmE,KAAM,UAAWnE,MAAO,QAAWmE,KAAM,YAAanE,MAAO,QAAWmE,KAAM,UAAWnE,MAAO,QAAWmE,KAAM,2BAA4BnE,MAAO,QAAWmE,KAAM,wBAAyBnE,MAAO,QAAWmE,KAAM,4BAA6BnE,MAAO,QAAWmE,KAAM,iBAAkBnE,MAAO,QAAWmE,KAAM,QAASnE,MAAO,QAAWmE,KAAM,aAAcnE,MAAO,QAAWmE,KAAM,SAAUnE,MAAO,QAAWmE,KAAM,WAAYnE,MAAO,QAI/kS/B,KAAKmG,aAAe,SAACC,EAAUP,EAASQ,GAEpC,OACID,SAAUA,EACV5C,MACIqC,QAASA,EACTQ,QAASA,KAKrBrG,KAAKsG,cAAiBtG,KAAKmG,aAI3BnG,KAAKuG,KAAiB,WAAA,MAAM,IAAIC,OAGhCxG,KAAKyG,QAAiB,WAAA,OAAM,GAAID,OAAOE,gBACvC1G,KAAK2G,SAAiB3G,KAAKyG,QAG3BzG,KAAK4G,QAAiB,WAAA,OAAM,GAAIJ,OAAOK,OAAO,YAC9C7G,KAAK8G,SAAiB9G,KAAK4G,QAG3B5G,KAAK+G,WAAiB,SAAC3C,GAAD,MAAO,IAAIoC,MAAKpC,GAAGyC,OAAO,YAChD7G,KAAKgH,aAAiBhH,KAAK+G,WAG3B/G,KAAKiH,UAAiB,SAAAC,GAAA,MAAQA,GAAKL,OAAO,YAC1C7G,KAAKmH,YAAiBnH,KAAKiH,UAG3BjH,KAAKoH,SAAiB,WAAA,OAAM,GAAIZ,OAAOK,OAAO,aAC9C7G,KAAKqH,UAAiBrH,KAAKoH,SAG3BpH,KAAKsH,YAAiB,SAAAlD,GAAA,MAAK,IAAIoC,MAAKpC,GAAGyC,OAAO,aAC9C7G,KAAKuH,cAAiBvH,KAAKsH,YAG3BtH,KAAKwH,WAAiB,SAAAN,GAAA,MAAQA,GAAKL,OAAO,aAC1C7G,KAAKyH,aAAiBzH,KAAKwH,WAG3BxH,KAAK0H,SAAiB,WAAA,OAAM,GAAIlB,OAAOK,OAAO,aAC9C7G,KAAK2H,UAAiB3H,KAAK0H,SAG3B1H,KAAK4H,YAAiB,SAAAxD,GAAA,MAAK,IAAIoC,MAAKpC,GAAGyC,OAAO,aAC9C7G,KAAK6H,cAAiB7H,KAAK4H,YAG3B5H,KAAK8H,WAAiB,SAAAZ,GAAA,MAAQA,GAAKL,OAAO,aAC1C7G,KAAK+H,aAAiB/H,KAAK8H,UAG3B,IAAIE,IAAgB,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,WAClIhI,MAAKiI,YAAcD,EACnBhI,KAAKkI,gBACCC,GAAI,EAAGjC,KAAM,YACZiC,GAAI,EAAGjC,KAAM,aACbiC,GAAI,EAAGjC,KAAM,UACbiC,GAAI,EAAGjC,KAAM,UACbiC,GAAI,EAAGjC,KAAM,QACbiC,GAAI,EAAGjC,KAAM,SACbiC,GAAI,EAAGjC,KAAM,SACbiC,GAAI,EAAGjC,KAAM,WACbiC,GAAI,EAAGjC,KAAM,cACbiC,GAAI,EAAGjC,KAAM,YACbiC,GAAI,GAAIjC,KAAM,aACdiC,GAAI,GAAIjC,KAAM,aAUrBlG,KAAKoI,KAAO,SAACC,EAAQC,EAAQ9E,GAEzB,MAAO+E,GAAEH,MACLC,OAAQA,GAAU,OACjBpI,IAAKqI,EACL9E,KAAMA,EACNgF,SAAU,QACXvE,SAAUwE,8BAA+B,QAMjDzI,KAAK0I,QAAU,SAACJ,GAEZ,MAAOC,GAAEG,QAASJ,EAAOK,QAAQ,eAAe,IAAM,gBAG1D3I,KAAK4I,SAAW5I,KAAK0I,QAGrB1I,KAAK6I,IAAM,SAACR,EAAQpI,EAAKuD,GAErB,MAAO+E,GAAEH,MACLC,OAAQA,GAAU,MACjBpI,IAAKA,EACLuD,KAAMA,EACNgF,SAAU,QACVvE,SAAUwE,8BAA+B,QAQlDzI,KAAK8I,QAAU,SAACC,EAAUlD,GAEtB,MAAO/F,GAAI,SAACmB,EAAQyC,GAChB,GAAIsF,GAAQpD,MAAMoD,MAAMC,QAAQ,8FAAgGpD,EAAD,eAAyBA,EAAzB,YAA4C,IACvKkD,KAAapH,MAAMoH,GACnBG,WAAW,WACNF,EAAMG,OACNlI,GAAQ,IACV8H,GAEH9H,EAAQ+H,MAQpBhJ,KAAKoJ,MAAQ,SAACC,EAAOxD,EAASyD,GAM1B,MAJA1D,OAAMoD,MAAMI,MAAZ,6EAA8FC,GAAO,UAArG,mDAEUxD,GAAS,iGAFnB,aAIIyD,GAAoB,kBAAPA,GACNxJ,EAAGmB,QAAQqI,EAAGzD,IACpB3E,MAAM,SAASC,GACbC,QAAQC,IAAI,4DACZD,QAAQE,IAAIH,KAGRrB,EAAGmB,SAAQ,GACjBC,MAAM,SAASC,GACbC,QAAQC,IAAI,6DACZD,QAAQE,IAAIH,MAOvBnB,KAAKuJ,QAAU,SAAEF,EAAOxD,EAASyD,GAE7B,MAAOxJ,GAAI,SAACmB,GAER2E,MAAMoD,MAAMO,QAAZ,6EAAgGF,GAAO,0BAAvG,0DAEUxD,EAFV,YAE6B,WAErB5E,EADDqI,GAAoB,kBAAPA,GACJA,EAAGzD,IAEH,QASxB7F,KAAKwJ,OAAS,SAAUH,EAAOI,EAAOC,EAAaJ,GAEjD,MAAOxJ,GAAI,SAACmB,GAEV2E,MAAMoD,MAAMQ,OAAZ,6EAA+FH,GAAO,iBAAtG,2CAEEI,GAAO,SAFT,KAEuBC,GAAa,GAAK,SAACC,GAElC1I,EADDqI,GAAoB,kBAAPA,GACJA,EAAGK,GAEHA,QAYpB3J,KAAK4J,QAAU,gQACf5J,KAAK6J,QAAU,SAAAC,GAAA,MAAqB/J,GAAI6J,QAAQnH,KAAKqH,IACrD9J,KAAK+J,SAAa/J,KAAK6J,QAGvB7J,KAAKgK,WAAa,qBAClBhK,KAAKiK,WAAa,SAAAC,GAAA,MAAwBnK,GAAIiK,WAAWvH,KAAKyH,IAC9DlK,KAAKmK,YAAiBnK,KAAKiK,WAG3BjK,KAAKoK,WAAa,mCAClBpK,KAAKqK,WAAa,SAAAC,GAAA,MAAwBvK,GAAIqK,WAAW3H,KAAK6H,IAC9DtK,KAAKuK,YAAiBvK,KAAKqK,WAG3BrK,KAAKwK,SAAW,wBAChBxK,KAAKyK,SAAW,SAAAC,GAAA,MAAsB3K,GAAIyK,SAAS/H,KAAKiI,IACxD1K,KAAK2K,UAAa3K,KAAKyK,SAGvBzK,KAAK4K,YAAc,8DACnB5K,KAAK6K,YAAc,SAAAC,GAAA,MAAyB/K,GAAI6K,YAAYnI,KAAKqI,IACjE9K,KAAK+K,aAAiB/K,KAAK6K,YAG3B7K,KAAKgL,OAAa,cAClBhL,KAAKiL,OAAa,SAAAC,GAAA,MAAoBnL,GAAIiL,OAAOvI,KAAKyI,IACtDlL,KAAKmL,QAAanL,KAAKiL,OAGvBjL,KAAKoL,WAAa,4FAClBpL,KAAKqL,WAAa,SAAAC,GAAA,MAAkBvL,GAAIqL,WAAW3I,KAAM6I,IACzDtL,KAAKuL,aAAiBvL,KAAKqL,WAG3BrL,KAAKwL,QAAU,SAACC,EAAMC,GAAP,MAAiBD,KAASC,GAGzC1L,KAAK2L,UAAY,SAACC,GAAD,OAAoBjK,MAAMiK,IAAkBA,GAAgB,GAAM5D,EAAa4D,GAAc,iBAG9G5L,KAAK6L,OAAS,SAACC,GAEZ,GAAKC,MAAMC,QAAQF,GAGd,CAMA,IAAK,GAHDG,GAAY,GAAIF,OAGXG,EAAIJ,EAAO1G,OAAS,EAAG8G,GAAK,EAAGA,IAAK,CAGzC,IAAK,GAAIC,GAAIL,EAAO1G,OAAS,EAAG+G,GAAK,EAAGA,IAEhCL,EAAOI,IAAMJ,EAAOK,IAAMD,GAAKC,SACxBL,GAAOK,EAKLtL,SAAbiL,EAAOI,IACPD,EAAUvH,KAAKoH,EAAOI,IAK9B,MAAOD,GAAUG,UAxBlB,MADArM,GAAIwF,OAAO,sDAAsD,UAC1DuG,GA6Bd9L,KAAKqM,iBAAmBrM,KAAK6L,OAC7B7L,KAAKsM,kBAAoBtM,KAAKqM,iBAG9BrM,KAAKuM,MAAQ,SAACC,EAAaC,GAIvB,GAAIV,MAAMC,QAASS,GAAe,CAG9B,GAAKV,MAAMC,QAAQQ,GAAe,CAG9B,GAAIE,GAAM,EACNC,IAGJ,KAAK,GAAIC,KAAaJ,GAAc,CAGhCG,EAAID,GAAQ,CAGZ,KAAK,GAAIjI,KAAKgI,GAGND,EAAYI,KAAeH,EAAYhI,KAGvCkI,EAAID,GAAQ/K,MAAMgL,EAAID,IAAQ,EAAIC,EAAID,IAAI,EAOlDA,KAKJ,MAAOC,GAOP,GAAIA,GAAM,CAGV,KAAI,GAAIlI,KAAKgI,GAGLD,IAAgBC,EAAYhI,KAG5BkI,GAAO,EAOf,OAAOA,GAOX5M,EAAIwF,OAAO,2DAA2D,WAU9EvF,KAAK8D,KAAS,SAAEL,EAAaD,GAEzB,MAAO1D,GAAI,SAACmB,EAAQyC,GAEhB9D,EAAMkE,KAAKL,EAAYD,GACtBqJ,QAAS5L,GACT6L,MAAOpJ,MAOhB1D,KAAK+M,IAAQ,SAAEtJ,EAAaD,GAExB,MAAO1D,GAAI,SAACmB,EAAQyC,GAEhB9D,EAAMmN,IAAItJ,GACFuJ,OAAQxJ,IAEfqJ,QAAS5L,GACT6L,MAAOpJ,MAOhB1D,KAAKiN,IAAQ,SAAExJ,EAAaD,GAExB,MAAO1D,GAAI,SAACmB,EAAQyC,GAEhB9D,EAAMqN,IAAIxJ,EAAYD,GACrBqJ,QAAS5L,GACT6L,MAAOpJ,MAQhB1D,KAAKkN,OAAW,SAAEzJ,EAAaD,GAE3B,MAAO1D,GAAI,SAACmB,EAAQyC,GAEhB9D,EAAMsN,OAAOzJ,GACTuJ,OAAQxJ,IAEXqJ,QAAS5L,GACT6L,MAAOpJ,MAOhB1D,KAAKmN,GAAK,SAAS3J,EAAKC,GAEnB,MAAO3D,GAAI,SAACmB,EAAQyC,GAEjBD,EAAgBA,EAAgBA,EAAiB5D,EAAWI,IAA9C,OACdL,EAAMmN,IAAMtJ,GACJuJ,OAAQxJ,IAEfqJ,QAAS5L,GACT6L,MAAOpJ,MAOhB1D,KAAKoN,KAAO,SAAS5J,EAAKC,GAErB,MAAO3D,GAAI,SAACmB,EAAQyC,GAEjBD,EAAgBA,EAAgBA,EAAiB5D,EAAWI,IAA9C,QACdL,EAAMkE,KAAML,EAAaD,GACxBqJ,QAAS5L,GACT6L,MAAOpJ,MAOhB1D,KAAKqN,QAAU,SAAUjH,GAErBA,EAAaA,EAASA,SAAaA,EAAWA,EAAS5C,KAE/B,KAArB4C,EAASA,SACRrG,EAAIqJ,MAAM,gCAAgCrJ,EAAIkC,IAAKmE,EAAS5C,KAAKqC,UAEjE9F,EAAIqJ,MAAJ,mCAA6ChD,EAASA,SAAtD,WAAyErG,EAAIkC,IAAKmE,EAAS5C,KAAKqC,WAMxG7F,KAAKsN,aAAe,SAAUlH,GAEtBrG,EAAIqJ,MAAJ,gCAA0CrJ,EAAIkC,IAAKmE,EAAS5C,KAAKqC,WAGzE7F,KAAKuN,cAAiBvN,KAAKsN,aAC3BtN,KAAKwN,UAAiBxN,KAAKsN,aAG3BtN,KAAKyN,eAAiB,SAAUrH,GAE/BrG,EAAIqJ,MAAM,wCAAwCrJ,EAAIkC,IAAKlC,EAAIkC,IAAKmE,MAGrEpG,KAAK0N,cAAiB1N,KAAKyN,kBASlC9N,QAAQ,OACP,MAAM,aAAa,KACpB,SAASI,EAAIF,EAAWC,GAAI,GAAA6N,GAAA3N,IAgBrBA,MAAK4N,MACL,IAAIA,GAAS5N,KAAK4N,MAGlB5N,MAAK6N,MAAS,SAAEC,GAgBZ,MAdAF,GAASG,GAAGC,QAASF,GAA0BjO,EAAWI,KAE1D2N,EAAOK,GAAG,UAAW,WACjB7M,QAAQC,IAAI,sEAGhBuM,EAAOK,GAAG,aAAc,WACpB7M,QAAQC,IAAI,iDAGhBuM,EAAOK,GAAG,YAAa,WACnB7M,QAAQC,IAAI,qDAGTvB,EAAGmB,QAASlB,EAAIuG,cAAe,IAAK,6BAC1CpF,MAAM,SAACC,GACJC,QAAQC,IAAI,4DACZD,QAAQE,IAAIH,MAKpBnB,KAAKkO,KAAS,WAaV,MAVIN,KAEAA,EAAOO,aACP/M,QAAQC,IAAI,qDAKhBuM,EAAS/M,OAEFf,EAAGmB,QAASlB,EAAIuG,cAAe,IAAK,4BAC1CpF,MAAM,SAACC,GACJC,QAAQC,IAAI,2DACZD,QAAQE,IAAIH,MAMpBnB,KAAKoO,IAAM,SAACC,GAGR,MAAIT,IAEAA,EAAOU,KAAK,UAAWD,GAChBvO,EAAGmB,SAAQ,GACjBC,MAAM,SAASC,GACZC,QAAQC,IAAI,0DACZD,QAAQE,IAAIH,OAMhBpB,EAAIqJ,MAAO,kDAAmD,4HACvDtJ,EAAG4D,QAAO,GAChBxC,MAAM,SAASC,GACZC,QAAQC,IAAI,0DACZD,QAAQE,IAAIH,OASxBnB,KAAKuO,OAAS,SAACC,EAAKC,EAAMC,GAGtB,GAAId,EAAQ,CAER,GAAIpM,EAYJ,OAVIA,GADAuK,MAAMC,QAAQwC,GACRA,GAGFG,UAAWH,EACX3I,QAAS4I,EACTG,SAAUF,GAIlBd,EAAOU,KAAK,UAAW9M,GAChB1B,EAAGmB,QAAQlB,EAAIuG,cAAe,IAAK,+BACzCpF,MAAM,SAASC,GACZC,QAAQC,IAAI,8DACZD,QAAQE,IAAIH,KAOhB,MADApB,GAAIqJ,MAAO,kDAAmD,4HACvDtJ,EAAG4D,QAAO,GAChBxC,MAAM,SAASC,GACZC,QAAQC,IAAI,0DACZD,QAAQE,IAAIH,MAQxBnB,KAAK6O,QAAU,SAACC,EAAUtL,EAAMkL,GAE5B,MAAO5O,GAAI,SAACmB,EAASyC,GAGbkK,GAAQ,WAER,GAAIpM,KAGCkN,GAEM3C,MAAMC,QAAQ8C,IAGrBA,EAAStK,QAAS,SAACuK,GAEXhP,EAAI8K,YAAYkE,GAEhBvN,EAAIkD,MACAiK,UAAWI,EACXlJ,QAASrC,EACTkL,OAAQA,IAKZ3O,EAAIwF,OAAO,+DAAiEwJ,EAAU,aAAa,WAZ3GpB,GAkBAC,EAAOU,KAAK,UAAW9M,GACvBP,EAAQlB,EAAIuG,cAAe,IAAK,sCAGhCvG,EAAIwF,OAAO,8JAA8J,UA1BzKxF,EAAIqJ,MAAM,oDAAoD,iGAgClErJ,EAAIqJ,MAAO,kDAAmD,4HAC9D1F,EAAO3D,EAAIuG,cAAe,IAAK,2CAgBlD3G,QAAQ,OAET,WAGIK,KAAKoI,KAAO,SAAS5E,GACjB,MAAO+E,GAAEH,MACLC,OAAQ,MACRpI,IAAK,OACLuD,KAAMA,KAKfxD,KAAKoN,KAAO,SAAS5J,GAChB,MAAO+E,GAAEH,MACLC,OAAQ,OACPpI,IAAK,QACLuD,KAAMA,QAOlB7D,QAAQ,QACN,QAAQ,gBAAgB,KAC1B,SAASC,EAAMoP,EAAclP,GAE3B,GAAImP,GAAOjP,IAEXiP,GAAKC,QAAc,SAAUC,GAExB,MAAOrP,GAAI,SAASmB,EAAQyC,GAExBzC,EAASrB,EAAMwP,SAASnL,QAAQoL,OAAOC,cAAgBH,GAAgBH,EAAcO,aAAiBP,EAAcO,aAAaC,MAAQ3O,WAKjJoO,EAAKQ,SAAaR,EAAKC,QAGvBD,EAAKS,SAAY,SAAUC,GAEvB,MAAO7P,GAAI,SAAUmB,EAAQyC,GAEzB9D,EAAMkE,KAAK,iBAAkB6L,GAC5B9C,QAAQ,SAASzG,GAEW,KAArBA,EAASA,SAETnF,EAASmF,EAAS5C,KAAKqC,SAIvBnC,EAAQ0C,EAAS5C,KAAKqC,WAK7BiH,MAAM,SAAS1G,GACZ1C,EAAQvB,KAAKC,WAAegE,GAAiBA,EAAS5C,KAAU4C,EAAS5C,KAAKqC,QAAuBO,IAAc,sDAM/H6I,EAAKW,SAAYX,EAAKS,SAGtBT,EAAKY,MAAY,SAAUF,GAEvB,MAAO7P,GAAI,SAAUmB,EAAQyC,GAEzB9D,EAAMkE,KAAK,eAAgB6L,GAC1B9C,QAAQ,SAASzG,GAEW,KAArBA,EAASA,UAET4I,EAAcO,aAAkBnJ,EAAS5C,KAAKqC,QAE9CoJ,EAAKC,QAAS9I,EAAS5C,KAAKqC,QAAQ2J,OAEpCvO,EAASmF,EAAS5C,KAAKqC,UAIvBnC,EAAQ0C,EAAS5C,KAAKqC,WAK7BiH,MAAM,SAAS1G,GACZ1C,EAAQvB,KAAKC,WAAegE,GAAiBA,EAAS5C,KAAU4C,EAAS5C,KAAKqC,QAAuBO,IAAc,sDAM/H6I,EAAKa,MAAYb,EAAKY,MAGtBZ,EAAKc,OAAY,WAEb,MAAOjQ,GAAI,SAASmB,EAAQyC,SAEjBsL,GAAcO,aACrBN,EAAKC,QAAQrO,QACZsD,KAAKlD,MAKdgO,EAAKe,OAAYf,EAAKc,UAOzBpQ,QAAQ,cACN,QAAQ,gBAAgB,KAC1B,SAASC,EAAMoP,EAAclP,GAE3B,GAAImQ,GAASjQ,IAEbiQ,GAAOhQ,IAAc,oBAErBgQ,EAAOC,OAAc,SAAUC,GAE3B,MAAOrQ,GAAI,SAACmB,EAAQyC,GAEfuM,EAAOhQ,IAASkQ,EAChB/O,QAAQC,IAAR,yCAAqD8O,GACrDlP,EAAQkP,MAKjBF,EAAOG,QAAcH,EAAOC,OAG5BD,EAAOf,QAAc,SAAUC,GAE1B,MAAOrP,GAAI,SAASmB,EAAQyC,GAExBzC,EAASrB,EAAMwP,SAASnL,QAAQoL,OAAOC,cAAgBH,GAAgBH,EAAcO,aAAiBP,EAAcO,aAAaC,MAAQ3O,WAKjJoP,EAAOR,SAAeQ,EAAOf,QAG7Be,EAAOP,SAAY,SAAUC,GAEzB,MAAO7P,GAAI,SAAUmB,EAAQyC,GAEzB9D,EAAMkE,KAAQmM,EAAOhQ,IAArB,iBAA0C0P,GACzC9C,QAAQ,SAASzG,GAEW,KAArBA,EAASA,SAETnF,EAASmF,EAAS5C,KAAKqC,SAIvBnC,EAAQ0C,EAAS5C,KAAKqC,WAK7BiH,MAAM,SAAS1G,GACZ1C,EAAQvB,KAAKC,WAAegE,GAAiBA,EAAS5C,KAAU4C,EAAS5C,KAAKqC,QAAuBO,IAAc,sDAM/H6J,EAAOL,SAAeK,EAAOP,SAG7BO,EAAOJ,MAAiB,SAAUF,GAE9B,MAAO7P,GAAI,SAAUmB,EAAQyC,GAEzB9D,EAAMkE,KAAQmM,EAAOhQ,IAArB,eAAwC0P,GACvC9C,QAAQ,SAASzG,GAEW,KAArBA,EAASA,UAET4I,EAAcO,aAAkBnJ,EAAS5C,KAAKqC,QAE9CoK,EAAOf,QAAS9I,EAAS5C,KAAKqC,QAAQ2J,OAEtCvO,EAASmF,EAAS5C,KAAKqC,UAIvBnC,EAAQ0C,EAAS5C,KAAKqC,WAK7BiH,MAAM,SAAS1G,GACZ1C,EAAQvB,KAAKC,WAAegE,GAAiBA,EAAS5C,KAAU4C,EAAS5C,KAAKqC,QAAuBO,IAAc,sDAM/H6J,EAAOH,MAAWG,EAAOJ,MAGzBI,EAAOF,OAAiB,WAEpB,MAAOjQ,GAAI,SAASmB,EAAQyC,SAEjBsL,GAAcO,aACrBU,EAAOf,QAAQrO,QACdsD,KAAKlD,MAKdgP,EAAOD,OAAWC,EAAOF,UAK5BM,KACA,MAAO,MAAO,aAAc,SAAU,gBAAiB,MAAO,OAAO,aAAa,QAClF,SAAStQ,EAAK8I,EAAKyH,EAAYC,EAAQvB,EAAewB,EAAKvB,EAAMpP,EAAYD,GAGtE0Q,EAAWnQ,SAAeoQ,EAG1BD,EAAWG,QAAezB,EAG1BsB,EAAWvQ,IAAeA,EAG1BuQ,EAAWzH,IAAeA,EAG1ByH,EAAWI,SAGXJ,EAAWE,IAAeA,EAG1BF,EAAWrB,KAAeA,EAC1BqB,EAAWzQ,WAAeA,EAG1ByQ,EAAWI,MAAMC,KAAS,WAAA,MAAMJ,GAAOK,SAASvQ,MAAM,OAAO,GAAK,MAAQkQ,EAAOK,SAASvQ,MAAM,OAAO,GAAGA,MAAM,KAAK,IAIrHiQ,EAAWG,QAAQI,SAGnBP,EAAWI,MAAMI,SAAW,SAAC9P,GACzBI,QAAQC,IAAR,mBAA+BL,GAC/BsP,EAAWnQ,SAAS4Q,GAAG/P,IAI3BsP,EAAWI,MAAMM,UAAW,EAG5BV,EAAWI,MAAMO,QAAU,WAAA,QAAOX,EAAWI,MAAMM,UAGnDV,EAAWI,MAAMQ,OAAS,WAAA,MAA0C,IAAnCZ,EAAWG,QAAQI,MAAMM,QAG1Db,EAAWI,MAAMU,YAAc,SAACC,GAC5Bf,EAAWI,MAAMM,SAAWK,GAKhCf,EAAWI,MAAMY,MAAQ,iBACdhB,GAAWG,QAAQI,YACnBP,GAAWG,QAAQc,KAC1BjB,EAAWG,QAAQI,SACnBP,EAAWG,QAAQc,QACnBjB,EAAWI,MAAMU,aAAY,GAC7BlR,OAAOC,SAAW,OAIlB6O,EAAcO,eACd3P,EAAMwP,SAASnL,QAAQoL,OAAOC,cAAgBN,EAAcO,aAAaC,UAUpFgC,WAAW,qBACV,SAAU,SAAU,aAAa,QAAQ,KAC1C,SAASC,EAAQlB,EAAQD,EAAY1Q,EAAME,GAGpC2R,EAAOC,WACPD,EAAOE,MAIPrB,EAAWxP,OACXwP,EAAWxP,IAAI8Q,OACftB,EAAWuB,SAEXJ,EAAO3Q,IAAIgR,YAAa,EAIxBL,EAAOM,YAAc,SAACD,GACdA,KAAe,EAAQL,EAAO3Q,IAAIgR,YAAa,EAAgBL,EAAO3Q,IAAIgR,YAAa,GAI/FxB,EAAWvQ,IAAIiS,OAAS,WACpBP,EAAOtR,SAASwQ,KAAK,aAKzBL,EAAW2B,KAAO,SAAAC,GAAA,MAAKA,MAGvB5B,EAAW/O,OAAS,SAAEC,EAAK6C,EAAMI,GAE7B,GAAoB,IAAhBJ,EAAKe,OACL5D,EAAI6C,EAAK,IAAMI,MACd,CACD,GAAIhD,GAAU4C,EAAK8N,OACnB3Q,GAAIC,GAAU6O,EAAW/O,OAA4B,mBAAdC,GAAIC,MAA6BD,EAAIC,GAAM4C,EAAMI,GAG5F,MAAOjD,IAGX8O,EAAWzO,QAAWyO,EAAW/O,OAKjC+O,EAAW8B,OAAS,SAACC,GAEjB,GAAIC,GAAQpS,OAAOC,SAASC,KAAKC,MAAM,KAEnCkS,EAAOD,EAAOA,EAAMlN,OAAS,EAE7BqM,GAAOI,MAAMW,QAAQD,IAAS,GAE9BjC,EAAW2B,KAAKI,IAYxBZ,EAAOgB,OACPhB,EAAOiB,SACPjB,EAAOkB,WACPlB,EAAOmB,WACPnB,EAAOjO,QAEPiO,EAAOjO,KAAKsM,SACZ2B,EAAOjO,KAAKqN,SAEZP,EAAWI,MAAMU,aAAY,GAC7BK,EAAOoB,SAAU,EAGjBpB,EAAOqB,YAAc,SAASC,GAC1BxC,EAAOQ,GAAG,OAAOgC,IAErBtB,EAAOuB,aAAevB,EAAOqB,YAG7BrB,EAAOwB,KAAO,SAASC,GACnB3C,EAAOQ,GAAGmC,IAEdzB,EAAO0B,MAAW1B,EAAOwB,KAGzBxB,EAAO2B,UAAe,YAAY,UAElC3B,EAAO4B,eAAiB,SAAUC,GAQ9B,MAPChP,QAAOD,KAAMiP,GACZ9O,QAAS,SAAA+O,GACH9B,EAAO2B,SAAUZ,QAASe,KAAe,IACzCD,EAAUC,GAAa1S,aAChByS,GAAUC,MAGlBD,GAEX7B,EAAO+B,gBAAqB/B,EAAO4B,eAInC5B,EAAOgB,IAAM,SAACgB,EAAOjQ,EAAMkQ,EAAapK,GAEpC,MAAOxJ,GAAI,SAACmB,EAASyC,GAGjBF,EAAuBA,EAAQiO,EAAO1R,IAAIsC,KAAKmB,MAC/CA,EAAK6C,QAAiB,MACtB7C,EAAKiQ,MAA2B5S,QAAT4S,EAAsBA,EAAM7Q,WAAW+F,QAAQ,QAAS,IAAM,GACrFnF,EAAKgM,MAAiBhM,EAAKgM,OAASiC,EAAOhB,QAAQI,MAAM8C,EACzDnQ,EAAKoQ,OAAkBpQ,GAAUA,EAAKoQ,OAAUpQ,EAAKoQ,OAAOjL,QAAQ,YAAa,IAAmB9H,OAG/F6S,GACDA,EAAYrT,MAAM,KACjBmE,QAAQ,SAACqP,GACHrQ,EAAKqQ,KACJrQ,EAAKqQ,GAAcpC,EAAO1R,IAAIyC,IAAIgB,EAAKqQ,OAMnDpC,EAAO1R,IAAIoN,GAAGsE,EAAO4B,eAAe7P,IACnCW,KAAK,SAAC2P,GAIH,GAFAA,EAAIrC,EAAO1R,IAAIsC,KAAKyR,GAEF,KAAdA,EAAE1N,SAEFqL,EAAO1R,IAAIwF,OAAX,YAA8BuO,EAAEtQ,KAAKqC,QAArC,YAAyD,WAEzD4L,EAAOiB,MAAMe,GAASM,UAAWvQ,EAAKuQ,YAEtCtC,EAAOjO,KAAKiQ,EAAM7Q,WAAW+F,QAAQ,QAAS,QAG1C1H,EADCqI,GAAoB,kBAAPA,GACLA,EAAGwK,EAAEtQ,IAEN,OAGT,CAGH,GAAIuI,MAAMC,QAAQ8H,EAAEtQ,KAAKqC,SAAU,CAE/B,GAAIpB,GAAIqP,EAAEtQ,KAAKqC,QAAQ,GAAGP,MAAM,cAEvBzE,SAAL4D,GAAuB,MAALA,EAClBqP,EAAEtQ,KAAKqC,QAAUpB,EAAE,GAEnBqP,EAAEtQ,KAAKqC,QAAUiO,EAAEtQ,KAAKqC,QAAQ,GAMxC4L,EAAO1R,IAAIwF,OAAX,WAA8BuO,EAAEtQ,KAAKqC,QAArC,YAA0D,UAC1DnC,EAAQ+N,EAAO1R,IAAIoG,aAAa,IAAK1B,EAAE,WAevDgN,EAAOuC,OAAS,SAACP,EAAOjQ,EAAMkQ,EAAapK,GAEvC,MAAOxJ,GAAI,SAACmB,EAASyC,GAGjBF,EAAuBA,EAAQiO,EAAO1R,IAAIsC,KAAKmB,MAC/CA,EAAK6C,QAAiB,SACtB7C,EAAKiQ,MAA2B5S,QAAT4S,EAAsBA,EAAM7Q,WAAW+F,QAAQ,QAAS,IAAM,GACrFnF,EAAKgM,MAAiBhM,EAAKgM,OAASiC,EAAOhB,QAAQI,MAAM8C,EACzDnQ,EAAKoQ,OAAkBpQ,GAAUA,EAAKoQ,OAAUpQ,EAAKoQ,OAAOjL,QAAQ,YAAa,IAAmB9H,OAGhG6S,GACAA,EAAYrT,MAAM,KACjBmE,QAAQ,SAACqP,GACHrQ,EAAKqQ,KACJrQ,EAAKqQ,GAAcpC,EAAO1R,IAAIyC,IAAIgB,EAAKqQ,OAMnDpC,EAAO1R,IAAIoN,GAAGsE,EAAO4B,eAAe7P,IACnCW,KAAM,SAAC2P,GAIJ,GAFAA,EAAIrC,EAAO1R,IAAIsC,KAAKyR,GAEF,KAAdA,EAAE1N,SAEFqL,EAAO1R,IAAIwF,OAAX,YAA8BuO,EAAEtQ,KAAKqC,QAArC,YAAyD,WAEzD4L,EAAOiB,MAAMe,GAASM,UAAWvQ,EAAKuQ,YAEtCtC,EAAOjO,KAAKiQ,EAAM7Q,WAAW+F,QAAQ,QAAS,QAK1C1H,EADc,kBAAPqI,GACEA,EAAIwK,IAEL,OAGT,CAGH,GAAI/H,MAAMC,QAAQ8H,EAAEtQ,KAAKqC,SAAU,CAE/B,GAAIpB,GAAIqP,EAAEtQ,KAAKqC,QAAQ,GAAGP,MAAM,cAEvBzE,SAAL4D,GAAuB,MAALA,EAClBqP,EAAEtQ,KAAKqC,QAAUpB,EAAE,GAEnBqP,EAAEtQ,KAAKqC,QAAUiO,EAAEtQ,KAAKqC,QAAQ,GAKxC4L,EAAO1R,IAAIwF,OAAX,WAA8BuO,EAAEtQ,KAAKqC,QAArC,YAAyD,UACzDnC,EAAQ+N,EAAO1R,IAAIoG,aAAa,IAAK2N,EAAEtQ,KAAKqC,eAY5D,IAAIoO,GAAW,SAACR,EAAOjQ,EAAMkQ,GAEzB,MAAO5T,GAAI,SAACmB,EAASyC,GAGjBF,EAAsBA,EAAQiO,EAAO1R,IAAIsC,KAAKmB,MAC9CA,EAAK6C,QAAgB,MACrB7C,EAAKiQ,MAAgBA,EAErBrS,QAAQC,IAAI,sCAAwCoS,EAAQ,MAGxDC,GACAA,EAAYrT,MAAM,KACjBmE,QAAQ,SAACqP,GACJrQ,EAAKqQ,KACHrQ,EAAKqQ,GAAcpC,EAAO1R,IAAIyC,IAAIgB,EAAKqQ,OAMlDpC,EAAO1R,IAAIoN,GAAGsE,EAAO4B,eAAe7P,IACnCW,KAAM,SAAC2P,GAIL,GAFAA,EAAIrC,EAAO1R,IAAIsC,KAAKyR,GAEF,KAAdA,EAAE1N,SACFqL,EAAOkB,QAAQc,EAAM7Q,WAAW+F,QAAQ,QAAS,KAAOmL,EAAEtQ,KAAKqC,QAC/D4L,EAAOyC,SAGFjT,EAAQ6S,OAIV,CAGH,GAAI/H,MAAMC,QAAQ8H,EAAEtQ,KAAKqC,SAAU,CAE/B,GAAIpB,GAAIqP,EAAEtQ,KAAKqC,QAAQ,GAAGP,MAAM,cAEvBzE,SAAL4D,GAAuB,MAALA,EAClBqP,EAAEtQ,KAAKqC,QAAUpB,EAAE,GAEnBqP,EAAEtQ,KAAKqC,QAAUiO,EAAEtQ,KAAKqC,QAAQ,GAIxC4L,EAAO1R,IAAIwF,OAAX,WAA8BuO,EAAEtQ,KAAKqC,QAArC,YAAyD,UACzDnC,EAAQ+N,EAAO1R,IAAIoG,aAAa,IAAK2N,EAAEtQ,KAAKqC,eAU5D4L,GAAOiB,MAAQ,SAACe,EAAOjQ,EAAMkQ,EAAapK,GAEtC,IAAIyC,MAAMC,QAAQyH,GAef,MAAO3T,GAAGmB,QAASgT,EAASR,EAAOjQ,EAAMkQ,IACxCxS,MAAM,SAASC,GACZC,QAAQC,IAAI,4DACZD,QAAQE,IAAIH,IAlBO,IAAAgT,GAAA,WAEtB,GAAIC,GAAa,GAAIrI,MAUrB,OARA0H,GACCnT,OAAO,SAAAa,GAAA,MAAiB,mBAAPA,GAAE,KACnBqD,QAAS,SAAC6P,EAAOC,GACdF,EAAW1P,KAAMuP,EAASI,EAAM,GAAKA,EAAM,QAAaX,KAG5DU,EAAaA,EAAW9T,OAAO,SAAAa,GAAA,MAAc,mBAAJA,MAEzCsD,EAAO3E,EAAGyU,IAAKH,MAZO,OAAA,YAAA,mBAAAD,GAAA,YAAAjS,QAAAiS,IAAAA,EAAA1P,EAAA,QAyB9BgN,EAAO+C,IAAM,SAACf,EAAOjQ,EAAMkQ,EAAapK,GAEpC,MAAOxJ,GAAI,SAAC4D,EAAQzC,GAGhBuC,EAAmBA,EAAQiO,EAAO1R,IAAIsC,KAAKmB,MAC3CA,EAAK6C,QAAa,MAClB7C,EAAKiQ,MAAuB5S,QAAT4S,EAAsBA,EAAM7Q,WAAW+F,QAAQ,QAAS,IAAM,GACjFnF,EAAKgM,MAAahM,EAAKgM,OAASiC,EAAOhB,QAAQI,MAAM8C,EAGjDD,GACAA,EAAYrT,MAAM,KACjBmE,QAAQ,SAACqP,GACHrQ,EAAKqQ,KACJrQ,EAAKqQ,GAAcpC,EAAO1R,IAAIyC,IAAIgB,EAAKqQ,OAKnDpC,EAAO1R,IAAIoN,GAAGsE,EAAO4B,eAAe7P,IACnCW,KAAM,SAAC2P,GAIJ,GAFAA,EAAIrC,EAAO1R,IAAIsC,KAAKyR,GAEF,KAAdA,EAAE1N,SAEFqL,EAAO1R,IAAIwF,OAAX,WAA6BuO,EAAEtQ,KAAKqC,QAApC,YAAwD,WACxD4L,EAAOiB,MAAMe,GACbxS,EAAQ6S,OACL,CAGH,GAAI/H,MAAMC,QAAQ8H,EAAEtQ,KAAKqC,SAAU,CAE/B,GAAIpB,GAAIqP,EAAEtQ,KAAKqC,QAAQ,GAAGP,MAAM,cAEvBzE,SAAL4D,GAAuB,MAALA,EAClBqP,EAAEtQ,KAAKqC,QAAUpB,EAAE,GAEnBqP,EAAEtQ,KAAKqC,QAAUiO,EAAEtQ,KAAKqC,QAAQ,GAGxC4L,EAAO1R,IAAIwF,OAAX,WAA8BuO,EAAEtQ,KAAKqC,QAArC,YAAyD,UACzDnC,EAAQ+N,EAAO1R,IAAIoG,aAAa,IAAK2N,EAAEtQ,KAAKqC,gBAY5D4L,EAAO3B,MAAQ,SAAC+D,GAEZ,MAAO/T,GAAI,SAACmB,EAASyC,GAEbmQ,IACApC,EAAOjO,KAAKsM,MAAM+D,GAAcpC,EAAO1R,IAAIyC,IAAIiP,EAAOjO,KAAKsM,MAAM+D,KAGrEpC,EAAOjO,KAAKsM,MAAMzJ,QAAY,MAC9BoL,EAAOjO,KAAKsM,MAAM2D,MAAY,QAC9BhC,EAAOjO,KAAKsM,MAAM8D,OAAY,8BAG9BnC,EAAO1R,IAAIoN,GAAGsE,EAAO4B,eAAe5B,EAAOjO,KAAKsM,QAC/C3L,KAAK,SAAC2P,GAMH,GAJArC,EAAOjO,KAAKqN,MAAM+C,OAAS,GAE3BE,EAAIrC,EAAO1R,IAAIsC,KAAKyR,GAEF,KAAdA,EAAE1N,SAEE0N,EAAEtQ,KAAKqC,QAAQT,OAAS,GAAkC,UAA7BlD,QAAO4R,EAAEtQ,KAAKqC,QAAQ,KAE/CiO,EAAEtQ,KAAKqC,QAAQ,GAAf,UAAiC4L,EAAOjO,KAAKsM,MAAM2E,UACnDhD,EAAOhB,QAAQc,KAAOuC,EAAEtQ,KAAKqC,QAAQ,GACrC4L,EAAOoB,SAAU,UAEVpB,GAAOhB,QAAQc,KACtBrR,OAAOC,SAAW,OAGrBc,YAGMwQ,GAAOhB,QAAQc,KACtBE,EAAO1R,IAAIwF,OAAX,iEAAoF,eAGrF,CAGH,GAAIwG,MAAMC,QAAQ8H,EAAEtQ,KAAKqC,SAAU,CAE/B,GAAIpB,GAAIqP,EAAEtQ,KAAKqC,QAAQ,GAAGP,MAAM,cAEvBzE,SAAL4D,GAAuB,MAALA,EAClBqP,EAAEtQ,KAAKqC,QAAUpB,EAAE,GAEnBqP,EAAEtQ,KAAKqC,QAAUiO,EAAEtQ,KAAKqC,QAAQ,SAIjC4L,GAAOhB,QAAQc,KACtBE,EAAO1R,IAAIwF,OAAX,WAA8BuO,EAAEtQ,KAAKqC,QAArC,YAAyD,UACzDnC,EAAQ+N,EAAO1R,IAAIoG,aAAa,IAAK2N,EAAEtQ,KAAKqC,gBAY5D4L,EAAOiD,WAAa,SAACb,GAEjB,MAAO/T,GAAI,SAACmB,EAAQyC,GAEZmQ,IACApC,EAAOjO,KAAKqN,MAAMgD,GAAcpC,EAAO1R,IAAIyC,IAAIiP,EAAOjO,KAAKqN,MAAMgD,KAGrEpC,EAAOjO,KAAKqN,MAAMxK,QAAY,MAC9BoL,EAAOjO,KAAKqN,MAAM4C,MAAY,SAC9BhC,EAAOjO,KAAKqN,MAAM+C,OAAY,8BAG9BnC,EAAO1R,IAAIoN,GAAGsE,EAAO4B,eAAe5B,EAAOjO,KAAKqN,QAC/C1M,KAAK,SAAC2P,GAMH,GAJArC,EAAOjO,KAAKqN,MAAM+C,OAAS,GAE3BE,EAAIrC,EAAO1R,IAAIsC,KAAKyR,GAEF,KAAdA,EAAE1N,SAEE0N,EAAEtQ,KAAKqC,QAAQT,OAAS,GAAkCvE,QAA7BqB,QAAO4R,EAAEtQ,KAAKqC,QAAQ,IAE/CiO,EAAEtQ,KAAKqC,QAAQ,GAAf,WAAkC4L,EAAOjO,KAAKqN,MAAMjC,UACpD6C,EAAOhB,QAAQI,MAAQiD,EAAEtQ,KAAKqC,QAAQ,GACtC4L,EAAOhB,QAAQI,MAAM8C,KACrBlC,EAAOhB,QAAQI,MAAM8C,EAAEpC,KAAOuC,EAAEtQ,KAAKqC,QAAQ,GAAG8O,WAChDlD,EAAOhB,QAAQI,MAAM8C,EAAElS,IAAMqS,EAAEtQ,KAAKqC,QAAQ,GAAG+I,SAC/C0B,EAAWI,MAAMU,aAAY,GAE7BnQ,EAAQ6S,WAEDrC,GAAOjO,KAAKqN,YACZY,GAAOhB,QAAQI,MACtBY,EAAOhB,QAAQI,SACf3Q,OAAOC,SAAW,WAClBc,EAAQ6S,WAILrC,GAAOjO,KAAKqN,YACZY,GAAOhB,QAAQI,MACtBY,EAAOhB,QAAQI,SACfY,EAAO1R,IAAIwF,OAAX,iEAAoF,UACpFrF,OAAOC,SAAW,WAClBuD,GAAO,QAGR,CAGH,GAAIqI,MAAMC,QAAQ8H,EAAEtQ,KAAKqC,SAAU,CAE/B,GAAIpB,GAAIqP,EAAEtQ,KAAKqC,QAAQ,GAAGP,MAAM,cACvBzE,SAAL4D,GAAuB,MAALA,EAClBqP,EAAEtQ,KAAKqC,QAAUpB,EAAE,GAEnBqP,EAAEtQ,KAAKqC,QAAUiO,EAAEtQ,KAAKqC,QAAQ,SAGjC4L,GAAOhB,QAAQI,MACtBY,EAAOhB,QAAQI,SACfY,EAAO1R,IAAIwF,OAAX,WAA8BuO,EAAEtQ,KAAKqC,QAArC,YAAyD,UACzDnC,EAAQ+N,EAAO1R,IAAIoG,aAAa,IAAK2N,EAAEtQ,KAAKqC,gBAW5D4L,EAAOmD,UAAY,WAEf,MAAO9U,GAAI,SAACmB,EAASyC,GAEb+N,EAAOhB,QAAQc,MACfE,EAAOjO,KAAKsM,MAAM2E,SAAWhD,EAAOhB,QAAQc,KAAKkD,SACjDhD,EAAOjO,KAAKsM,MAAMlB,SAAW6C,EAAOhB,QAAQc,KAAK3C,SACjD6C,EAAO3B,QACP7O,GAAQ,KAERwQ,EAAO1R,IAAIwF,OAAX,iEAAmF,UACnF7B,GAAO,OAQnB+N,EAAOzB,OAAS,WAKZ,MAHAyB,GAAOmD,WAAY,QACZnD,GAAOhB,QAAQc,KACtBrR,OAAOC,SAAW,MACXL,EAAGmB,SAAQ,GACjBC,MAAM,SAASC,GACZC,QAAQC,IAAI,6DACZD,QAAQE,IAAIH,MAMpBsQ,EAAO1Q,SAAW,SAACC,GAMf,MALIA,GACAd,OAAOC,SAAWa,EAElBd,OAAOC,SAAW,aAEfL,EAAGmB,SAAQ,GACjBC,MAAM,SAASC,GACZC,QAAQC,IAAI,+DACZD,QAAQE,IAAIH,MAKpBsQ,EAAOoD,UAAY,WAWf,MATIpD,GAAOhB,QAAQI,OAASY,EAAOjO,KAAKqN,MAAM8D,YAAclD,EAAOjO,KAAKqN,MAAMjC,UAC1E6C,EAAOjO,KAAKqN,SACZY,EAAOjO,KAAKqN,MAAM8D,WAAgBlD,EAAOhB,QAAQI,MAAM8D,WACvDlD,EAAOjO,KAAKqN,MAAMjC,SAAgB6C,EAAOhB,QAAQI,MAAMjC,SACvD6C,EAAOiD,cAEPjD,EAAOtR,SAAW,WAGfL,EAAGmB,SAAQ,GACjBC,MAAM,SAASC,GACZC,QAAQC,IAAI,gEACZD,QAAQE,IAAIH,MAMpBsQ,EAAOqD,YAAc,WAIjB,aAHOrD,GAAOhB,QAAQI,MACtBP,EAAWI,MAAMU,aAAY,GAC7BlR,OAAOC,SAAW,MACXL,EAAGmB,SAAQ,GACjBC,MAAM,SAASC,GACZC,QAAQC,IAAI,kEACZD,QAAQE,IAAIH,MAMpBsQ,EAAOsD,OAAS,SAACtB,EAAOjQ,EAAMkQ,EAAapK,GAEvC,MAAOxJ,GAAI,SAACmB,EAAQyC,GAGhBF,EAAmBA,EAAQiO,EAAO1R,IAAIsC,KAAKmB,MAC3CA,EAAK6C,QAAa,SAClB7C,EAAKgM,MAAahM,EAAKgM,OAASiC,EAAOhB,QAAQI,MAAM8C,EAGjDD,GACAA,EAAYrT,MAAM,KACjBmE,QAAQ,SAACqP,GACHrQ,EAAKqQ,KACJrQ,EAAKqQ,GAAcpC,EAAO1R,IAAIyC,IAAIgB,EAAKqQ,OAMnDpC,EAAO1R,IAAIoN,GAAGsE,EAAO4B,eAAe7P,IACnCW,KAAK,SAAC2P,GAIH,GAFAA,EAAIrC,EAAO1R,IAAIsC,KAAKyR,GAEF,KAAdA,EAAE1N,SAEFqL,EAAO1R,IAAIwF,OAAX,YAA8BuO,EAAEtQ,KAAKqC,SAAW,cAAhD,YAA0E,WAE1E4L,EAAOuD,SAASvB,EAAM7Q,WAAW+F,QAAQ,QAAS,KAAOmL,EAAEtQ,KAAKqC,QAChE4L,EAAOjO,KAAKiQ,EAAM7Q,WAAW+F,QAAQ,QAAS,QAC9C8I,EAAOyC,SAEPjT,EAAQ6S,OAEL,CAGH,GAAI/H,MAAMC,QAAQ8H,EAAEtQ,KAAKqC,SAAU,CAE/B,GAAIpB,GAAIqP,EAAEtQ,KAAKqC,QAAQ,GAAGP,MAAM,cACvBzE,SAAL4D,GAAuB,MAALA,EAClBqP,EAAEtQ,KAAKqC,QAAUpB,EAAE,GAEnBqP,EAAEtQ,KAAKqC,QAAUiO,EAAEtQ,KAAKqC,QAAQ,GAIxC4L,EAAO1R,IAAIwF,OAAX,WAA8BuO,EAAEtQ,KAAKqC,QAArC,aACAnC,EAAQ+N,EAAO1R,IAAIoG,aAAa,IAAK2N,EAAEtQ,KAAKqC;EAU5D4L,EAAOlF,MAAQ,SAACkH,EAAOjQ,EAAMkQ,EAAapK,GAEtC,MAAOxJ,GAAI,SAACmB,EAASyC,GAkBjBF,EAAmBA,EAAQiO,EAAO1R,IAAIsC,KAAKmB,MAC3CA,EAAKiQ,MAAaA,EAClBjQ,EAAK6C,QAAa,QAClB7C,EAAKgM,MAAahM,EAAKgM,UAGnBkE,GACAA,EAAYrT,MAAM,KACjBmE,QAAQ,SAACqP,GACHrQ,EAAKqQ,KACJrQ,EAAKqQ,GAAcpC,EAAO1R,IAAIyC,IAAIgB,EAAKqQ,OAMnDpC,EAAO1R,IAAIoN,GAAGsE,EAAO4B,eAAe7P,IACnCW,KAAK,SAAC2P,GAIH,GAFAA,EAAIrC,EAAO1R,IAAIsC,KAAKyR,GAEF,KAAdA,EAAE1N,SAEFqL,EAAOmB,QAAQa,EAAM7Q,WAAW+F,QAAQ,QAAS,KAAOmL,EAAEtQ,KAAKqC,QAC/D4L,EAAOjO,KAAKiQ,EAAM7Q,WAAW+F,QAAQ,QAAS,QAI9C1H,EAAQ6S,OAEL,CAGH,GAAI/H,MAAMC,QAAQ8H,EAAEtQ,KAAKqC,SAAU,CAC/B,GAAIpB,GAAIqP,EAAEtQ,KAAKqC,QAAQ,GAAGP,MAAM,cACvBzE,SAAL4D,GAAuB,MAALA,EAClBqP,EAAEtQ,KAAKqC,QAAUpB,EAAE,GAEnBqP,EAAEtQ,KAAKqC,QAAUiO,EAAEtQ,KAAKqC,QAAQ,GAGxC4L,EAAO1R,IAAIwF,OAAX,WAA8BuO,EAAEtQ,KAAKqC,QAArC,YAA0D,UAC1DnC,EAAQ+N,EAAO1R,IAAIoG,aAAa,IAAK2N,EAAEtQ,KAAKqC,gBAY5D4L,EAAOwD,KAAO,SAASC,GACnBzD,EAAO0D,QAAUD,EACjBzD,EAAOrF,SAAWqF,EAAOrF,SAO7BqF,EAAO2D,SAAW,SAAC5R,EAAMa,GACrB,GAAIA,EAIA,MAHAA,GAAKhE,MAAM,KAAKmE,QAAQ,SAAC/C,SACd+B,GAAK/B,KAET3B,EAAGmB,QAAQuC,GACjBtC,MAAM,SAASC,GACbC,QAAQC,IAAI,+DACZD,QAAQE,IAAIH,MAQvBsQ,EAAO4D,MAAQ,SAAC7T,EAAKC,EAAKC,GAEtB,MADAF,GAAIC,GAAOC,EACJF,GAEXiQ,EAAO6D,OAAW7D,EAAO4D,MAEzB5D,EAAO8D,SAAW,SAAE/T,EAAKC,EAAKC,GAAZ,MAAqB5B,GAAGmB,QAASwQ,EAAO4D,MAAO7T,EAAKC,EAAKC,KAC3E+P,EAAO+D,UAAY/D,EAAO8D,SAK1B9D,EAAOgE,SAAWhE,EAAO1R,IAAI2H,WAC7B+J,EAAOiE,QAAU,SAACC,GAAWlE,EAAOgE,SAAWE,GAC/ClE,EAAOmE,SAAWnE,EAAOiE,QAGzBjE,EAAOoE,UAAY,SAAUC,EAAQC,GAUjC,MARAD,GAAeA,MACfC,EAAgBA,EAAeA,EAAW1V,MAAM,QAEhD0V,EAAWvR,QAAQ,SAAArD,GACf2U,EAAQ3U,GAAK,WACN2U,GAAQ3U,KAGZ2U,GAGXrE,EAAOuE,WAAevE,EAAOoE,UAK7BpE,EAAOwE,UAAY,SAACC,EAAWC,EAAWC,EAAYL,GAElD,MAAOjW,GAAI,SAACmB,EAAQyC,GAEhBwS,EAAcA,MACdC,EAAcA,MACdC,EAAcA,GAAc,GAC5BL,EAAcA,GAAc,EAE5B,IAAInC,GAAU,GAEVyC,KACA5R,IAGJsR,GAAaA,EAAW1V,MAAM,KAAKC,OAAO,SAAAa,GAAA,MAAKA,KAG/C4U,EAAWvR,QAAQ,SAAArD,GACfgV,EAAUhV,GAAK,WACRgV,GAAUhV,KAIrBiV,EACK/V,MAAM,KACNmE,QAAQ,SAACrD,EAAGuL,GACT,GAAI4J,GAAInV,EAAEd,MAAM,IAChBgW,GAAE3J,GAAM4J,EAAE,GACV7R,EAAEiI,GAAM4J,EAAE,IAIlB,IAAIjS,GAAOC,OAAOD,KAAK8R,EAGvBE,GAAE7R,QAAQ,SAACrD,EAAGuL,GAENrI,EAAKmO,QAAQrR,KAAM,IAEnBgV,EAAU1R,EAAEiI,IAAMyJ,EAAUhV,GAC5BgV,EAAUhV,GAAK,WACRgV,GAAUhV,MAOzBkV,EAAI/R,OAAOD,KAAK8R,GAChB1R,EAAI,KAEJ4R,EAAE7R,QAAQ,SAACrD,EAAGuL,GAEV,GAAI6J,GAAQ5U,MAAMwU,EAAUhV,IAAiC,IAAMgV,EAAUhV,GAAI,IAA7CS,SAASuU,EAAUhV,GACvDyS,IAAU,IAAMzS,EAAI,IAAMoV,EAAK,SAInCF,EAAI,KAGJH,EAAUtC,OAASA,EAAOjL,QAAQ,QAAS,IAE3C1H,EAASiV,MAKjBzE,EAAO+E,WAAe,SAACN,EAAWC,EAAWC,EAAYL,GAErD,MAAOjW,GAAI,SAACmB,EAAQyC,GAEhBwS,EAAcA,MACdC,EAAcA,MACdC,EAAcA,IAAe,GAAG,IAChCL,EAAcA,IAAe,GAAG,GAEhC,IACInC,GAAU,GAEV6C,KACAC,KACAC,KACAC,IAGJ,IAAK7K,MAAMC,QAASoK,IAAiBrK,MAAMC,QAAS+J,GAE/C,CAGD,GAAIc,GAAoBd,EAAW,GAAG1V,MAAM,KAAKC,OAAO,SAAAa,GAAA,MAAKA,KACzD2V,EAAoBf,EAAW,GAAG1V,MAAM,KAAKC,OAAO,SAAAa,GAAA,MAAKA,IAG7D0V,GAAkBrS,QAAQ,SAAArD,GACtB+U,EAAU/U,GAAK,WACR+U,GAAU/U,KAIrB2V,EAAkBtS,QAAQ,SAAArD,GACtBgV,EAAUhV,GAAK,WACRgV,GAAUhV,IAMrB,IAAI4V,GAAoBX,EAAW,GAAG/V,MAAM,KACxC2W,EAAoBZ,EAAW,GAAG/V,MAAM,IAG5C0W,GAAkBvS,QAAQ,SAACrD,EAAGuL,GAC1B,GAAI4J,GAAInV,EAAEd,MAAM,IAChBoW,GAAS/J,GAAM4J,EAAE,GACjBK,EAASjK,GAAM4J,EAAE,KAIrBU,EAAkBxS,QAAQ,SAACrD,EAAGuL,GAC1B,GAAI4J,GAAInV,EAAEd,MAAM,IAChBqW,GAAShK,GAAM4J,EAAE,GACjBM,EAASlK,GAAM4J,EAAE,IAIrB,IAAIW,GAAc3S,OAAOD,KAAK8R,GAC1Be,EAAc5S,OAAOD,KAAK6R,EAG9BO,GAASjS,QAAQ,SAACrD,EAAGuL,GAEbwK,EAAY1E,QAAQrR,KAAM,IAI1B+U,EAAUS,EAASjK,IAAMwJ,EAAU/U,GACnC+U,EAAU/U,GAAK,WACR+U,GAAU/U,MAOzBuV,EAASlS,QAAQ,SAACrD,EAAGuL,GAEbuK,EAAYzE,QAAQrR,KAAM,IAI1BgV,EAAUS,EAASlK,IAAMyJ,EAAUhV,GACnCgV,EAAUhV,GAAK,WACRgV,GAAUhV,MAOzBuV,EAAW,KAEXA,EAAWpS,OAAOD,KAAK8R,GACvBS,EAAW,KAEXF,EAASlS,QAAQ,SAACrD,EAAGuL,GAEjB,GAAI6J,GAAQ5U,MAAMwU,EAAUhV,IAAiC,IAAMgV,EAAUhV,GAAI,IAA7CS,SAASuU,EAAUhV,GACvDyS,IAAU,IAAMzS,EAAI,IAAMoV,EAAK,SAInCG,EAAW,KAEXR,EAAUtC,OAASA,EAAOjL,QAAQ,QAAS,IAE3C1H,EAASiV,OA1FTxS,GAAO,sIA2GtB+N,EAAO9R,WACP8R,EAAO0F,UAEP1F,EAAO2F,YAAc,SAACC,GACzB5F,EAAO9R,QAAQ2X,WAAY,EAC3B7F,EAAO9R,QAAQ+R,QAAY2F,GAIxB5F,EAAO8F,WAAa,SAACF,GACxB5F,EAAO0F,OAAOG,WAAY,EAC1B7F,EAAO0F,OAAOzF,QAAY2F,GAKvB5F,EAAO+F,QAAU,SAAC/D,EAAMjQ,GAEjB,GAAIA,GAAcA,IAASiU,MAAOhG,EAAOhB,QAAQc,KAAKkD,SACtDjR,GAAmBA,EAAMiO,EAAO1R,IAAIsC,KAAKmB,MACzCA,EAAKiQ,MAAaA,GAAS,WAC3BjQ,EAAK6C,QAAa,QAClB7C,EAAKgM,SAELiC,EAAO1R,IAAIoN,GAAIsE,EAAO4B,eAAe7P,IACpCW,KAAM,SAAC2P,GAIJ,GAFAA,EAAIrC,EAAO1R,IAAIsC,KAAKyR,GAEH,KAAdA,EAAE1N,SAEG0N,EAAEtQ,KAAKqC,SACP4L,EAAO1R,IAAIwF,OAAQuO,EAAEtQ,KAAKqC,QAAU,WAGxC4L,EAAOmB,QAAQpP,EAAKiQ,MAAM7Q,WAAW+F,QAAQ,QAAQ,KAAOmL,EAAEtQ,KAAKqC,YAElE,CAGD,GAAGkG,MAAMC,QAAQ8H,EAAEtQ,KAAKqC,SAAS,CAC7B,GAAIpB,GAAKqP,EAAEtQ,KAAKqC,QAAQ,GAAGP,MAAM,cACxBzE,SAAL4D,GAAqB,MAAHA,EAClBqP,EAAEtQ,KAAKqC,QAAUpB,EAAE,GAEnBqP,EAAEtQ,KAAKqC,QAAUiO,EAAEtQ,KAAKqC,QAAQ,OAGpCiO,GAAEtQ,KAAKqC,OAGXuD,OAAAA,WAAkB0K,EAAEtQ,KAAKqC,QAAzB,iBAYhB4L,EAAOjO,KAAKsM,MAAc2B,EAAOjO,KAAKsM,UAEtC2B,EAAOjO,KAAKkU,GAAcjG,EAAOjO,KAAKkU,OAEtCjG,EAAOkG,QAGPlG,EAAOmG,YACPnG,EAAOoG,WAAapG,EAAOmG,SAG3BnG,EAAOmG,SAASE,WAAa,SAAUjS,GACnC4L,EAAO1R,IAAIwF,OAAO,yCAClBgL,EAAOQ,GAAG,cAEdU,EAAOoG,WAAWC,WAAcrG,EAAOmG,SAASE,WAChDrG,EAAOmG,SAASG,YAAgBtG,EAAOmG,SAASE,WAChDrG,EAAOoG,WAAWE,YAActG,EAAOmG,SAASE,WAGhDrG,EAAOmG,SAASI,aAAe,SAAUnS,GACrC4L,EAAO1R,IAAIwF,OAAO,gFAAgF,UAAU,KAC5GgL,EAAOQ,GAAG,cAEdU,EAAOoG,WAAWG,aAAmBvG,EAAOmG,SAASI,aACrDvG,EAAOmG,SAASK,cAAqBxG,EAAOmG,SAASI,aACrDvG,EAAOoG,WAAWI,cAAmBxG,EAAOmG,SAASI,aAGrDvG,EAAOmG,SAASM,SAAa,SAAUrS,GACnC4L,EAAO1R,IAAIqJ,MAAM,wCAAyCvD,IAE9D4L,EAAOoG,WAAWK,SAAczG,EAAOmG,SAASM,SAChDzG,EAAOmG,SAASO,UAAgB1G,EAAOmG,SAASM,SAChDzG,EAAOoG,WAAWO,SAAc3G,EAAOmG,SAASM,SAGhDzG,EAAOmG,SAASS,WAAe,SAAUxS,GACrC4L,EAAO1R,IAAIqJ,MAAM,uCAAwCvD,IAE7D4L,EAAOoG,WAAWQ,WAAgB5G,EAAOmG,SAASS,WAClD5G,EAAOmG,SAASU,YAAkB7G,EAAOmG,SAASS,WAClD5G,EAAOoG,WAAWS,YAAgB7G,EAAOmG,SAASS,WAGlD5G,EAAOmG,SAAS5T,SAAc,WAE1B,MAAOlE,GAAG,SAAS4D,EAAOzC,GAEtBrB,EAAMmN,IAAI,YACTF,QAAQ,SAASzG,GAEfnF,EAASwQ,EAAOjO,KAAKkU,GAAKtR,EAAS5C,KAAKqC,WAG1CiH,MAAM,SAASA,GAEZ2E,EAAOxC,KAAKc,SACX5L,KAAK,WAEFsN,EAAO1R,IAAIwF,OAAO,8GAA8G,UAChI7B,EAAQ6M,EAAOQ,GAAG,qBAUlCU,EAAOoG,WAAW7T,SAAc,WAE5B,MAAOlE,GAAG,SAAS4D,EAAOzC,GAEtBG,QAAQC,IAAI,2CAEZzB,EAAMmN,IAAO0E,EAAO5R,WAAWI,IAA/B,YACC4M,QAAQ,SAASzG,GAEfhF,QAAQC,IAAI,6BACZJ,EAASwQ,EAAOjO,KAAKkU,GAAKtR,EAAS5C,KAAKqC,WAG1CiH,MAAM,SAASA,GAEZ1L,QAAQC,IAAI,kCACZoQ,EAAOxC,KAAKc,SACX5L,KAAK,WAEFsN,EAAO1R,IAAIwF,OAAO,8GAA8G,UAChI7B,EAAQ6M,EAAOQ,GAAG,qBAWlCU,EAAOmG,SAASW,UAAc,WAE1B,MAAOzY,GAAI,SAASmB,EAASyC,GAEpB+N,EAAOhB,QAAQlB,aAaT3P,EAAMwP,SAASnL,QAAQoL,OAAOC,eAAgEzO,QAA/CjB,EAAMwP,SAASnL,QAAQoL,OAAOC,eAA6E,IAA/C1P,EAAMwP,SAASnL,QAAQoL,OAAOC,eAsBhJlO,QAAQC,IAAI,kEAEc,aAAvBkP,EAAOmB,QAAQxL,KACfjF,EAASsP,EAAOQ,GAAG,cAElB9P,MAzBAG,QAAQC,IAAI,oDAEZoQ,EAAOxC,KAAKC,QAASrO,QACpBsD,KAAK,WAEF/C,QAAQC,IAAR,+CAA2DzB,EAAMwP,SAASnL,QAAQoL,OAAOC,cAAzF,MAE0B,aAAvBiB,EAAOmB,QAAQxL,KACdjF,EAASsP,EAAOQ,GAAG,cAEnB9P,QAvBZG,QAAQC,IAAI,wCAEc,aAAvBkP,EAAOmB,QAAQxL,OAEd9E,QAAQC,IAAI,+CAEZoQ,EAAO1R,IAAIwF,OAAO,mFAAmF,UACrG7B,EAAQ6M,EAAOQ,GAAG,mBAwClCU,EAAOmG,SAASY,YAAc/G,EAAOmG,SAASW,UAE9C9G,EAAOoG,WAAWU,UAAc,WAE5B,MAAOzY,GAAI,SAASmB,EAASyC,GAEzBtC,QAAQC,IAAI,yDAEPoQ,EAAOhB,QAAQlB,aAUT3P,EAAMwP,SAASnL,QAAQoL,OAAOC,eAAgEzO,QAA/CjB,EAAMwP,SAASnL,QAAQoL,OAAOC,eAA6E,IAA/C1P,EAAMwP,SAASnL,QAAQoL,OAAOC,cAkBtH,aAAvBiB,EAAOmB,QAAQxL,KACfjF,EAASsP,EAAOQ,GAAG,cAElB9P,IAnBAwQ,EAAO5R,WAAWqP,QAASrO,QAC1BsD,KAAK,WAEwB,aAAvBoM,EAAOmB,QAAQxL,KACdjF,EAASsP,EAAOQ,GAAG,cAEnB9P,MAfc,aAAvBsP,EAAOmB,QAAQxL,OAEduL,EAAO1R,IAAIwF,OAAO,mFAAmF,UACrG7B,EAAQ6M,EAAOQ,GAAG,kBAkClCU,EAAOoG,WAAWW,YAAgB/G,EAAOoG,WAAWU,aAIvDE,UAAU,kBACV,WACG,OACIC,SAAU,IACVC,QAAS,UACTC,KAAM,SAASC,EAAO9J,EAAS+J,EAAOC,GAElC,QAASC,KACLD,EAAQE,cAAclK,EAAQmK,QAGlCH,EAAQI,QAAU,WACdpK,EAAQmK,KAAKH,EAAQK,YAAc,KAGvCrK,EAAQsK,KAAK,oBAAqB,WAC9BR,EAAM3E,OAAO8E,SAM5BP,UAAU,aAAa,SAAS,SAASa,GAEtC,OACIZ,SAAU,IACVE,KAAO,SAASC,EAAM9J,EAAQjK,GAC1B,GAAIyU,GAAcD,EAAOxU,EAAK0U,WAC1BC,EAAcF,EAAMG,MACxB3K,GAAQsK,KAAK,SAAU,WACnBR,EAAM3E,OAAQ,WACVuF,EAAYZ,EAAM9J,EAAQ,GAAG4K,MAAM,aAStDC,QAAQ,kBAAkB,SAASC,GAIhCA,EAAgBC,YAAaC,QAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW","file":"../framify.min.js","sourcesContent":["angular.module('framify.js', [\n    'ui.router'\n    ,'framify-paginate'\n    ,'ngStorage'\n    ,'jsonFormatter'\n    ,'chart.js'\n    ,'ngAria'\n    ,'ngMaterial'\n    ,'ngMessages'\n])\n\n//@ Application running essentials\n.service(\"app\"\n,['$http','remoteAuth','$q'\n,function($http,remoteAuth,$q) {\n\n        var app = this;\n\n        //!SETUP THE APPLICATION BASICS\n        var url = window.location.href.split('/').filter(function(urlPortion) { return (urlPortion != '' && urlPortion != 'http:' && urlPortion != 'https:') });\n        let pathPos = window.location.href.split('/').filter(function(urlPortion) { return (urlPortion != '' ) });\n        \n        //! APP CONFIGURATIONS\n        this.scheme = pathPos[0];\n        this.ip     = url[0].split(':')[0];\n        this.port   = url[0].split(':')[1];\n        this.hlink  = `${this.scheme}//${this.ip}${( ( this.port != undefined ) ? \":\" + this.port : \"\" )}`;\n\n        //!APPLICATION URL\n        //this.url = \"http://41.89.162.4:3000\";\n        this.url = this.hlink;\n\n        var hlink = this.hlink;\n        \n        this.nav = [];\n\n        //@Perform simple redirects\n        this.redirect = (loc) => {\n            if (loc) {\n                window.location = loc\n            } else {\n                window.location = \"/\";\n            }\n            return $q.resolve(true)\n            .catch(function(e){\n                console.log(\"Encountered an error when processing the redirect function.\")\n                console.dir(e)\n            })\n        };\n\n        this.setVar     = ( obj, key, val ) => {\n\n            obj         = ( obj ) ? obj : {};\n            obj[key]    = ( !isNaN(val) ) ? parseInt(val) : val;\n            return obj;\n\n        };\n        \n        this.set_var \t= ( obj,key,val ) => {\n        \n\t    obj         = ( obj ) ? obj : {};\n            obj[key]    = val;\t\n            \n            return $q.resolve( obj);\t\n        \n        };\n\n        this.set = ( obj, key, value ) => {\n            obj[key] = value;\n        };\n\n        this.getval = ( obj, key ) => {\n            return obj[key]\n        };\n\n\n        //* CONDITIONALLY TRANSFORM TO STRING\n        this.str    = (obj) => (typeof(obj) === \"object\") ? JSON.stringify(obj) : obj;\n        this.stringify = ( obj ) => $q.resolve( app.str(obj) );\n\n        //* CONDITIONALLY TRANSFORM TO JSON\n        this.json   = (obj) => (typeof(obj) === \"object\") ? obj : JSON.parse(obj);\n        this.jsonify = (obj) => $q.resolve( app.json(obj) )\n\n        //* CONDITIONALLY RETURN AN MD5 HASH\n        this.md5    = (str) => (/^[a-f0-9]{32}$/gm.test(str)) ? str : CryptoJS.MD5(str).toString();\n        this.md5ify = (str) => $q.resolve( app.md5(str) );\n\n        //BASE64 ENCODE A STRING\n        this.base64_encode = (string) => CryptoJS.enc.Base64.stringify( CryptoJS.enc.Utf8.parse(string) );\n        this.base64_encodify    = (string) => $q.resolve( app.base64_encode( string ) );\n\n        //BASE64 DECODE A STRING\n        this.base64_decode = (encoded) => (CryptoJS.enc.Base64.parse(encoded)).toString(CryptoJS.enc.Utf8);\n        this.base64_decodify  = (encoded) => $q.resolve( app.base64_decode(encoded) );\n\n        //@ THE OFFICIAL FILE UPLOAD SERVICE\n        this.upload = (data, destination) => {\n\n            return $q( (resolve ,reject) => {\n                 //* create a formdata object\n                const fd = new FormData();\n\n                //* add the defined keys to the formdata object\n                for (var key in data) {\n                    fd.append(key, data[key]);\n                };\n\n                //* post the data to the /upload route of the running server\n                $http.post(`${hlink}/upload/${destination}`, fd, {\n\n                    transformRequest: angular.identity,\n\n                    //* ensure automatic content-type settng\n                    headers: { 'Content-Type': undefined }\n\n                }).then(d=>resolve(d));\n            });\n\n        };\n\n        //@ GET THE KEYS FROM AN OBJECT\n        this.keys   = obj=>Object.keys(obj);\n\n        this.vals   = obj => {\n            let vals =  [];\n            Object.keys(obj)\n            .forEach(v=>{\n                vals.push(obj[v])\n            })\n            return vals\n        }\n\n        //@ CREATE A COPY OF AN OBJECT\n        this.clone = (obj) => {\n\n            //* ensure that the object is defined\n            if (null == obj || \"object\" != typeof obj) return obj;\n\n            //* call the object constructor prototype\n            var copy = obj.constructor();\n\n            //* clone all attributes of the parent object into a new object\n            for (var attr in obj) {\n                if (obj.hasOwnProperty(attr)) copy[attr] = ( /^[0-9]+$/.test(obj[attr] ) )? parseInt(obj[attr]) : obj[attr] ;\n            }\n\n            //* return the newly created object\n            return copy;\n\n        };\n\n\n        //! PARSE AN INTEGER\n        this.parseInt = str => parseInt(str);\n\n        //! EMPTY CALLBACK\n        this.doNothing = () => {\n            return $q.resolve()\n            .catch(function(e){\n                console.log(\"Encountered an error when processing the donothing function.\")\n                console.dir(e)\n            });\n        };\n\n        //@ FIND NUMBERS IN A STRING\n        this.getNumbers = (str,firstOnly=true) => {\n            let numMatch = /\\d+/g\n            return (firstOnly) ? str.toString().match(numMatch)[0] : str.toString().match(numMatch) ;\n        };\n\n        //! SET A NOTIFICATION \n        this.notify = (notificationContent ,notificationClass ,notificationTimeout,position) => {\n\n            UIkit.notify({\n                message :`<center>${(notificationContent|| 'A blank notification was triggered.')}</center>`,\n                status  : notificationClass || 'info',\n                timeout : notificationTimeout || 6000,\n                pos     : 'top-center' || position\n            });\n\n            return $q.resolve(true)\n            .catch(function(e){\n                console.dir(e)\n            });\n            \n        };\n\n        var notify = this.notify;\n\n        this.countries = [{ name: \"Afghanistan\", value: \"1\" }, { name: \"Albania\", value: \"2\" }, { name: \"Algeria\", value: \"3\" }, { name: \"American Samoa\", value: \"4\" }, { name: \"Andorra\", value: \"5\" }, { name: \"Angola\", value: \"6\" }, { name: \"Anguilla\", value: \"7\" }, { name: \"Antarctica\", value: \"8\" }, { name: \"Antigua and Barbuda\", value: \"9\" }, { name: \"Argentina\", value: \"10\" }, { name: \"Armenia\", value: \"11\" }, { name: \"Aruba\", value: \"12\" }, { name: \"Australia\", value: \"13\" }, { name: \"Austria\", value: \"14\" }, { name: \"Azerbaijan\", value: \"15\" }, { name: \"Bahamas\", value: \"16\" }, { name: \"Bahrain\", value: \"17\" }, { name: \"Bangladesh\", value: \"18\" }, { name: \"Barbados\", value: \"19\" }, { name: \"Belarus\", value: \"20\" }, { name: \"Belgium\", value: \"21\" }, { name: \"Belize\", value: \"22\" }, { name: \"Benin\", value: \"23\" }, { name: \"Bermuda\", value: \"24\" }, { name: \"Bhutan\", value: \"25\" }, { name: \"Bolivia\", value: \"26\" }, { name: \"Bosnia and Herzegowina\", value: \"27\" }, { name: \"Botswana\", value: \"28\" }, { name: \"Bouvet Island\", value: \"29\" }, { name: \"Brazil\", value: \"30\" }, { name: \"British Indian Ocean Territory\", value: \"31\" }, { name: \"Brunei Darussalam\", value: \"32\" }, { name: \"Bulgaria\", value: \"33\" }, { name: \"Burkina Faso\", value: \"34\" }, { name: \"Burundi\", value: \"35\" }, { name: \"Cambodia\", value: \"36\" }, { name: \"Cameroon\", value: \"37\" }, { name: \"Canada\", value: \"38\" }, { name: \"Cape Verde\", value: \"39\" }, { name: \"Cayman Islands\", value: \"40\" }, { name: \"Central African Republic\", value: \"41\" }, { name: \"Chad\", value: \"42\" }, { name: \"Chile\", value: \"43\" }, { name: \"China\", value: \"44\" }, { name: \"Christmas Island\", value: \"45\" }, { name: \"Cocos (Keeling) Islands\", value: \"46\" }, { name: \"Colombia\", value: \"47\" }, { name: \"Comoros\", value: \"48\" }, { name: \"Congo\", value: \"49\" }, { name: \"Congo, the Democratic Republic of the\", value: \"50\" }, { name: \"Cook Islands\", value: \"51\" }, { name: \"Costa Rica\", value: \"52\" }, { name: \"Cote d\\'Ivoire\", value: \"53\" }, { name: \"Croatia (Hrvatska)\", value: \"54\" }, { name: \"Cuba\", value: \"55\" }, { name: \"Cyprus\", value: \"56\" }, { name: \"Czech Republic\", value: \"57\" }, { name: \"Denmark\", value: \"58\" }, { name: \"Djibouti\", value: \"59\" }, { name: \"Dominica\", value: \"60\" }, { name: \"Dominican Republic\", value: \"61\" }, { name: \"East Timor\", value: \"62\" }, { name: \"Ecuador\", value: \"63\" }, { name: \"Egypt\", value: \"64\" }, { name: \"El Salvador\", value: \"65\" }, { name: \"Equatorial Guinea\", value: \"66\" }, { name: \"Eritrea\", value: \"67\" }, { name: \"Estonia\", value: \"68\" }, { name: \"Ethiopia\", value: \"69\" }, { name: \"Falkland Islands (Malvinas)\", value: \"70\" }, { name: \"Faroe Islands\", value: \"71\" }, { name: \"Fiji\", value: \"72\" }, { name: \"Finland\", value: \"73\" }, { name: \"France\", value: \"74\" }, { name: \"France Metropolitan\", value: \"75\" }, { name: \"French Guiana\", value: \"76\" }, { name: \"French Polynesia\", value: \"77\" }, { name: \"French Southern Territories\", value: \"78\" }, { name: \"Gabon\", value: \"79\" }, { name: \"Gambia\", value: \"80\" }, { name: \"Georgia\", value: \"81\" }, { name: \"Germany\", value: \"82\" }, { name: \"Ghana\", value: \"83\" }, { name: \"Gibraltar\", value: \"84\" }, { name: \"Greece\", value: \"85\" }, { name: \"Greenland\", value: \"86\" }, { name: \"Grenada\", value: \"87\" }, { name: \"Guadeloupe\", value: \"88\" }, { name: \"Guam\", value: \"89\" }, { name: \"Guatemala\", value: \"90\" }, { name: \"Guinea\", value: \"91\" }, { name: \"Guinea-Bissau\", value: \"92\" }, { name: \"Guyana\", value: \"93\" }, { name: \"Haiti\", value: \"94\" }, { name: \"Heard and Mc Donald Islands\", value: \"95\" }, { name: \"Holy See (Vatican City State)\", value: \"96\" }, { name: \"Honduras\", value: \"97\" }, { name: \"Hong Kong\", value: \"98\" }, { name: \"Hungary\", value: \"99\" }, { name: \"Iceland\", value: \"100\" }, { name: \"India\", value: \"101\" }, { name: \"Indonesia\", value: \"102\" }, { name: \"Iran (Islamic Republic of)\", value: \"103\" }, { name: \"Iraq\", value: \"104\" }, { name: \"Ireland\", value: \"105\" }, { name: \"Israel\", value: \"106\" }, { name: \"Italy\", value: \"107\" }, { name: \"Jamaica\", value: \"108\" }, { name: \"Japan\", value: \"109\" }, { name: \"Jordan\", value: \"110\" }, { name: \"Kazakhstan\", value: \"111\" }, { name: \"Kenya\", value: \"112\" }, { name: \"Kiribati\", value: \"113\" }, { name: \"Korea, Democratic People\\'s Republic of\", value: \"114\" }, { name: \"Korea, Republic of\", value: \"115\" }, { name: \"Kuwait\", value: \"116\" }, { name: \"Kyrgyzstan\", value: \"117\" }, { name: \"Lao, People\\'s Democratic Republic\", value: \"118\" }, { name: \"Latvia\", value: \"119\" }, { name: \"Lebanon\", value: \"120\" }, { name: \"Lesotho\", value: \"121\" }, { name: \"Liberia\", value: \"122\" }, { name: \"Libyan Arab Jamahiriya\", value: \"123\" }, { name: \"Liechtenstein\", value: \"124\" }, { name: \"Lithuania\", value: \"125\" }, { name: \"Luxembourg\", value: \"126\" }, { name: \"Macau\", value: \"127\" }, { name: \"Macedonia, The Former Yugoslav Republic of\", value: \"128\" }, { name: \"Madagascar\", value: \"129\" }, { name: \"Malawi\", value: \"130\" }, { name: \"Malaysia\", value: \"131\" }, { name: \"Maldives\", value: \"132\" }, { name: \"Mali\", value: \"133\" }, { name: \"Malta\", value: \"134\" }, { name: \"Marshall Islands\", value: \"135\" }, { name: \"Martinique\", value: \"136\" }, { name: \"Mauritania\", value: \"137\" }, { name: \"Mauritius\", value: \"138\" }, { name: \"Mayotte\", value: \"139\" }, { name: \"Mexico\", value: \"140\" }, { name: \"Micronesia, Federated States of\", value: \"141\" }, { name: \"Moldova, Republic of\", value: \"142\" }, { name: \"Monaco\", value: \"143\" }, { name: \"Mongolia\", value: \"144\" }, { name: \"Montserrat\", value: \"145\" }, { name: \"Morocco\", value: \"146\" }, { name: \"Mozambique\", value: \"147\" }, { name: \"Myanmar\", value: \"148\" }, { name: \"Namibia\", value: \"149\" }, { name: \"Nauru\", value: \"150\" }, { name: \"Nepal\", value: \"151\" }, { name: \"Netherlands\", value: \"152\" }, { name: \"Netherlands Antilles\", value: \"153\" }, { name: \"New Caledonia\", value: \"154\" }, { name: \"New Zealand\", value: \"155\" }, { name: \"Nicaragua\", value: \"156\" }, { name: \"Niger\", value: \"157\" }, { name: \"Nigeria\", value: \"158\" }, { name: \"Niue\", value: \"159\" }, { name: \"Norfolk Island\", value: \"160\" }, { name: \"Northern Mariana Islands\", value: \"161\" }, { name: \"Norway\", value: \"162\" }, { name: \"Oman\", value: \"163\" }, { name: \"Pakistan\", value: \"164\" }, { name: \"Palau\", value: \"165\" }, { name: \"Panama\", value: \"166\" }, { name: \"Papua New Guinea\", value: \"167\" }, { name: \"Paraguay\", value: \"168\" }, { name: \"Peru\", value: \"169\" }, { name: \"Philippines\", value: \"170\" }, { name: \"Pitcairn\", value: \"171\" }, { name: \"Poland\", value: \"172\" }, { name: \"Portugal\", value: \"173\" }, { name: \"Puerto Rico\", value: \"174\" }, { name: \"Qatar\", value: \"175\" }, { name: \"Reunion\", value: \"176\" }, { name: \"Romania\", value: \"177\" }, { name: \"Russian Federation\", value: \"178\" }, { name: \"Rwanda\", value: \"179\" }, { name: \"Saint Kitts and Nevis\", value: \"180\" }, { name: \"Saint Lucia\", value: \"181\" }, { name: \"Saint Vincent and the Grenadines\", value: \"182\" }, { name: \"Samoa\", value: \"183\" }, { name: \"San Marino\", value: \"184\" }, { name: \"Sao Tome and Principe\", value: \"185\" }, { name: \"Saudi Arabia\", value: \"186\" }, { name: \"Senegal\", value: \"187\" }, { name: \"Seychelles\", value: \"188\" }, { name: \"Sierra Leone\", value: \"189\" }, { name: \"Singapore\", value: \"190\" }, { name: \"Slovakia (Slovak Republic)\", value: \"191\" }, { name: \"Slovenia\", value: \"192\" }, { name: \"Solomon Islands\", value: \"193\" }, { name: \"Somalia\", value: \"194\" }, { name: \"South Africa\", value: \"195\" }, { name: \"South Georgia and the South Sandwich Islands\", value: \"196\" }, { name: \"South Sudan\", value: \"197\" }, { name: \"Spain\", value: \"198\" }, { name: \"Sri Lanka\", value: \"199\" }, { name: \"St. Helena\", value: \"200\" }, { name: \"St. Pierre and Miquelon\", value: \"201\" }, { name: \"Sudan\", value: \"202\" }, { name: \"Suriname\", value: \"203\" }, { name: \"Svalbard and Jan Mayen Islands\", value: \"204\" }, { name: \"Swaziland\", value: \"205\" }, { name: \"Sweden\", value: \"206\" }, { name: \"Switzerland\", value: \"207\" }, { name: \"Syrian Arab Republic\", value: \"208\" }, { name: \"Taiwan, Province of China\", value: \"209\" }, { name: \"Tajikistan\", value: \"210\" }, { name: \"Tanzania, United Republic of\", value: \"211\" }, { name: \"Thailand\", value: \"212\" }, { name: \"Togo\", value: \"213\" }, { name: \"Tokelau\", value: \"214\" }, { name: \"Tonga\", value: \"215\" }, { name: \"Trinidad and Tobago\", value: \"216\" }, { name: \"Tunisia\", value: \"217\" }, { name: \"Turkey\", value: \"218\" }, { name: \"Turkmenistan\", value: \"219\" }, { name: \"Turks and Caicos Islands\", value: \"220\" }, { name: \"Tuvalu\", value: \"221\" }, { name: \"Uganda\", value: \"222\" }, { name: \"Ukraine\", value: \"223\" }, { name: \"United Arab Emirates\", value: \"224\" }, { name: \"United Kingdom\", value: \"225\" }, { name: \"United States\", value: \"226\" }, { name: \"United States Minor Outlying Islands\", value: \"227\" }, { name: \"Uruguay\", value: \"228\" }, { name: \"Uzbekistan\", value: \"229\" }, { name: \"Vanuatu\", value: \"230\" }, { name: \"Venezuela\", value: \"231\" }, { name: \"Vietnam\", value: \"232\" }, { name: \"Virgin Islands (British)\", value: \"233\" }, { name: \"Virgin Islands (U.S.)\", value: \"234\" }, { name: \"Wallis and Futuna Islands\", value: \"235\" }, { name: \"Western Sahara\", value: \"236\" }, { name: \"Yemen\", value: \"237\" }, { name: \"Yugoslavia\", value: \"238\" }, { name: \"Zambia\", value: \"239\" }, { name: \"Zimbabwe\", value: \"240\" }];\n\n\n        //! BASIC FRAMIFY FORMAT RESPONSE FORMATTER\n        this.makeResponse = (response ,message ,command) => {\n\n            return {\n                response: response,\n                data: {\n                    message: message,\n                    command: command\n                }\n            };\n\n        };\n        this.make_response  = this.makeResponse;\n\n        //!DATE FORMATERS\n        //* date object     \n        this.date           = () => new Date();\n\n        //* simple date\n        this.newDate        = () => new Date().toDateString();\n        this.new_date       = this.newDate;\n\n        //* isodate\n        this.isoDate        = () => new Date().format('isoDate');\n        this.iso_date       = this.isoDate;\n\n        //* get the isoDate of the specified date\n        this.getIsoDate     = (d) => new Date(d).format('isoDate');\n        this.get_iso_date   = this.getIsoDate;\n\n        //* get the isoDate of a date object\n        this.toIsoDate      = dObj => dObj.format('isoDate');\n        this.to_iso_date    = this.toIsoDate;\n\n        //* custom datetime\n        this.dateTime       = () => new Date().format('dateTime');\n        this.date_time      = this.dateTime;\n\n        //* set the date in the custom datetime format\n        this.getDateTime    = d => new Date(d).format('dateTime');\n        this.get_date_time  = this.getDateTime;\n\n        //* Convert a date to the dd-mm-yyyy hh:mm format\n        this.toDateTime     = dObj => dObj.format('dateTime');\n        this.to_date_time   = this.toDateTime;\n\n        //* month number\n        this.monthNum       = () => new Date().format('monthNum');\n        this.month_num      = this.monthNum;\n\n        //* get month number of the specified date\n        this.getMonthNum    = d => new Date(d).format('monthNum');\n        this.get_month_num  = this.getMonthNum;\n\n        //* get date objects' month number\n        this.toMonthNum     = dObj => dObj.format('monthNum');\n        this.to_month_num   = this.toMonthNum;\n\n        //* MONTHS ARRAY\n        var $month_array = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n        this.month_array = $month_array;\n        this.month_o_array = [\n            { id: 0, name: \"January\" }\n            ,{ id: 1, name: \"February\" }\n            ,{ id: 2, name: \"March\" }\n            ,{ id: 3, name: \"April\" }\n            ,{ id: 4, name: \"May\" }\n            ,{ id: 5, name: \"June\" }\n            ,{ id: 6, name: \"July\" }\n            ,{ id: 7, name: \"August\" }\n            ,{ id: 8, name: \"September\" }\n            ,{ id: 9, name: \"October\" }\n            ,{ id: 10, name: \"November\" }\n            ,{ id: 11, name: \"December\" }\n        ];\n\n        // this.printMonths = () =>  $month_o_array\n        //                     .reduce((mobj,m)=>{\n        //                         mobj[m] = m   \n        //                     },{})\n        //                     .filter(m=>m)\n\n        //! HANDLE APPLICATION SERVICE REQUESTS\n        this.ajax = (method ,target ,data) => {\n\n            return $.ajax({\n                method: method || \"POST\"\n                ,url: target\n                ,data: data\n                ,dataType: 'jsonp'\n               ,headers: {'Access-Control-Allow-Origin': \"*\" }\n            });\n           \n        };\n\n        //!HANDLE JSON REQUESTS \n        this.getJSON = (target) => {\n\n            return $.getJSON( target.replace(/callback=?/ig,\"\") + '?callback=?');\n\n        };\n        this.get_json\t= this.getJSON;\n\n        //! HANDLE CORS CALLS WITH jsonp ENABLED\n        this.cgi = (method ,url ,data) => {\n\n            return $.ajax({\n                method: method || \"GET\"\n                ,url: url\n                ,data: data\n                ,dataType: 'jsonp'\n                ,headers: {'Access-Control-Allow-Origin': \"*\" }\n            });\n\n        };\n\n        //!HANDLE THE DISPLAY OF DIALOG BOXES\n\n        //* SHOW A \"LOADING\" ELEMENT\n        this.loadify = (duration, message) => {\n\n            return $q( (resolve,reject) => {\n                let modal = UIkit.modal.blockUI('<center><i style=\"color:blue;\" class=\"fa fa fa-spinner fa-pulse fa-5x fa-fw\"></i></center>'+( (message)?`<center><br>${message}</center>`:\"\" ) );\n                if( duration && !isNaN(duration)){\n                    setTimeout(()=>{\n                         modal.hide();\n                         resolve(true); \n                    }, duration ) ;\n                }else{\n                    resolve(modal);\n                }\n                \n            });\n\n        };\n        \n        //*GENERATE A CUSTOM ALERT DIALOG\n        this.alert = (title ,message ,cb) => {\n\n            UIkit.modal.alert(`<font color=\"#1976D2\" style=\"font-weight:bold;text-transform:uppercase;\">${title||'Notice'}</font>\n            <hr>\n            <center>${message||'</center><font color=red font-weight=bold; font-size=2em>Oops!</font><br>False alarm!<center>'}</center>`);\n\n            if( cb && typeof(cb) == \"function\" ){\n                return $q.resolve(cb(message))\n                .catch(function(e){\n                   console.log(\"Encountered an error when processing the alert function.\")\n                   console.dir(e)\n               });\n            }else{\n                return $q.resolve(true)\n                .catch(function(e){\n                   console.log(\"Encountered an error when processing the alert2 function.\")\n                   console.dir(e)\n               });\n            }\n\n        };\n            \n        //*GENERATE A CUSTOM CONFIRM DIALOG\n        this.confirm = ( title ,message ,cb ) => {\n            \n            return $q( (resolve) => {\n\n                UIkit.modal.confirm(`<font color=\"#1976D2\" style=\"font-weight:bold;text-transform:uppercase;\">${title||'Confirmation required.'}</font>\n                <hr>\n                <center>${message}</center>`,()=>{\n                    if(cb && typeof(cb) == \"function\"){\n                        resolve(cb(message));\n                    }else{\n                        resolve(true);\n                    }\n                });\n\n            });           \n            \n        };    \n            \n        //*GENERATE A CUSTOM PROMPT DIALOG\n        this.prompt = function( title ,label ,placeholder ,cb){\n          \n          return $q( (resolve) => {\n\n            UIkit.modal.prompt(`<font color=\"#1976D2\" style=\"font-weight:bold;text-transform:uppercase;\">${title||'Info required'}</font>\n            <hr>\n            ${label||'email'} :`, (placeholder||''), (userValue) => { \n                if(cb && typeof(cb) == \"function\"){\n                    resolve(cb(userValue)) \n                }else{\n                    resolve(userValue);\n                }\n            });\n\n          }); \n                      \n        };\n\n\n        //!BASIC VALIDATION METHODS\n\n        //*VALIDATE EMAIL ADDRESSES\n        this.isemail = /^[-a-z0-9~!$%^&*_=+}{\\'?]+(\\.[-a-z0-9~!$%^&*_=+}{\\'?]+)*@([a-z0-9_][-a-z0-9_]*(\\.[-a-z0-9_]+)*\\.(aero|arpa|biz|com|coop|edu|gov|info|int|mil|museum|name|net|org|pro|travel|mobi|[a-z][a-z])|([0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}))(:[0-9]{1,5})?$/;\n        this.isEmail = prospective_email => app.isemail.test(prospective_email);\n        this.is_email   = this.isEmail;\n\n        //*VALIDATE USERNAMES\n        this.isusername = /^[a-z0-9_-]{4,16}$/;\n        this.isUsername = prospective_username => app.isusername.test(prospective_username);\n        this.is_username    = this.isUsername;\n\n        //*VALIDATE PASSWORDS\n        this.ispassword = /^[-@./\\!\\$\\%\\^|#&,+\\w\\s]{6,50}$/;\n        this.isPassword = prospective_password => app.ispassword.test(prospective_password);\n        this.is_password    = this.isPassword;\n\n        //* VALIDATE NUMBERS\n        this.isnumber = /^-{0,1}\\d*\\.{0,1}\\d+$/;\n        this.isNumber = prospective_number => app.isnumber.test(prospective_number);\n        this.is_number  = this.isNumber;\n\n        //*VALIDATE TELEPHONE NUMBERS\n        this.istelephone = /^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/im;\n        this.isTelephone = prospective_telephone => app.istelephone.test(prospective_telephone);\n        this.is_telephone   = this.isTelephone;\n\n        //@ VALIDATE IMEI NUMBERS \n        this.isimei     = /^[0-9]{15}$/;\n        this.isImei     = prospective_imei => app.isimei.test(prospective_imei);\n        this.is_imei    = this.isImei;\n\n        //*VALIDATE DATETIME VALUES IN THE FORMAT  DD-MM-YYYY HH:MM e.g 29-02-2013 22:16\n        this.isdateTime = /^(0[1-9]|[12][0-9]|3[01])-(0[1-9]|1[012])-(19|20)[0-9]{2} (2[0-3]|[0-1][0-9]):[0-5][0-9]$/;\n        this.isDateTime = prospective_date=>app.isdateTime.test( prospective_date );\n        this.is_date_time   = this.isDateTime;\n\n        //*VALIDATE WHETHER TWO GIVEN VALUES MATCH\n        this.matches = (val1, val2) => (val1 === val2);\n\n        //*TRANFORM NUMBER TO MONTH\n        this.num2month = (month_number) => (!isNaN(month_number) && (month_number <= 11) )?$month_array[month_number]:\"Invalid Month\";\n\n        //*REMOVE DUPLICATES FROM ARRAY\n        this.unique = (array_) => {\n\n           if( !Array.isArray(array_) ){\n               app.notify('Could not remove duplicates from a non array object','danger');\n               return array_;\n           }else{\n\n               //* create a new array\n                var ret_array = new Array();\n\n                //* loop through the entire length of the provided array\n                for (var a = array_.length - 1; a >= 0; a--) {\n                    \n                    //* loop through the array once more (for re-verification)\n                    for (var b = array_.length - 1; b >= 0; b--) {\n                        //* de-populate duplicates in the array\n                        if (array_[a] == array_[b] && a != b) {\n                            delete array_[b];\n                        }\n                    };\n                    \n                    //* store the relevant values\n                    if (array_[a] != undefined){\n                        ret_array.push(array_[a]);\n                    }                    \n\n                };\n                //* return the reversed array (to avoid distortion from the initial)\n                return ret_array.reverse();\n\n           }\n        };\n\n        this.removeDuplicates = this.unique;\n        this.remove_duplicates = this.removeDuplicates;\n\n        //* COUNT OCCURANCES IN AN ARRAY\n        this.count = (searchParam ,arrayObject) => {\n \n\n            //@ Ensure that the Object to be searched is an array\n            if( Array.isArray( arrayObject ) ){\n\n                //@ Handle Multiple Item Searches\n                if(  Array.isArray(searchParam)  ){\n\n                    //@ The Required placeholder objects\n                    var i   = 0;\n                    var cnt = [];\n\n                    //@ Loop through each item in the search array\n                    for( var searchVal in searchParam  ){\n\n                        //@ Instantiate the counter object for this particular Item\n                        cnt[i]  =   0;\n\n                        //@ Loop through the array searching for the item\n                        for( var v in arrayObject ){\n\n                            //@ If the item is found, \n                            if( searchParam[searchVal] === arrayObject[v] ){\n                              \n                                //@ Increment the number of instances in the 'found' Array\n                                cnt[i]  = ( isNaN(cnt[i]) ) ? 1 : cnt[i]+=1 ; \n\n                            } \n\n                        }\n                        \n                        //@ Move to the next Item \n                        i++;\n\n                    }\n                    \n                    //@ Return the result to the client\n                    return cnt;\n\n\n                //@ Handle Single Item searches\n                }else{ \n\n                    //@ Instantiate the neede placeholders\n                    var cnt = 0;\n\n                    //@ Loop through the Array searching for the value\n                    for(var v in arrayObject) {\n\n                        //@ When a match is found\n                        if (searchParam === arrayObject[v]) {\n\n                            //@ Increment the number of occurences\n                            cnt += 1;\n\n                        }\n\n                    }\n\n                    //@ Return the 'number of occurences'\n                    return cnt;\n\n                }\n\n            //@ Object is not an array\n            }else{\n\n                app.notify(\"The object to perform an array count on is not an Array.\",\"danger\");\n\n            }\n\n            \n\n        };\n\n\n        //@ POST HTTP DATA HANDLER  \n        this.post   = ( destination, data ) => {\n\n            return $q( (resolve,reject) => {\n\n                $http.post(destination,data)\n                .success( resolve )\n                .error( reject )\n\n            });\n\n        };\n\n        //@ GET HTTP DATA HANDLER  \n        this.get   = ( destination, data ) => {\n\n            return $q( (resolve,reject) => {\n\n                $http.get(destination, {\n                        params: data\n                })\n                .success( resolve )\n                .error( reject )\n\n            });\n\n        };\n\n        //@ PUT HTTP DATA HANDLER \n        this.put   = ( destination, data ) => {\n\n            return $q( (resolve,reject) => {\n\n                $http.put(destination,data)\n                .success( resolve )\n                .error( reject )\n\n            });\n\n        }; \n\n\n        //@ DELETE HTTP DATA HANDLER \n        this.delete   = ( destination, data ) => {\n\n            return $q( (resolve,reject) => {\n\n                $http.delete(destination,{ \n                    params: data\n                })\n                .success( resolve )\n                .error( reject )\n\n            });\n\n        };\n\n        //@ Handle background calls to the web server for database integration\n        this.db = function(data,destination){\n\n             return $q( (resolve,reject) => {\n\n                destination = ( destination ) ? destination : `${remoteAuth.url}/php`;\n                $http.get(  destination , {\n                        params: data\n                })\n                .success( resolve )\n                .error( reject )\n\n            });\n\n        };\n\n        //@ Handle email sending requests\n        this.mail = function(data,destination){\n\n             return $q( (resolve,reject) => {\n\n                destination = ( destination ) ? destination : `${remoteAuth.url}/mail`;\n                $http.post( destination ,data )\n                .success( resolve )\n                .error( reject )\n\n            });\n\n        };\n\n        //@ Generic Process Event Handler\n        this.handler = function( response ){\n\n            response = ( response.response ) ? response : response.data;\n\n            if(response.response == 200 ){\n                app.alert(\"<font color=green>Done</font>\",app.str( response.data.message ) );\n            }else{\n                app.alert(`<font color=red>Uh Oh!</font> ( ${response.response} Error )`,app.str( response.data.message ) );\n            }\n\n        };\n\n        //@ Generic Error Handler\n        this.errorHandler = function( response ){\n\n                app.alert(`<font color=red>Uh Oh!</font>`,app.str( response.data.message ) );\n        \n        };\n        this.error_handler  = this.errorHandler;\n        this.e_handler      = this.errorHandler;\n        \n        //@ Generic Process Remote Event Handler\n        this.remote_handler = function( response ){\n           \n        \tapp.alert(\"<font color=blue>Data Response</font>\",app.str( app.str( response ) ) );\n\n        };\n        this.remoteHandler \t= this.remote_handler;\n\n\n\n       \n\n}])\n\n//@ The BASIC sms sending application service\n.service(\"sms\" \n,['app','remoteAuth','$q'\n,function(app,remoteAuth,$q) {\n\n        /**\n         * This angular service allows for you to easily send SMS messages conveniently using bixbyte's default SMS gateway platform\n         * \n         * It allows the use of your *Framify SMS* android phone application to send simple SMS messages. \n         * \n         * You can easily extend it as you will since the socket connection to the server can be hooked to as \"sms.socket\"\n         */\n\n        //@ SMS BASIC APPLICATION INITIALIZATION\n\n        //@ Create a locally accessible copy of the 'sms' service\n        var sms = this; \n\n        //@ Definition of the socket object\n        this.socket;\n        var socket = this.socket;\n\n        //@ The socket connection initiator object\n        this.start  = ( framify_sms_server_url ) => {\n\n            socket = io.connect( framify_sms_server_url || remoteAuth.url ); \n\n            socket.on(\"connect\", ()=>{\n                console.log(\"Successfully established a connection to the framify SMS gateway\");\n            });\n\n            socket.on(\"disconnect\", () => {\n                console.log(\"Dropped the framify SMS gateway connection.\")\n            });\n\n            socket.on(\"reconnect\", () => {\n                console.log(\"Re-established a connection to the SMS gateway.\")\n            })\n\n            return $q.resolve( app.make_response( 200, \"Starting the SMS gateway\") )\n            .catch((e)=>{\n                console.log(\"There was a problem when starting the SMS relay service.\")\n                console.dir(e)\n            });\n\n        }\n\n        this.stop   = (  ) => {\n\n            //@ Disconnect any existing conections\n            if( socket ){\n\n                socket.disconnect();\n                console.log(\"Terminated all existing SMS gateway connections.\");\n\n            }\n            \n            //@ Nullify the existing object\n            socket = undefined;\n\n            return $q.resolve( app.make_response( 200, \"Stoping the SMS gateway\") )\n            .catch((e)=>{\n                console.log(\"There was a problem when starting the SMS relay service\")\n                console.dir(e)\n            })\n\n        }\n\n        //@ SEND EXPRESS SMS'\n        this.SMS = (smsData) => {\n\n            //@ Ensure that the SMS service provision gateway is set\n            if( socket ){ \n\n                socket.emit(\"sendSMS\" ,smsData);\n                return $q.resolve(true)\n                .catch(function(e){\n                    console.log(\"Encountered an error when processing the sms function.\")\n                    console.dir(e)\n                })\n\n            //@ Ask the user to initialize the sms service\n            }else{\n                \n                app.alert( \"<font  color=red>SMS SERVICE NOT STARTED</font>\", \"Framify failed to execute an SMS related command.<br>Reason: <code>The SMS service provider has not been defined.</code>\" )\n                return $q.reject(false)\n                .catch(function(e){\n                    console.log(\"Encountered an error when processing the sms function.\")\n                    console.dir(e)\n                })\n\n            }\n\n                       \n        };\n\n        //@ SEND A SINGLE SMS\n        this.oneSMS = (tel ,mess ,apiKey) => {\n\n            //@ Ensure that the SMS service provision gateway is set\n            if( socket ){\n\n                var obj;\n                if (Array.isArray(tel)) {\n                    obj = tel;\n                } else {\n                    obj = {\n                        telephone: tel,\n                        message: mess,\n                        password: apiKey\n                    };\n                }\n\n                socket.emit(\"sendSMS\" ,obj);\n                return $q.resolve(app.make_response( 200, \"Queued the SMS for sending\"))\n                .catch(function(e){\n                    console.log(\"Encountered an error when processing the sendsms function.\")\n                    console.dir(e)\n                });\n\n            //@ Ask the user to initialize the sms service\n            }else{\n                \n                app.alert( \"<font  color=red>SMS SERVICE NOT STARTED</font>\", \"Framify failed to execute an SMS related command.<br>Reason: <code>The SMS service provider has not been defined.</code>\" )\n                return $q.reject(false)\n                .catch(function(e){\n                    console.log(\"Encountered an error when processing the sms function.\")\n                    console.dir(e)\n                })\n\n            }\n\n        };\n\n        //@ SEND BULK SMS MESSAGES\n        this.bulkSMS = (contacts ,data ,apiKey) => {\n\n            return $q( (resolve ,reject) => {\n\n                //@ Ensure that the SMS service provision gateway is set\n                if( socket ){\n\n                    let obj = [];\n\n                    //* Ensure that the API key has been set\n                    if (!apiKey) {\n                        app.alert(\"<font style='weight:bold;color:red;'>ERROR</font>\",'<center>Failed to instantiate the SMS sending service before api Key definition.</center>');\n                    } else if (Array.isArray(contacts)) {\n\n                        //* handle an array of contacts\n                        contacts.forEach( (element) => {\n\n                            if (app.isTelephone(element)) {\n\n                                obj.push({\n                                    telephone: element,\n                                    message: data,\n                                    apiKey: apiKey\n                                });\n\n                            } else {\n\n                                app.notify('<center>Could not send an SMS message to the invalid number ' + element + '.</center>','danger');\n\n                            }\n\n                        }, this);\n\n                        socket.emit(\"sendSMS\", obj);\n                        resolve(app.make_response( 200, \"Queued the messages for sending.\"));\n\n                    } else {\n                        app.notify('<font style=\"weight:bold;color:white;\">Bulk SMS error.</font><br><center>You can only use the bulk SMS service with an array of telephone contacts</center>','danger');\n                    }\n\n                //@ Ask the user to initialize the sms service\n                }else{\n                    \n                    app.alert( \"<font  color=red>SMS SERVICE NOT STARTED</font>\", \"Framify failed to execute an SMS related command.<br>Reason: <code>The SMS service provider has not been defined.</code>\" )\n                    reject(app.make_response( 500, \"The SMS service is not started.\"));\n\n                }\n\n            });       \n           \n        };\n\n        // //@ SAMPLE SUCCESSFUL SMS SENDING INFORMATION HANDLER\n        // this.socket.on(\"trueSMS\", (data) => {\n        //     $scope.app.notify(\"The message has been conveyed.\");\n        // });\n\n}])\n\n//@ The basic incomplete networking service\n.service(\"cgi\" \n,[\nfunction() {\n\n    //Handle background calls to the web server for database integration\n    this.ajax = function(data){\n        return $.ajax({\n            method: \"GET\",\n            url: \"/php\",\n            data: data\n        });\n    };\n\n   //Handle the posting of emails via the mailgun api\n   this.mail = function(data){\n        return $.ajax({\n            method: \"POST\"\n            ,url: \"/mail\"\n            ,data: data\n        })\n    };\n\n}])\n\n//@@ The Authentication service\n.service('auth'\n,[ '$http','$localStorage','$q'\n,function($http,$localStorage,$q){\n\n   var auth = this;\n\n   auth.SetAuth     = function( AuthToken ){\n\n        return $q( function(resolve,reject){\n            \n            resolve( $http.defaults.headers.common.Authorization = AuthToken ||  ( $localStorage.framify_user ) ? $localStorage.framify_user.token : undefined );\n\n        });\n\n    };\n    auth.set_auth   = auth.SetAuth;\n\n     //@ Perform User Registration\n    auth.Register  = function( credentials ){\n\n        return $q( function( resolve,reject ){\n\n            $http.post('/auth/register', credentials )\n            .success(function(response){\n\n                if( response.response == 200 ){\n\n                    resolve( response.data.message )\n\n                }else{\n\n                    reject( response.data.message )\n\n                }\n\n            })\n            .error(function(response){\n                reject( JSON.stringify( ( ( response ) ? ( ( response.data )  ? response.data.message : response ) : response ) || \"Could not obtain a response from the server.\")  )\n            })\n\n        });\n\n    };\n    auth.register  = auth.Register;\n      \n    //@ Perform a User Login\n    auth.Login     = function( credentials ){\n\n        return $q( function( resolve,reject ){\n\n            $http.post('/auth/verify', credentials )\n            .success(function(response){\n\n                if( response.response == 200 ){\n\n                    $localStorage.framify_user   =  response.data.message ;\n\n                    auth.SetAuth( response.data.message.token );\n\n                    resolve( response.data.message )\n\n                }else{\n\n                    reject( response.data.message )\n\n                }\n\n            })\n            .error(function(response){\n                reject( JSON.stringify( ( ( response ) ? ( ( response.data )  ? response.data.message : response ) : response ) || \"Could not obtain a response from the server.\")  )\n            })\n\n        });\n\n    };\n    auth.login     = auth.Login;    \n\n    //@ Perform A User Logout\n    auth.Logout    = function( ){\n\n        return $q( function(resolve,reject){\n\n            delete $localStorage.framify_user;\n            auth.SetAuth(undefined)\n            .then(resolve)\n\n        });                         \n\n    };\n    auth.logout    = auth.Logout;   \n\n}])\n\n\n//@@ The Remote authentication service\n//@@ The Authentication service ChartJsProvider.service('auth'\n.service('remoteAuth'\n,[ '$http','$localStorage','$q'\n,function($http,$localStorage,$q){\n\n   var r_auth = this;\n\n   r_auth.url         = 'http://bixbyte.io'\n\n   r_auth.setUrl      = function( accessUrl ){\n\n       return $q( (resolve,reject) => {\n            \n            r_auth.url    = accessUrl;\n            console.log(`The remote access url has been set to ${accessUrl}` );\n            resolve(accessUrl);\n\n       })\n       \n   };\n   r_auth.set_url     = r_auth.setUrl;\n\n\n   r_auth.SetAuth     = function( AuthToken ){\n\n        return $q( function(resolve,reject){\n            \n            resolve( $http.defaults.headers.common.Authorization = AuthToken ||  ( $localStorage.framify_user ) ? $localStorage.framify_user.token : undefined );\n\n        });\n\n    };\n    r_auth.set_auth     = r_auth.SetAuth;\n\n     //@ Perform User Registration\n    r_auth.Register  = function( credentials ){\n\n        return $q( function( resolve,reject ){\n\n            $http.post(`${r_auth.url}/auth/register`, credentials )\n            .success(function(response){\n\n                if( response.response == 200 ){\n\n                    resolve( response.data.message )\n\n                }else{\n\n                    reject( response.data.message )\n\n                }\n\n            })\n            .error(function(response){\n                reject( JSON.stringify( ( ( response ) ? ( ( response.data )  ? response.data.message : response ) : response ) || \"Could not obtain a response from the server.\")  )\n            })\n\n        });\n\n    };\n    r_auth.register     = r_auth.Register;\n        \n    //@ Perform a User Login\n    r_auth.Login          = function( credentials ){\n\n        return $q( function( resolve,reject ){\n\n            $http.post(`${r_auth.url}/auth/verify`, credentials )\n            .success(function(response){\n\n                if( response.response == 200 ){\n\n                    $localStorage.framify_user   =  response.data.message ;\n\n                    r_auth.SetAuth( response.data.message.token );\n\n                    resolve( response.data.message )\n\n                }else{\n\n                    reject( response.data.message )\n\n                }\n\n            })\n            .error(function(response){\n                reject( JSON.stringify( ( ( response ) ? ( ( response.data )  ? response.data.message : response ) : response ) || \"Could not obtain a response from the server.\")  )\n            })\n\n        });\n\n    };\n    r_auth.login    = r_auth.Login;\n        \n    //@ Perform A User Logout\n    r_auth.Logout         = function( ){\n\n        return $q( function(resolve,reject){\n\n            delete $localStorage.framify_user;\n            r_auth.SetAuth(undefined)\n            .then(resolve)\n\n        });                         \n\n    };\n    r_auth.logout   = r_auth.Logout;\n\n}]) \n\n\n.run(\n[\"app\" ,\"cgi\" ,\"$rootScope\" ,\"$state\" ,\"$localStorage\" ,\"sms\" ,\"auth\",\"remoteAuth\",\"$http\"\n,function(app ,cgi ,$rootScope ,$state ,$localStorage ,sms ,auth, remoteAuth ,$http) {\n\n        //! INJECT THE LOCATION SOURCE TO THE ROOT SCOPE\n        $rootScope.location     = $state;\n\n        //! INJECT THE $localStorage instance into the root scope\n        $rootScope.storage      = $localStorage;\n\n        //! INJECT THE APPLICATION'S MAIN SERVICE TO THE ROOT SCOPE SUCH THAT ALL SCOPES MAY INHERIT IT\n        $rootScope.app          = app;\n\n        //! INJECT THE APP BASICS SERVICE\n        $rootScope.cgi          = cgi;\n\n        //! SIMPLE APPLICATION BEHAVIOR SETUP\n        $rootScope.frame        = {};\n\n        //#! INJECT THE SMS INSTANCE INTO THE MAIN SCOPE\n        $rootScope.sms          = sms;\n\n        //@ INJECT THE AUTHENTICATION SERVICE\n        $rootScope.auth         = auth;\n        $rootScope.remoteAuth   = remoteAuth;\n\n        //! IDENTIFY THE CURRENT PATH\n        $rootScope.frame.path   = () => $state.absUrl().split(\"/#/\")[0] + \"/#/\" + $state.absUrl().split(\"/#/\")[1].split(\"#\")[0];\n        //p.split(\"/#/\")[0]+\"/#/\"+p.split(\"/#/\")[1].split(\"#\")[0]\n\n        //@ INITIALIZE THE STORAGE ADMIN VARIABLE\n        $rootScope.storage.admin = {};\n\n        //! RELOCATION HANDLING\n        $rootScope.frame.relocate = (loc) => {\n            console.log(`Relocating to: #${loc}`)\n            $rootScope.location.go(loc);\n        };\n\n        //! ADMIN HANDLING  \n        $rootScope.frame.is_admin = false;\n\n        //! ADMIN STATUS CHECKER \n        $rootScope.frame.isAdmin = () => ($rootScope.frame.is_admin) ? true : false;\n\n        //! ROOT USER STATUS CHECKER\n        $rootScope.frame.isRoot = () => ($rootScope.storage.admin.access == 0) ? true : false;\n\n        //! ADMIN STATUS SWITCH\n        $rootScope.frame.changeAdmin = (bool) => {\n            $rootScope.frame.is_admin = bool;\n            //  $rootScope.$apply();\n        };\n\n        //! RESET THE ADMIN STATUS\n        $rootScope.frame.reset = () => {\n            delete $rootScope.storage.admin;\n            delete $rootScope.storage.user;\n            $rootScope.storage.admin    = {};\n            $rootScope.storage.user     = {};\n            $rootScope.frame.changeAdmin(false);\n            window.location = \"/#/\";\n        };\n\n        //@ SET THE DEFAULT HTTP AUTHORIZATION HEADERS WHERE NEED BE\n        if( $localStorage.framify_user ){\n            $http.defaults.headers.common.Authorization = $localStorage.framify_user.token                                                                                                                  ;\n        }\n        \n        \n\n    }])\n\n\n\n//@ The main controller\n.controller(\"framifyController\"\n,['$scope' ,'$state' ,'$rootScope','$http','$q'\n,function($scope ,$state ,$rootScope ,$http,$q) {\n\n        //!APPLICATION GLOBAL SCOPE COMPONENTS\n        $scope.current = {};\n        $scope.ui = {};\n\n        // $scope.urlParams = $stateParams;\n\n        $rootScope.nav = [];\n        $rootScope.nav.search; \n        $rootScope.links = [];\n\n        $scope.nav.hasFilters = false;\n\n\n        //** MANAGE THE NAVIGATION SEARCH STATUS\n        $scope.openFilters = (hasFilters) => {\n            if (hasFilters === true) { $scope.nav.hasFilters = false; } else { $scope.nav.hasFilters = true; }\n        };\n\n        //!RE-INITIALIZE APPLICATION DATA\n        $rootScope.app.reinit = () => {\n            $scope.location.path(\"/framify\");\n        };\n\n\n        //@ FUNCTION EXECUTOR\n        $rootScope.exec = f => f();\n\n        //@ VARIABLE SETTER\n        $rootScope.setVar = ( obj, keys, v ) => {\n\n            if( keys.length === 1){\n                obj[keys[0]] = v;\n            }else{\n                var key     = keys.shift();\n                obj[key]    = $rootScope.setVar(typeof(obj[key]) === 'undefined' ? {} : obj[key], keys, v);\n            }\n\n            return obj;\n\n        };\n        $rootScope.set_var  = $rootScope.setVar;\n\n        /**\n         * SECURE THE PARENTAL CONTROLLED URLS\n         */\n        $rootScope.secure = (securityFunc) => {\n\n            var parts = window.location.href.split('/');\n\n            var part = parts[(parts.length - 1)];\n\n            if ($scope.links.indexOf(part) >= 0) {\n\n                $rootScope.exec(securityFunc);\n\n            }\n\n        };\n\n\n        /**\n         * DATABASE CENTRIC ADDITION AND DELETION\n         */\n\n        //Define the main application objects\n        $scope.add = {};\n        $scope.fetch = {};\n        $scope.fetched = {};\n        $scope.counted = {};\n        $scope.data = {};\n\n        $scope.data.login = {};\n        $scope.data.admin = {};\n\n        $rootScope.frame.changeAdmin(false);\n        $scope.logedin = false;\n         \n        //@ Redirect to a given sub-state in the pre-defined 'app' main state\n        $scope.appRedirect = function(partialState){\n            $state.go(\"app.\"+partialState);\n        }\n        $scope.app_redirect = $scope.appRedirect;\n                \n        //@ Redirect to the specified state\n        $scope.goTo = function(completeState){\n            $state.go(completeState);\n        }\n        $scope.go_to    = $scope.goTo;\n\n        //@ UNWANTED ANGULAR JS OBJECTS\n        $scope.unwanted    = [\"$$hashKey\",\"$index\"];\n\n        $scope.removeUnwanted = function( insertObj ){\n             Object.keys( insertObj )\n             .forEach( insertKey => {\n                if( $scope.unwanted .indexOf( insertKey ) != -1 ){\n                    insertObj[insertKey] = undefined;\n                    delete insertObj[insertKey];\n                }\n            });\n            return insertObj;\n        };\n        $scope.remove_unwanted  =   $scope.removeUnwanted;\n       \n        \n        //! BASIC ADDITION\n        $scope.add = (table ,data ,cryptFields ,cb) => {\n\n            return $q( (resolve ,reject) => {\n\n                //* populate the data object \n                data                = (data) ? $scope.app.json(data) : {};\n                data.command        = \"add\";\n                data.table          = (table != undefined) ? table.toString().replace(/vw_/ig, '') : \"\";\n                data.token          = data.token || $scope.storage.admin._;\n                data.extras         = (data) ? ((data.extras) ? data.extras.replace(/LIMIT 1/ig, '') : undefined) : undefined;\n\n                //* Encrypt the specified cryptFields\n                 if (cryptFields) {\n                    cryptFields.split(\",\")\n                    .forEach((cryptField) => {\n                        if(data[cryptField]){\n                            data[cryptField] = $scope.app.md5(data[cryptField])\n                        }                        \n                    });\n                }\n\n                //* Perform the actual addition\n                $scope.app.db($scope.removeUnwanted(data))\n                .then((r) => {\n\n                    r = $scope.app.json(r);\n\n                    if (r.response == 200) {\n\n                        $scope.app.notify(`<center> ${r.data.message}</center>` ,\"success\" );\n\n                        $scope.fetch(table, { specifics: data.specifics });\n\n                        $scope.data[table.toString().replace(/vw_/ig, '')] = {};\n\n                        if ( cb && typeof(cb) == \"function\") {\n                            resolve( cb(r,data) );\n                        } else {\n                            resolve(true);\n                        }\n\n                    } else {\n\n                        // POSTGRESQL ERROR FORMAT MATCHING\n                        if (Array.isArray(r.data.message)) {\n\n                            var v = r.data.message[2].match(/DETAIL:(.*)/);\n\n                            if (v != undefined || v != null) {\n                                r.data.message = v[1];\n                            } else {\n                                r.data.message = r.data.message[2];\n                            }\n\n                        }\n\n\n                        $scope.app.notify(`<center>${ r.data.message }</center>` ,'danger');\n                        reject( $scope.app.makeResponse(500 ,v[1]) )\n                        \n                    }\n\n                    //$scope.$apply();\n\n                });\n\n            });\n\n        \n            \n        };\n\n        //! BASIC UPDATING\n        $scope.update = (table ,data ,cryptFields ,cb) => {\n\n            return $q( (resolve ,reject) => {\n\n                //* pack the relevant info into the data object\n                data                = (data) ? $scope.app.json(data) : {};\n                data.command        = \"update\";\n                data.table          = (table != undefined) ? table.toString().replace(/vw_/ig, '') : \"\";\n                data.token          = data.token || $scope.storage.admin._;\n                data.extras         = (data) ? ((data.extras) ? data.extras.replace(/LIMIT 1/ig, '') : undefined) : undefined;\n\n                //* Encrypt the specified cryptFields\n                if (cryptFields) {\n                    cryptFields.split(\",\")\n                    .forEach((cryptField) => {\n                        if(data[cryptField]){\n                            data[cryptField] = $scope.app.md5(data[cryptField])\n                        } \n                    });\n                }\n\n                //* perform the actual update\n                $scope.app.db($scope.removeUnwanted(data))\n                .then( (r) => {\n\n                    r = $scope.app.json(r);\n\n                    if (r.response == 200) {\n\n                        $scope.app.notify(`<center> ${r.data.message}</center>`, \"success\");\n\n                        $scope.fetch(table, { specifics: data.specifics });\n\n                        $scope.data[table.toString().replace(/vw_/ig, '')] = {};\n\n                        //$scope.$apply();\n\n                        if (typeof(cb) == 'function') {\n                            resolve( cb( r ) );                            \n                        }else{\n                            resolve(true);\n                        }\n\n                    } else {\n\n                        // POSTGRESQL ERROR FORMAT MATCHING\n                        if (Array.isArray(r.data.message)) {\n\n                            var v = r.data.message[2].match(/DETAIL:(.*)/)\n\n                            if (v != undefined || v != null) {\n                                r.data.message = v[1];\n                            } else {\n                                r.data.message = r.data.message[2];\n                            }\n                           \n                        }\n\n                        $scope.app.notify(`<center>${ r.data.message }</center>`,\"danger\");\n                        reject( $scope.app.makeResponse(500 ,r.data.message)  );\n\n                    }\n                    \n                })\n\n            });\n  \n        };\n\n\n        //! BASIC DATA FETCHING\n        var do_fetch = (table ,data ,cryptFields) => {\n\n            return $q( (resolve ,reject) => {\n\n                //* populate the \"data\" object\n                data               = (data) ? $scope.app.json(data) : {};\n                data.command       = \"get\";\n                data.table         = table;\n\n                console.log(\"\\nprocessing the fetching of table \" + table + \"\\n\")\n\n                //* Encrypt the specified cryptFields\n                if (cryptFields) {\n                    cryptFields.split(\",\")\n                    .forEach((cryptField) => {\n                       if(data[cryptField]){\n                            data[cryptField] = $scope.app.md5(data[cryptField])\n                        } \n                    });\n                }\n\n                 //* perform the actual data fetching\n                 $scope.app.db($scope.removeUnwanted(data))\n                 .then( (r) => {\n\n                    r = $scope.app.json(r);\n\n                    if (r.response == 200) {\n                        $scope.fetched[table.toString().replace(/vw_/ig, '')] = r.data.message;\n                        $scope.$apply();\n                        // $scope.app.doNothing()\n                        // .then(e=>{\n                             resolve(r);\n                        // })\n                        \n                       \n                    } else {\n\n                        // POSTGRESQL ERROR FORMAT MATCHING\n                        if (Array.isArray(r.data.message)) {\n\n                            var v = r.data.message[2].match(/DETAIL:(.*)/)\n\n                            if (v != undefined || v != null) {\n                                r.data.message = v[1];\n                            } else {\n                                r.data.message = r.data.message[2];\n                            }\n\n                        }\n                        $scope.app.notify(`<center>${ r.data.message }</center>`,\"danger\");\n                        reject( $scope.app.makeResponse(500 ,r.data.message) );\n\n                    }\n                    \n                })\n\n            });\n\n        };\n\n        $scope.fetch = (table ,data ,cryptFields ,cb) => {\n\n            if (Array.isArray(table)) {\n\n                let promiseArr = new Array();\n\n                table\n                .filter(e=>typeof(e[0])!='undefined' )\n                .forEach( (tData ,tkey) => {\n                    promiseArr.push( do_fetch(tData[0] ,(tData[1] || {}) ) ,cryptFields)\n                });\n                \n                promiseArr = promiseArr.filter(e=>typeof(e)!='undefined');\n\n                return $q.all( promiseArr );\n\n            } else {\n               return $q.resolve( do_fetch(table, data, cryptFields) )\n               .catch(function(e){\n                   console.log(\"Encountered an error when processing the fetch function.\")\n                   console.dir(e)\n               });\n            }\n\n        };\n\n        //! BASIC DELETION  \n        $scope.del = (table ,data ,cryptFields ,cb) => {\n\n            return $q( (reject ,resolve) => {\n\n                //* populate the data object\n                data            = (data) ? $scope.app.json(data) : {};\n                data.command    = \"del\";\n                data.table      = (table != undefined) ? table.toString().replace(/vw_/ig, '') : \"\";\n                data.token      = data.token || $scope.storage.admin._;\n\n                //* Encrypt the specified cryptFields\n                if (cryptFields) {\n                    cryptFields.split(\",\")\n                    .forEach((cryptField) => {\n                        if(data[cryptField]){\n                            data[cryptField] = $scope.app.md5(data[cryptField])\n                        } \n                    });\n                }\n\n                $scope.app.db($scope.removeUnwanted(data))\n                .then( (r) => {\n\n                    r = $scope.app.json(r);\n\n                    if (r.response == 200) {\n                        // // $scope.fetched[table.toString().replace(/vw_/ig, '')].splice(delID, 1);\n                        $scope.app.notify(`<center>${r.data.message}</center>`, \"success\");\n                        $scope.fetch(table);\n                        resolve(r);\n                    } else {\n\n                        // POSTGRESQL ERROR FORMAT MATCHING\n                        if (Array.isArray(r.data.message)) {\n\n                            var v = r.data.message[2].match(/DETAIL:(.*)/)\n\n                            if (v != undefined || v != null) {\n                                r.data.message = v[1];\n                            } else {\n                                r.data.message = r.data.message[2];\n                            }\n                        }\n                        $scope.app.notify(`<center>${ r.data.message }</center>`,\"danger\");\n                        reject( $scope.app.makeResponse(500 ,r.data.message) );\n\n                    }\n                    //$scope.$apply();\n\n                })\n\n            })\n            \n        };\n\n        //Basic User Login\n        $scope.login = (cryptField) => {\n\n            return $q( (resolve ,reject) => {\n\n                if (cryptField) {\n                    $scope.data.login[cryptField] = $scope.app.md5($scope.data.login[cryptField])\n                }\n\n                $scope.data.login.command   = \"get\";\n                $scope.data.login.table     = \"users\";\n                $scope.data.login.extras    = \" AND active is true LIMIT 1\";\n\n                //* perform the actual login validation\n                $scope.app.db($scope.removeUnwanted($scope.data.login))\n                .then((r) => {\n\n                    $scope.data.admin.extras = \"\";\n\n                    r = $scope.app.json(r);\n\n                    if (r.response == 200) {\n\n                        if (r.data.message.length > 0 && typeof(r.data.message[0]) == \"object\") {\n\n                            if (r.data.message[0]['username'] == $scope.data.login.username) {\n                                $scope.storage.user = r.data.message[0];\n                                $scope.logedin = true;\n                            } else {\n                                delete $scope.storage.user;\n                                window.location = \"/#/\";\n                            }\n\n                             resolve();\n\n                        } else {\n                            delete $scope.storage.user;\n                            $scope.app.notify(`<center>You have entered the wrong login credentials.</center>` ,\"danger\");\n                        }\n\n                    } else {\n\n                        // POSTGRESQL ERROR FORMAT MATCHING\n                        if (Array.isArray(r.data.message)) {\n\n                            var v = r.data.message[2].match(/DETAIL:(.*)/);\n\n                            if (v != undefined || v != null) {\n                                r.data.message = v[1];\n                            } else {\n                                r.data.message = r.data.message[2];\n                            }\n                        }\n\n                        delete $scope.storage.user;\n                        $scope.app.notify(`<center>${ r.data.message }</center>`,\"danger\");\n                        reject( $scope.app.makeResponse(500 ,r.data.message) );\n\n                    }\n                    //$scope.$apply();\n\n                });\n\n            });\n\n        };\n\n        //Basic admin login\n        $scope.adminLogin = (cryptField) => {\n\n            return $q( (resolve,reject) =>{\n\n                if (cryptField) {\n                    $scope.data.admin[cryptField] = $scope.app.md5($scope.data.admin[cryptField])\n                }\n\n                $scope.data.admin.command   = \"get\";\n                $scope.data.admin.table     = \"admins\";\n                $scope.data.admin.extras    = \" AND active is true LIMIT 1\";\n\n                //* perform the actual login\n                $scope.app.db($scope.removeUnwanted($scope.data.admin) )\n                .then((r) => {\n\n                    $scope.data.admin.extras = \"\";\n\n                    r = $scope.app.json(r);\n\n                    if (r.response == 200) {\n\n                        if (r.data.message.length > 0 && typeof(r.data.message[0]) != undefined) {\n\n                            if (r.data.message[0]['password'] === $scope.data.admin.password) {\n                                $scope.storage.admin = r.data.message[0];\n                                $scope.storage.admin._ = {};\n                                $scope.storage.admin._.user = r.data.message[0].admin_name;\n                                $scope.storage.admin._.key = r.data.message[0].password;\n                                $rootScope.frame.changeAdmin(true);\n                                //$scope.$apply();\n                                resolve(r)\n                            } else {\n                                delete $scope.data.admin;\n                                delete $scope.storage.admin;\n                                $scope.storage.admin    = {};\n                                window.location = \"/#/admin\";                                \n                                resolve(r)\n                            }\n\n                        } else {\n                            delete $scope.data.admin;\n                            delete $scope.storage.admin;\n                            $scope.storage.admin    = {};\n                            $scope.app.notify(`<center>You have entered the wrong login credentials.</center>` ,\"danger\");\n                            window.location = \"/#/admin\";\n                            reject(false);\n                        }\n\n                    } else {\n\n                        // POSTGRESQL ERROR FORMAT MATCHING\n                        if (Array.isArray(r.data.message)) {\n\n                            var v = r.data.message[2].match(/DETAIL:(.*)/)\n                            if (v != undefined || v != null) {\n                                r.data.message = v[1];\n                            } else {\n                                r.data.message = r.data.message[2];\n                            }\n                        }\n                        delete $scope.storage.admin;\n                        $scope.storage.admin    = {};\n                        $scope.app.notify(`<center>${ r.data.message }</center>`,\"danger\");\n                        reject( $scope.app.makeResponse(500 ,r.data.message) );\n\n                    }\n                    //$scope.$apply();\n                })\n\n            });\n\n        };\n\n        //@ Handle basic user re-authentication\n        $scope.islogedin = () => {\n\n            return $q( (resolve ,reject) => {\n\n                if ($scope.storage.user) {\n                    $scope.data.login.username = $scope.storage.user.username;\n                    $scope.data.login.password = $scope.storage.user.password;\n                    $scope.login();\n                    resolve(true);\n                }else{\n                    $scope.app.notify(`<center>You have no permission to access this content</center>`,'danger')\n                    reject(false);\n                }\n\n            })\n\n        };\n\n        //@ Handle basic app-user logout\n        $scope.logout = () => {\n\n            $scope.islogedin = false;\n            delete $scope.storage.user;\n            window.location = '/#/';\n            return $q.resolve(true)\n            .catch(function(e){\n                console.log(\"Encountered an error when processing the logout function.\")\n                console.dir(e)\n            });\n            \n        };\n\n        //@ Handle basic application redirection\n        $scope.redirect = (loc) => {\n            if (loc) {\n                window.location = loc\n            } else {\n                window.location = \"/#/framify\";\n            }\n            return $q.resolve(true)\n            .catch(function(e){\n                console.log(\"Encountered an error when processing the redirect function.\")\n                console.dir(e)\n            })\n        };\n\n        // Basic Admin Auth\n        $scope.authorize = () => {\n\n            if ($scope.storage.admin && $scope.data.admin.admin_name && $scope.data.admin.password) {\n                $scope.data.admin               = {};\n                $scope.data.admin.admin_name    = $scope.storage.admin.admin_name;\n                $scope.data.admin.password      = $scope.storage.admin.password;\n                $scope.adminLogin();\n            } else {\n                $scope.location = \"/#/admin\";\n            }\n\n            return $q.resolve(true)\n            .catch(function(e){\n                console.log(\"Encountered an error when processing the authorize function.\")\n                console.dir(e)\n            });\n\n        };\n\n        //@ HANDLE ADMINISTRATOR DEAUTHORIZATION\n        $scope.deauthorize = () => {\n            delete $scope.storage.admin;\n            $rootScope.frame.changeAdmin(false);\n            window.location = '/#/';\n            return $q.resolve(true)\n            .catch(function(e){\n                console.log(\"Encountered an error when processing the deauthorize function.\")\n                console.dir(e)\n            });\n        };\n\n\n        // BASIC Custom Queries\n        $scope.custom = (table ,data ,cryptFields ,cb) => {\n\n            return $q( (resolve,reject) => {\n\n                //* initialize the data object\n                data            = (data) ? $scope.app.json(data) : {};\n                data.command    = \"custom\";\n                data.token      = data.token || $scope.storage.admin._;\n\n                //* Encrypt the specified cryptFields\n                if (cryptFields) {\n                    cryptFields.split(\",\")\n                    .forEach((cryptField) => {\n                        if(data[cryptField]){\n                            data[cryptField] = $scope.app.md5(data[cryptField])\n                        } \n                    });\n                }\n\n                //* Perform the actual custom query\n                $scope.app.db($scope.removeUnwanted(data))\n                .then((r) => {\n\n                    r = $scope.app.json(r);\n\n                    if (r.response == 200) {\n\n                        $scope.app.notify(`<center>${(r.data.message || 'Successful')}</center>`, \"success\");\n\n                        $scope.cFetched[table.toString().replace(/vw_/ig, '')] = r.data.message;\n                        $scope.data[table.toString().replace(/vw_/ig, '')] = {};\n                        $scope.$apply();\n\n                        resolve(r);\n\n                    } else {\n\n                        // POSTGRESQL ERROR FORMAT MATCHING\n                        if (Array.isArray(r.data.message)) {\n\n                            var v = r.data.message[2].match(/DETAIL:(.*)/)\n                            if (v != undefined || v != null) {\n                                r.data.message = v[1];\n                            } else {\n                                r.data.message = r.data.message[2];\n                            }\n\n                        } \n                        $scope.app.notify(`<center>${ r.data.message }</center>`);\n                        reject( $scope.app.makeResponse(500, r.data.message) )\n                    }\n                    //$scope.$apply();\n                })\n\n            });   \n\n        };\n\n        //BASIC DATABASE INSTANCEOF COUNTER\n        $scope.count = (table ,data ,cryptFields ,cb) => {\n\n            return $q( (resolve ,reject) => {\n\n                // if (Array.isArray(table)) {\n\n                //     let promiseArr = new Array();\n\n                //     table\n                //     .filter(e=>typeof(e[0])!='undefined' )\n                //     .forEach( (tData ,tkey) => {\n                //         promiseArr.push( do_fetch(tData[0] ,(tData[1] || {}) ) ,cryptFields)\n                //     });\n                    \n                //     promiseArr = promiseArr.filter(e=>typeof(e)!='undefined');\n\n                //     return $q.all( promiseArr );\n\n                // }\n\n                data            = (data) ? $scope.app.json(data) : {};\n                data.table      = table;\n                data.command    = \"count\";\n                data.token      = data.token || {};\n\n                //* Encrypt the specified cryptFields\n                if (cryptFields) {\n                    cryptFields.split(\",\")\n                    .forEach((cryptField) => {\n                        if(data[cryptField]){\n                            data[cryptField] = $scope.app.md5(data[cryptField])\n                        } \n                    });\n                }\n\n                //* perform the actual count\n                $scope.app.db($scope.removeUnwanted(data))\n                .then((r) => {\n\n                    r = $scope.app.json(r);\n\n                    if (r.response == 200) {\n\n                        $scope.counted[table.toString().replace(/vw_/ig, '')] = r.data.message;\n                        $scope.data[table.toString().replace(/vw_/ig, '')] = {};\n\n                        //$scope.$apply();\n\n                        resolve(r);\n\n                    } else {\n\n                        // POSTGRESQL ERROR FORMAT MATCHING\n                        if (Array.isArray(r.data.message)) {\n                            var v = r.data.message[2].match(/DETAIL:(.*)/)\n                            if (v != undefined || v != null) {\n                                r.data.message = v[1];\n                            } else {\n                                r.data.message = r.data.message[2];\n                            }\n                        }\n                        $scope.app.notify(`<center>${ r.data.message }</center>` ,'danger');\n                        reject( $scope.app.makeResponse(500 ,r.data.message ) );\n                    }\n                    //$scope.$apply();\n                })\n\n            });\n\n        };\n\n        /**\n         * TABLE SORTER\n         */\n        $scope.sort = function(keyname) {\n            $scope.sortKey = keyname; //set the sortKey to the param passed\n            $scope.reverse = !$scope.reverse; //if true make it false and vice versa\n        }\n\n\n        /**\n         *  DELETE UNWANTED FIELDS\n         */\n        $scope.sanitize = (data ,keys) => {\n            if (keys) {\n                keys.split(\",\").forEach((key) => {\n                    delete data[key];\n                });\n                return $q.resolve(data)\n                .catch(function(e){\n                   console.log(\"Encountered an error when processing the sanitize function.\")\n                   console.dir(e)\n               });\n            }\n        };\n\n        /**\n         * PUSH DATA TO OBJECT\n         */\n        $scope.dPush = (obj ,key ,val) => {\n            obj[key] = val;\n            return obj;\n        };\n        $scope.d_push   = $scope.dPush;\n\n        $scope.dPushify = ( obj, key, val ) => $q.resolve( $scope.dPush( obj, key, val ) );\n        $scope.d_pushify = $scope.dPushify;\n\n        /**\n         * @ MONTH REGULATION\n         */\n        $scope.currmoin = $scope.app.monthNum();\n        $scope.setMoin = (moin) => { $scope.currmoin = moin; };\n        $scope.set_moin = $scope.setMoin;\n\n        //@ DELETE UNWANTED PARAMETERS\n        $scope.delParams = function( mainObj,removeKeys ){\n            // $scope.app.clone\n            mainObj     = (mainObj) || {};\n            removeKeys  = ( removeKeys ) ? removeKeys.split(',') : [];\n\n            removeKeys.forEach(e => {\n                mainObj[e] = null;\n                delete mainObj[e];\n            });\n\n            return mainObj;\n\n        };\n        $scope.del_params   = $scope.delParams;\n\n\n        //@ INJECT A STANDARD WHERE \"Extras\" OBJECT\n        // addExtras(data.my_services,{username: storage.user.username},'username:WHERE owner','password,name,email,telephone,account_number,entity,active'),' ' )\n        $scope.addExtras = (targetObj ,extrasObj ,subStrings ,removeKeys) => {\n\n            return $q( (resolve,reject) => {\n\n                targetObj   = targetObj || {};\n                extrasObj   = extrasObj || {};\n                subStrings  = subStrings || '';\n                removeKeys  = removeKeys || '';\n\n                var extras  = '';\n\n                var k = [],\n                    v = [];\n\n                //@ CAPTURE THE REMOVE KEYS\n                removeKeys = removeKeys.split(',').filter(e => e);\n\n\n                removeKeys.forEach(e => {\n                    extrasObj[e] = null;\n                    delete extrasObj[e];\n                });\n\n                //@ CAPTURE REPLACE STRINGS\n                subStrings\n                    .split(',')\n                    .forEach((e, i) => {\n                        let x = e.split(':');\n                        k[i] = (x[0]);\n                        v[i] = (x[1]);\n                    })\n\n                //@ GET THE DEFINED KEYS\n                var keys = Object.keys(extrasObj);\n\n                //@ REPLACE THE DEFINED WITH THE DESIRED REPLACE KEYS\n                k.forEach((e, i) => {\n\n                    if (keys.indexOf(e) != -1) {\n\n                        extrasObj[v[i]] = extrasObj[e];\n                        extrasObj[e] = null;\n                        delete extrasObj[e];\n\n                    }\n\n                });\n\n\n                k = Object.keys(extrasObj);\n                v = null;\n\n                k.forEach((e, i) => {\n\n                    var fg = ( !isNaN(extrasObj[e]) ) ? parseInt(extrasObj[e]) : \"'\" + extrasObj[e] +\"'\";\n                    extras += ' ' + e + \"=\" + fg + \" AND\";\n\n                });\n\n                k = null;\n\n\n                targetObj.extras = extras.replace(/AND+$/, '');\n\n                resolve( targetObj );\n\n            })\n\n        };\n        $scope.add_extras   = (targetObj ,extrasObj ,subStrings ,removeKeys) => {\n\n            return $q( (resolve,reject) => {\n\n                targetObj   = targetObj || {};\n                extrasObj   = extrasObj || {};\n                subStrings  = subStrings || ['',''];\n                removeKeys  = removeKeys || ['',''];\n\n                var target  = '';\n                var extras  = '';\n\n                var target_k = [],\n                    extras_k = [],\n                    target_v = [],\n                    extras_v = [];\n\n                //@ Ensure that the substitution and removal parameters are arrays \n                if( !Array.isArray( subStrings ) || !Array.isArray( removeKeys ) ){\n                    reject('This Method only allows substitution and removal Arrays, <br> please consider using the <b><i>addExtras</i></b> object instead.');\n                }else{\n\n                    //@ CAPTURE THE REMOVE KEYS\n                    let target_removeKeys = removeKeys[0].split(',').filter(e => e);\n                    let extras_removeKeys = removeKeys[1].split(',').filter(e => e);\n\n                    //@ Remove specified keys from the target object\n                    target_removeKeys.forEach(e => {\n                        targetObj[e] = null;\n                        delete targetObj[e];\n                    });\n\n                    //@ Remove specified keys from the extras object\n                    extras_removeKeys.forEach(e => {\n                        extrasObj[e] = null;\n                        delete extrasObj[e];\n                    });\n\n\n\n                    //@ CAPTURE REPLACE STRINGS\n                    let target_subStrings = subStrings[0].split(',');\n                    let extras_subStrings = subStrings[1].split(',');\n\n                    //@ Specify target key-value pairs\n                    target_subStrings.forEach((e, i) => {\n                        let x = e.split(':');\n                        target_k[i] = (x[0]);\n                        target_v[i] = (x[1]);\n                    });\n\n                    //@ Specify extras key-value pairs\n                    extras_subStrings.forEach((e, i) => {\n                        let x = e.split(':');\n                        extras_k[i] = (x[0]);\n                        extras_v[i] = (x[1]);\n                    });\n\n                    //@ GET THE DEFINED KEYS\n                    var extras_keys = Object.keys(extrasObj);\n                    var target_keys = Object.keys(targetObj);\n\n                    //@ TARGET - REPLACE THE DEFINED WITH THE DESIRED REPLACE KEYS\n                    target_k.forEach((e, i) => {\n\n                        if (target_keys.indexOf(e) != -1) {\n\n                            // console.log( `Renaming the target ${e} to ${target_v[i]}` )\n\n                            targetObj[target_v[i]] = targetObj[e];\n                            targetObj[e] = null;\n                            delete targetObj[e];\n\n                        }\n\n                    });\n\n                     //@ EXTRAS - REPLACE THE DEFINED WITH THE DESIRED REPLACE KEYS\n                    extras_k.forEach((e, i) => {\n\n                        if (extras_keys.indexOf(e) != -1) {\n\n                            // console.log( `Renaming the extras ${e} to ${extras_v[i]}` )\n\n                            extrasObj[extras_v[i]] = extrasObj[e];\n                            extrasObj[e] = null;\n                            delete extrasObj[e];\n\n                        }\n\n                    });\n\n                    //@ SQLify the extras object\n                    extras_k = null;\n\n                    extras_k = Object.keys(extrasObj);\n                    extras_v = null;\n\n                    extras_k.forEach((e, i) => {\n\n                        var fg = ( !isNaN(extrasObj[e]) ) ? parseInt(extrasObj[e]) : \"'\" + extrasObj[e] +\"'\";\n                        extras += ' ' + e + \"=\" + fg + \" AND\";\n\n                    });\n\n                    extras_k = null;\n\n                    targetObj.extras = extras.replace(/AND+$/, '');\n\n                    resolve( targetObj );\n\n\n                }\n\n                \n            })\n\n        };\n\n        \n\n        ///////////////////////////////////////////////////////////////////////////////////////////////////\n        // ADDITIONS ON PROBATION\n\t// ----\n\n\t    //@ LOAD A SERVICE ONTO THE STAGE\n\t    $scope.service = {};\n\t    $scope.entity  = {};\n\n\t    $scope.showService = (serviceData) => {\n\t\t$scope.service.available = true;\n\t\t$scope.service.current   = serviceData;\n\t\t//$scope.$apply();\n\t    };\n\n\t    $scope.showEntity = (serviceData) => {\n\t\t$scope.entity.available = true;\n\t\t$scope.entity.current   = serviceData;\n\t\t//$scope.$apply();\n\t    };\n\n\t    //@ Count my entities\n\t    $scope.howMany = (table,data) => {\n\n            var data        = data || {owner: $scope.storage.user.username};\n            data            = (data)?$scope.app.json(data):{};\n            data.table      = table || 'entities';\n            data.command    = \"count\";\n            data.token      =  {};\n\n            $scope.app.db( $scope.removeUnwanted(data) )\n            .then( (r) => {   \n                \n                r = $scope.app.json(r);\n\n                if(r.response == 200){\n\n                    if( r.data.message ) {\n                        $scope.app.notify((r.data.message), \"success\");\n                    }\n                    \n                    $scope.counted[data.table.toString().replace(/vw_/ig,'')] = r.data.message;\n                    \n                }else{\n\n                    //POSTGRESQL MATCHING\n                    if(Array.isArray(r.data.message)){\n                        var v =  r.data.message[2].match(/DETAIL:(.*)/)\n                        if( v != undefined || v!=null ){\n                            r.data.message = v[1];\n                        }else{\n                            r.data.message = r.data.message[2];\n                        }\n                    }else{\n                        r.data.message;\n                    }\n                \n                    alert(`<center>${ r.data.message }</center>`);\n                }           \n                //$scope.$apply();\n            })    \n\n\n\t    };\n\n\t// ----\n\n    //@ FRAMIFY HANDLERS\n\n    $scope.data.login       = $scope.data.login || {};\n\n    $scope.data.me          = $scope.data.me || {};\n\n    $scope.setData;\n\n    //@ Initialize the handlers object\n    $scope.handlers = {};\n    $scope.r_handlers = $scope.handlers;\n\n    //@ The registration success handler\n    $scope.handlers.regSuccess = function( message ){\n        $scope.app.notify(\"You have been successfully registered\");\n        $state.go(\"app.login\");\n    };\n    $scope.r_handlers.regSuccess  = $scope.handlers.regSuccess;\n    $scope.handlers.reg_success   = $scope.handlers.regSuccess;\n    $scope.r_handlers.reg_success = $scope.handlers.regSuccess;\n\n    //@ The successful login handler\n    $scope.handlers.loginSuccess = function( message ){\n        $scope.app.notify(\"<i class='fa fa-2x fa-spin fa-circle-o-notch'></i> Processing your login data\",'success',4000); \n        $state.go(\"app.panel\");    \n    };\n    $scope.r_handlers.loginSuccess     = $scope.handlers.loginSuccess;\n    $scope.handlers.login_success      = $scope.handlers.loginSuccess;\n    $scope.r_handlers.login_success    = $scope.handlers.loginSuccess;\n\n    //@ The registration error handler\n    $scope.handlers.regError   = function( message ){\n        $scope.app.alert(\"<font color='red'>Signup Error</font>\", message);\n    };\n    $scope.r_handlers.regError    = $scope.handlers.regError;\n    $scope.handlers.reg_error     = $scope.handlers.regError;\n    $scope.r_handlers.reg_rror    = $scope.handlers.regError;\n\n    //@ The login error handler\n    $scope.handlers.loginError   = function( message ){\n        $scope.app.alert(\"<font color='red'>Login Error</font>\", message);\n    };    \n    $scope.r_handlers.loginError    = $scope.handlers.loginError;\n    $scope.handlers.login_error     = $scope.handlers.loginError;\n    $scope.r_handlers.login_error   = $scope.handlers.loginError;\n \n    //@ The identity check verification handler\n    $scope.handlers.identity    = function(){\n\n        return $q(function(reject,resolve){\n            \n            $http.get(\"/auth/me\")\n            .success(function(response){\n               \n               resolve( $scope.data.me = response.data.message  );\n\n            })\n            .error(function(error){\n\n                $scope.auth.Logout()\n                .then(function(){\n\n                    $scope.app.notify(\"<i class='fa  fa-exclamation-triangle'></i>&nbsp;&nbsp;Your lease has expired <br>Please Login to continue.\",'danger');\n                    reject( $state.go(\"app.login\") );\n\n                });\n\n            })\n\n        })\n\n    };\n\n    $scope.r_handlers.identity    = function(){\n\n        return $q(function(reject,resolve){\n            \n            console.log(\"Querying the remote server for identity\")\n\n            $http.get(`${$scope.remoteAuth.url}/auth/me`)\n            .success(function(response){\n               \n               console.log(\"Remote Knows who you are.\")\n               resolve( $scope.data.me = response.data.message  );\n\n            })\n            .error(function(error){\n\n                console.log(\"Something just didn't go well.\")\n                $scope.auth.Logout()\n                .then(function(){\n\n                    $scope.app.notify(\"<i class='fa  fa-exclamation-triangle'></i>&nbsp;&nbsp;Your lease has expired <br>Please Login to continue.\",'danger');\n                    reject( $state.go(\"app.login\") );\n\n                });\n\n            })\n\n        })\n\n    };\n\n    //@ The login status check handler\n    $scope.handlers.isLogedIn   = function(){\n\n        return $q( function(resolve, reject ){\n\n            if( !$scope.storage.framify_user ){\n\n                console.log(\"\\nNo localstorage value is defined\\n\")\n\n                if($state.current.name != \"app.login\" ){\n\n                    console.log(\"\\nRedirecting to the authentication page.\\n\")\n\n                    $scope.app.notify(\"<i class='fa  fa-exclamation-triangle'></i>&nbsp;&nbsp;Please Login to continue.\",'danger');\n                    reject( $state.go(\"app.login\") );                    \n\n                }\n                \n            }else if( !$http.defaults.headers.common.Authorization || $http.defaults.headers.common.Authorization == undefined || $http.defaults.headers.common.Authorization == '' ){\n\n                    console.log(\"\\nThe authentication header is not yet defined\\n\")\n\n                    $scope.auth.SetAuth( undefined )\n                    .then(function(  ){\n\n                        console.log(`\\nThe authentication header has been set to ${$http.defaults.headers.common.Authorization}\\n`)\n\n                        if($state.current.name == \"app.login\" ){\n                            resolve( $state.go(\"app.panel\") );\n                        }else{\n                            resolve(  );\n                        }\n                        \n                    })\n\n                     \n                    \n\n            }else{\n\n                console.log(\"\\nAll Looks good! Let me see if I can get you into the party\\n\")\n\n                if($state.current.name == \"app.login\" ){\n                   resolve( $state.go(\"app.panel\") );\n                }else{\n                    resolve(  );\n                }\n\n            }\n\n\n        })\n\n    };\n    $scope.handlers.is_loged_in = $scope.handlers.isLogedIn;\n\n    $scope.r_handlers.isLogedIn   = function(){\n\n        return $q( function(resolve, reject ){\n\n            console.log(\"Handing you over to the remote authentication server.\")\n\n            if( !$scope.storage.framify_user ){\n\n\n                if($state.current.name != \"app.login\" ){\n\n                    $scope.app.notify(\"<i class='fa  fa-exclamation-triangle'></i>&nbsp;&nbsp;Please Login to continue.\",'danger');\n                    reject( $state.go(\"app.login\") );                    \n\n                }\n                \n            }else if( !$http.defaults.headers.common.Authorization || $http.defaults.headers.common.Authorization == undefined || $http.defaults.headers.common.Authorization == '' ){\n\n                    $scope.remoteAuth.SetAuth( undefined )\n                    .then(function(  ){\n\n                        if($state.current.name == \"app.login\" ){\n                            resolve( $state.go(\"app.panel\") );\n                        }else{\n                            resolve(  );\n                        }\n                        \n                    })\n\n                     \n                    \n\n            }else{\n\n                if($state.current.name == \"app.login\" ){\n                   resolve( $state.go(\"app.panel\") );\n                }else{\n                    resolve(  );\n                }\n\n            }\n\n\n        })\n\n    };\n    $scope.r_handlers.is_loged_in   = $scope.r_handlers.isLogedIn;\n\n}])\n\n.directive(\"contenteditable\"\n,function() {\n    return {\n        restrict: \"A\",\n        require: \"ngModel\",\n        link: function(scope, element, attrs, ngModel) {\n\n            function read() {\n                ngModel.$setViewValue(element.html());\n            }\n\n            ngModel.$render = function() {\n                element.html(ngModel.$viewValue || \"\");\n            };\n\n            element.bind(\"blur keyup change\", function() {\n                scope.$apply(read);\n            });\n        }\n    };\n})\n\n.directive('fileModel',['$parse',function($parse){\n    \n    return {\n        restrict :\"A\",\n        link : function(scope,element,attr){\n            var model       = $parse(attr.fileModel);\n            var modelSetter = model.assign;\n            element.bind('change', ()=>{\n                scope.$apply( ()=>{\n                    modelSetter(scope,element[0].files[0])\n                })\n            })\n        }\n    }\n    \n}])\n\n//!CONFIGURE THE BNASIC PRE-RUNTIME STATES OF THE APPLICATION\n.config([\"ChartJsProvider\",function(ChartJsProvider){\n    \n    //@SET THE DEFAULT CHART COLORS\n    \n    ChartJsProvider.setOptions({ colors : [ '#1976D2', '#000000', '#ff00ff', '#ffff00', '#00ff00', '#00ffff', '#4D5360'] });\n\n    // ChartJsProvider.setOptions({ colors : [ \"#4AB151\",'#387EF5', '#FF0000', '#DCDCDC', '#46BFBD', '#FDB45C', '#949FB1', '#4D5360'] });\n    // ChartJsProvider.setOptions({ colors : [ '#803690', '#00ADF9', '#DCDCDC', '#46BFBD', '#FDB45C', '#949FB1', '#4D5360'] });\n\n}]);\n"]}