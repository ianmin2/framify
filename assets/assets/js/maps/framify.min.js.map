{"version":3,"sources":["framify.es6"],"names":["angular","module","service","$http","_this","this","url","window","location","href","split","filter","urlPortion","ip","port","hlink","nav","upload","data","destination","Promise","resolve","reject","fd","FormData","key","append","post","transformRequest","identity","headers","Content-Type","undefined","then","d","clone","obj","_typeof","copy","constructor","attr","hasOwnProperty","parseInt","str","doNothing","notify","notificationContent","notificationClass","notificationTimeout","UIkit","message","status","timeout","pos","countries","name","value","makeResponse","response","command","newDate","Date","toDateString","isoDate","format","getIsoDate","toIsoDate","dObj","dateTime","monthNum","getMonthNum","toMonthNum","$month_array","month_array","month_o_array","id","ajax","method","target","$","getJSON","cgi","dataType","loadify","duration","modal","blockUI","isNaN","setTimeout","hide","alert","title","cb","confirm","prompt","label","placeholder","userValue","isemail","isEmail","prospective_email","test","isusername","isUsername","prospective_username","ispassword","isPassword","prospective_password","isnumber","isNumber","prospective_number","istelephone","isTelephone","prospective_telephone","isdateTime","isDateTime","prospective_date","isdate","matches","val1","val2","num2month","month_number","unique","array_","Array","isArray","ret_array","a","length","b","push","reverse","removeDuplicates","count","searchParam","arrayObject","cnt","v","JSON","stringify","json","parse","md5","CryptoJS","MD5","toString","app","_this2","server","host","socket","io","connect","SMS","smsData","emit","oneSMS","tel","mess","apiKey","telephone","password","bulkSMS","contacts","forEach","element","run","$rootScope","$state","$localStorage","sms","storage","frame","path","absUrl","relocate","loc","console","log","go","is_admin","isAdmin","isRoot","admin","access","changeAdmin","bool","reset","user","controller","$scope","current","ui","links","hasFilters","openFilters","reinit","exec","f","secure","securityFunc","parts","part","indexOf","add","fetch","fetched","counted","login","logedin","table","cryptFields","replace","token","_","extras","cryptField","r","specifics","match","$apply","update","do_fetch","_ret","promiseArr","e","tData","tkey","all","del","username","adminLogin","admin_name","islogedin","logout","redirect","authorize","deauthorize","custom","cFetched","sort","keyname","sortKey","sanitize","keys","dPush","val","currmoin","setMoin","moin","addExtras","targetObj","extrasObj","subStrings","removeKeys","k","i","x","Object","directive","restrict","require","link","scope","attrs","ngModel","read","$setViewValue","html","$render","$viewValue","bind"],"mappings":"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","file":"../framify.min.js","sourcesContent":["angular.module('framify.js', [\n    'ui.router'\n    ,'framify-paginate'\n    ,'ngStorage'\n    ,'jsonFormatter'\n    ,'chart.js'\n])\n\n.service(\"app\"\n,['$http'\n,function($http) {\n\n        //!SETUP THE APPLICATION BASICS\n        var url = window.location.href.split('/').filter(function(urlPortion) { return (urlPortion != '' && urlPortion != 'http:' && urlPortion != 'https:') });\n\n        //! APP CONFIGURATIONS\n        this.ip = url[0].split(':')[0];\n        this.port = url[0].split(':')[1];\n        this.hlink = \"http://\" + this.ip + \":\" + this.port;\n\n        var hlink = this.hlink;\n\n        this.nav = [];\n\n        // //@ FETCH THE PRE-DEFINED APPLICATION URL\n        // $http.get('config/app-routes.json')\n        // .then(function(response) {\n        //     // console.dir(response)\n        //     if (response.status == 200) {\n        //         this.url = response.data;\n        //     } else {\n        //         this.notify(\"Failed to set routes\" ,\"danger\")\n        //     }\n        // });\n\n        //!APPLICATION URL\n        //this.url = \"http://41.89.162.4:3000\";\n        this.url = this.hlink;\n\n        //@ THE OFFICIAL FILE UPLOAD SERVICE\n        this.upload = (data, destination) => {\n\n            return new Promise( (resolve ,reject) => {\n                 //* create a formdata object\n                const fd = new FormData();\n\n                //* add the defined keys to the formdata object\n                for (var key in data) {\n                    fd.append(key, data[key]);\n                };\n\n                //* post the data to the /upload route of the running server\n                $http.post(`${hlink}/upload/${destination}`, fd, {\n\n                    transformRequest: angular.identity,\n\n                    //* ensure automatic content-type settng\n                    headers: { 'Content-Type': undefined }\n\n                }).then(d=>resolve(d));\n            });\n\n        };\n\n        //@ CREATE A COPY OF AN OBJECT\n        this.clone = (obj) => {\n\n            //* ensure that the object is defined\n            if (null == obj || \"object\" != typeof obj) return obj;\n\n            //* call the object constructor prototype\n            var copy = obj.constructor();\n\n            //* clone all attributes of the parent object into a new object\n            for (var attr in obj) {\n                if (obj.hasOwnProperty(attr)) copy[attr] = obj[attr];\n            }\n\n            //* return the newly created object\n            return copy;\n\n        };\n\n\n        //! PARSE AN INTEGER\n        this.parseInt = str => parseInt(str);\n\n        //! EMPTY CALLBACK\n        this.doNothing = () => {\n            return Promise.resolve();\n        };\n\n        //! SET A NOTIFICATION \n        this.notify = (notificationContent ,notificationClass ,notificationTimeout) => {\n\n            UIkit.notify({\n                message : notificationContent|| 'A blank notification was triggered.',\n                status  : notificationClass || 'info',\n                timeout : notificationTimeout || 6000,\n                pos     : 'top-center'\n            });\n\n            return Promise.resolve(true);\n            \n        };\n\n        var notify = this.notify;\n\n        this.countries = [{ name: \"Afghanistan\", value: \"1\" }, { name: \"Albania\", value: \"2\" }, { name: \"Algeria\", value: \"3\" }, { name: \"American Samoa\", value: \"4\" }, { name: \"Andorra\", value: \"5\" }, { name: \"Angola\", value: \"6\" }, { name: \"Anguilla\", value: \"7\" }, { name: \"Antarctica\", value: \"8\" }, { name: \"Antigua and Barbuda\", value: \"9\" }, { name: \"Argentina\", value: \"10\" }, { name: \"Armenia\", value: \"11\" }, { name: \"Aruba\", value: \"12\" }, { name: \"Australia\", value: \"13\" }, { name: \"Austria\", value: \"14\" }, { name: \"Azerbaijan\", value: \"15\" }, { name: \"Bahamas\", value: \"16\" }, { name: \"Bahrain\", value: \"17\" }, { name: \"Bangladesh\", value: \"18\" }, { name: \"Barbados\", value: \"19\" }, { name: \"Belarus\", value: \"20\" }, { name: \"Belgium\", value: \"21\" }, { name: \"Belize\", value: \"22\" }, { name: \"Benin\", value: \"23\" }, { name: \"Bermuda\", value: \"24\" }, { name: \"Bhutan\", value: \"25\" }, { name: \"Bolivia\", value: \"26\" }, { name: \"Bosnia and Herzegowina\", value: \"27\" }, { name: \"Botswana\", value: \"28\" }, { name: \"Bouvet Island\", value: \"29\" }, { name: \"Brazil\", value: \"30\" }, { name: \"British Indian Ocean Territory\", value: \"31\" }, { name: \"Brunei Darussalam\", value: \"32\" }, { name: \"Bulgaria\", value: \"33\" }, { name: \"Burkina Faso\", value: \"34\" }, { name: \"Burundi\", value: \"35\" }, { name: \"Cambodia\", value: \"36\" }, { name: \"Cameroon\", value: \"37\" }, { name: \"Canada\", value: \"38\" }, { name: \"Cape Verde\", value: \"39\" }, { name: \"Cayman Islands\", value: \"40\" }, { name: \"Central African Republic\", value: \"41\" }, { name: \"Chad\", value: \"42\" }, { name: \"Chile\", value: \"43\" }, { name: \"China\", value: \"44\" }, { name: \"Christmas Island\", value: \"45\" }, { name: \"Cocos (Keeling) Islands\", value: \"46\" }, { name: \"Colombia\", value: \"47\" }, { name: \"Comoros\", value: \"48\" }, { name: \"Congo\", value: \"49\" }, { name: \"Congo, the Democratic Republic of the\", value: \"50\" }, { name: \"Cook Islands\", value: \"51\" }, { name: \"Costa Rica\", value: \"52\" }, { name: \"Cote d\\'Ivoire\", value: \"53\" }, { name: \"Croatia (Hrvatska)\", value: \"54\" }, { name: \"Cuba\", value: \"55\" }, { name: \"Cyprus\", value: \"56\" }, { name: \"Czech Republic\", value: \"57\" }, { name: \"Denmark\", value: \"58\" }, { name: \"Djibouti\", value: \"59\" }, { name: \"Dominica\", value: \"60\" }, { name: \"Dominican Republic\", value: \"61\" }, { name: \"East Timor\", value: \"62\" }, { name: \"Ecuador\", value: \"63\" }, { name: \"Egypt\", value: \"64\" }, { name: \"El Salvador\", value: \"65\" }, { name: \"Equatorial Guinea\", value: \"66\" }, { name: \"Eritrea\", value: \"67\" }, { name: \"Estonia\", value: \"68\" }, { name: \"Ethiopia\", value: \"69\" }, { name: \"Falkland Islands (Malvinas)\", value: \"70\" }, { name: \"Faroe Islands\", value: \"71\" }, { name: \"Fiji\", value: \"72\" }, { name: \"Finland\", value: \"73\" }, { name: \"France\", value: \"74\" }, { name: \"France Metropolitan\", value: \"75\" }, { name: \"French Guiana\", value: \"76\" }, { name: \"French Polynesia\", value: \"77\" }, { name: \"French Southern Territories\", value: \"78\" }, { name: \"Gabon\", value: \"79\" }, { name: \"Gambia\", value: \"80\" }, { name: \"Georgia\", value: \"81\" }, { name: \"Germany\", value: \"82\" }, { name: \"Ghana\", value: \"83\" }, { name: \"Gibraltar\", value: \"84\" }, { name: \"Greece\", value: \"85\" }, { name: \"Greenland\", value: \"86\" }, { name: \"Grenada\", value: \"87\" }, { name: \"Guadeloupe\", value: \"88\" }, { name: \"Guam\", value: \"89\" }, { name: \"Guatemala\", value: \"90\" }, { name: \"Guinea\", value: \"91\" }, { name: \"Guinea-Bissau\", value: \"92\" }, { name: \"Guyana\", value: \"93\" }, { name: \"Haiti\", value: \"94\" }, { name: \"Heard and Mc Donald Islands\", value: \"95\" }, { name: \"Holy See (Vatican City State)\", value: \"96\" }, { name: \"Honduras\", value: \"97\" }, { name: \"Hong Kong\", value: \"98\" }, { name: \"Hungary\", value: \"99\" }, { name: \"Iceland\", value: \"100\" }, { name: \"India\", value: \"101\" }, { name: \"Indonesia\", value: \"102\" }, { name: \"Iran (Islamic Republic of)\", value: \"103\" }, { name: \"Iraq\", value: \"104\" }, { name: \"Ireland\", value: \"105\" }, { name: \"Israel\", value: \"106\" }, { name: \"Italy\", value: \"107\" }, { name: \"Jamaica\", value: \"108\" }, { name: \"Japan\", value: \"109\" }, { name: \"Jordan\", value: \"110\" }, { name: \"Kazakhstan\", value: \"111\" }, { name: \"Kenya\", value: \"112\" }, { name: \"Kiribati\", value: \"113\" }, { name: \"Korea, Democratic People\\'s Republic of\", value: \"114\" }, { name: \"Korea, Republic of\", value: \"115\" }, { name: \"Kuwait\", value: \"116\" }, { name: \"Kyrgyzstan\", value: \"117\" }, { name: \"Lao, People\\'s Democratic Republic\", value: \"118\" }, { name: \"Latvia\", value: \"119\" }, { name: \"Lebanon\", value: \"120\" }, { name: \"Lesotho\", value: \"121\" }, { name: \"Liberia\", value: \"122\" }, { name: \"Libyan Arab Jamahiriya\", value: \"123\" }, { name: \"Liechtenstein\", value: \"124\" }, { name: \"Lithuania\", value: \"125\" }, { name: \"Luxembourg\", value: \"126\" }, { name: \"Macau\", value: \"127\" }, { name: \"Macedonia, The Former Yugoslav Republic of\", value: \"128\" }, { name: \"Madagascar\", value: \"129\" }, { name: \"Malawi\", value: \"130\" }, { name: \"Malaysia\", value: \"131\" }, { name: \"Maldives\", value: \"132\" }, { name: \"Mali\", value: \"133\" }, { name: \"Malta\", value: \"134\" }, { name: \"Marshall Islands\", value: \"135\" }, { name: \"Martinique\", value: \"136\" }, { name: \"Mauritania\", value: \"137\" }, { name: \"Mauritius\", value: \"138\" }, { name: \"Mayotte\", value: \"139\" }, { name: \"Mexico\", value: \"140\" }, { name: \"Micronesia, Federated States of\", value: \"141\" }, { name: \"Moldova, Republic of\", value: \"142\" }, { name: \"Monaco\", value: \"143\" }, { name: \"Mongolia\", value: \"144\" }, { name: \"Montserrat\", value: \"145\" }, { name: \"Morocco\", value: \"146\" }, { name: \"Mozambique\", value: \"147\" }, { name: \"Myanmar\", value: \"148\" }, { name: \"Namibia\", value: \"149\" }, { name: \"Nauru\", value: \"150\" }, { name: \"Nepal\", value: \"151\" }, { name: \"Netherlands\", value: \"152\" }, { name: \"Netherlands Antilles\", value: \"153\" }, { name: \"New Caledonia\", value: \"154\" }, { name: \"New Zealand\", value: \"155\" }, { name: \"Nicaragua\", value: \"156\" }, { name: \"Niger\", value: \"157\" }, { name: \"Nigeria\", value: \"158\" }, { name: \"Niue\", value: \"159\" }, { name: \"Norfolk Island\", value: \"160\" }, { name: \"Northern Mariana Islands\", value: \"161\" }, { name: \"Norway\", value: \"162\" }, { name: \"Oman\", value: \"163\" }, { name: \"Pakistan\", value: \"164\" }, { name: \"Palau\", value: \"165\" }, { name: \"Panama\", value: \"166\" }, { name: \"Papua New Guinea\", value: \"167\" }, { name: \"Paraguay\", value: \"168\" }, { name: \"Peru\", value: \"169\" }, { name: \"Philippines\", value: \"170\" }, { name: \"Pitcairn\", value: \"171\" }, { name: \"Poland\", value: \"172\" }, { name: \"Portugal\", value: \"173\" }, { name: \"Puerto Rico\", value: \"174\" }, { name: \"Qatar\", value: \"175\" }, { name: \"Reunion\", value: \"176\" }, { name: \"Romania\", value: \"177\" }, { name: \"Russian Federation\", value: \"178\" }, { name: \"Rwanda\", value: \"179\" }, { name: \"Saint Kitts and Nevis\", value: \"180\" }, { name: \"Saint Lucia\", value: \"181\" }, { name: \"Saint Vincent and the Grenadines\", value: \"182\" }, { name: \"Samoa\", value: \"183\" }, { name: \"San Marino\", value: \"184\" }, { name: \"Sao Tome and Principe\", value: \"185\" }, { name: \"Saudi Arabia\", value: \"186\" }, { name: \"Senegal\", value: \"187\" }, { name: \"Seychelles\", value: \"188\" }, { name: \"Sierra Leone\", value: \"189\" }, { name: \"Singapore\", value: \"190\" }, { name: \"Slovakia (Slovak Republic)\", value: \"191\" }, { name: \"Slovenia\", value: \"192\" }, { name: \"Solomon Islands\", value: \"193\" }, { name: \"Somalia\", value: \"194\" }, { name: \"South Africa\", value: \"195\" }, { name: \"South Georgia and the South Sandwich Islands\", value: \"196\" }, { name: \"South Sudan\", value: \"197\" }, { name: \"Spain\", value: \"198\" }, { name: \"Sri Lanka\", value: \"199\" }, { name: \"St. Helena\", value: \"200\" }, { name: \"St. Pierre and Miquelon\", value: \"201\" }, { name: \"Sudan\", value: \"202\" }, { name: \"Suriname\", value: \"203\" }, { name: \"Svalbard and Jan Mayen Islands\", value: \"204\" }, { name: \"Swaziland\", value: \"205\" }, { name: \"Sweden\", value: \"206\" }, { name: \"Switzerland\", value: \"207\" }, { name: \"Syrian Arab Republic\", value: \"208\" }, { name: \"Taiwan, Province of China\", value: \"209\" }, { name: \"Tajikistan\", value: \"210\" }, { name: \"Tanzania, United Republic of\", value: \"211\" }, { name: \"Thailand\", value: \"212\" }, { name: \"Togo\", value: \"213\" }, { name: \"Tokelau\", value: \"214\" }, { name: \"Tonga\", value: \"215\" }, { name: \"Trinidad and Tobago\", value: \"216\" }, { name: \"Tunisia\", value: \"217\" }, { name: \"Turkey\", value: \"218\" }, { name: \"Turkmenistan\", value: \"219\" }, { name: \"Turks and Caicos Islands\", value: \"220\" }, { name: \"Tuvalu\", value: \"221\" }, { name: \"Uganda\", value: \"222\" }, { name: \"Ukraine\", value: \"223\" }, { name: \"United Arab Emirates\", value: \"224\" }, { name: \"United Kingdom\", value: \"225\" }, { name: \"United States\", value: \"226\" }, { name: \"United States Minor Outlying Islands\", value: \"227\" }, { name: \"Uruguay\", value: \"228\" }, { name: \"Uzbekistan\", value: \"229\" }, { name: \"Vanuatu\", value: \"230\" }, { name: \"Venezuela\", value: \"231\" }, { name: \"Vietnam\", value: \"232\" }, { name: \"Virgin Islands (British)\", value: \"233\" }, { name: \"Virgin Islands (U.S.)\", value: \"234\" }, { name: \"Wallis and Futuna Islands\", value: \"235\" }, { name: \"Western Sahara\", value: \"236\" }, { name: \"Yemen\", value: \"237\" }, { name: \"Yugoslavia\", value: \"238\" }, { name: \"Zambia\", value: \"239\" }, { name: \"Zimbabwe\", value: \"240\" }];\n\n\n        //! BASIC FRAMIFY FORMAT RESPONSE FORMATTER\n        this.makeResponse = (response ,message ,command) => {\n\n            return {\n                response: response,\n                data: {\n                    message: message,\n                    command: command\n                }\n            };\n\n        };\n\n        //!DATE FORMATERS\n        //* simple date\n        this.newDate        = () => new Date().toDateString();\n        //* isodate\n        this.isoDate        = () => new Date().format('isoDate');\n        //* get the isoDate of the specified date\n        this.getIsoDate     = (d) => new Date(d).format('isoDate');\n        //* get the isoDate of a date object\n        this.toIsoDate      = dObj => dObj.format('isoDate');\n        //* custom datetime\n        this.dateTime       = () => new Date().format('dateTime');\n        //* month number\n        this.monthNum       = () => new Date().format('monthNum');\n        //* get month number of the specified date\n        this.getMonthNum    = d => new Date(d).format('monthNum');\n        //* get date objects' month number\n        this.toMonthNum     = dObj => dObj.format('monthNum');\n\n        //* MONTHS ARRAY\n        var $month_array = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n        this.month_array = $month_array;\n        this.month_o_array = [\n            { id: 0, name: \"January\" }\n            ,{ id: 1, name: \"February\" }\n            ,{ id: 2, name: \"March\" }\n            ,{ id: 3, name: \"April\" }\n            ,{ id: 4, name: \"May\" }\n            ,{ id: 5, name: \"June\" }\n            ,{ id: 6, name: \"July\" }\n            ,{ id: 7, name: \"August\" }\n            ,{ id: 8, name: \"September\" }\n            ,{ id: 9, name: \"October\" }\n            ,{ id: 10, name: \"November\" }\n            ,{ id: 11, name: \"December\" }\n        ];\n\n        // this.printMonths = () =>  $month_o_array\n        //                     .reduce((mobj,m)=>{\n        //                         mobj[m] = m   \n        //                     },{})\n        //                     .filter(m=>m)\n\n        //! HANDLE APPLICATION SERVICE REQUESTS\n        this.ajax = (method ,target ,data) => {\n\n            return $.ajax({\n                method: method || \"POST\",\n                url: target,\n                data: data\n            });\n           \n        };\n\n        //!HANDLE JSON REQUESTS \n        this.getJSON = (target) => {\n\n            return $.getJSON(target);\n\n        };\n\n        //! HANDLE CORS CALLS WITH jsonp ENABLED\n        this.cgi = (method ,url ,data) => {\n\n            return $.ajax({\n                method: method || \"GET\",\n                url: url,\n                data: data,\n                dataType: 'jsonp',\n            });\n\n        };\n\n        //!HANDLE THE DISPLAY OF DIALOG BOXES\n\n        //* SHOW A \"LOADING\" ELEMENT\n        this.loadify = (duration, message) => {\n\n            return new Promise( (resolve,reject) => {\n                let modal = UIkit.modal.blockUI('<center><i style=\"color:blue;\" class=\"fa fa fa-spinner fa-pulse fa-5x fa-fw\"></i></center>'+( (message)?`<center><br>${message}</center>`:\"\" ) );\n                if( duration && !isNaN(duration)){\n                    setTimeout(()=>{\n                         modal.hide();\n                         resolve(true); \n                    }, duration ) ;\n                }else{\n                    resolve(modal);\n                }\n                \n            });\n\n        };\n        \n        //*GENERATE A CUSTOM ALERT DIALOG\n        this.alert = (title ,message ,cb) => {\n\n            UIkit.modal.alert(`<font color=\"#1976D2\" style=\"font-weight:bold;text-transform:uppercase;\">${title||'Notice'}</font>\n            <hr>\n            <center>${message||'</center><font color=red font-weight=bold; font-size=2em>Oops!</font><br>False alarm!<center>'}</center>`);\n\n            if( cb && typeof(cb) == \"function\" ){\n                return Promise.resolve(cb());\n            }else{\n                return Promise.resolve(true);\n            }\n\n        };\n            \n        //*GENERATE A CUSTOM CONFIRM DIALOG\n        this.confirm = ( title ,message ,cb ) => {\n            \n            return new Promise( (resolve) => {\n\n                UIkit.modal.confirm(`<font color=\"#1976D2\" style=\"font-weight:bold;text-transform:uppercase;\">${title||'Confirmation required.'}</font>\n                <hr>\n                <center>${message}</center>`,()=>{\n                    if(cb && typeof(cb) == \"function\"){\n                        resolve(cb());\n                    }else{\n                        resolve(true);\n                    }\n                });\n\n            });           \n            \n        };    \n            \n        //*GENERATE A CUSTOM PROMPT DIALOG\n        this.prompt = function( title ,label ,placeholder ,cb){\n          \n          return new Promise( (resolve) => {\n\n            UIkit.modal.prompt(`<font color=\"#1976D2\" style=\"font-weight:bold;text-transform:uppercase;\">${title||'Info required'}</font>\n            <hr>\n            ${label||'email'} :`, (placeholder||''), (userValue) => { \n                if(cb && typeof(cb) == \"function\"){\n                    resolve(cb()) \n                }else{\n                    resolve(true);\n                }\n            });\n\n          }); \n                      \n        };\n\n\n        //!BASIC VALIDATION METHODS\n\n        //*VALIDATE EMAIL ADDRESSES\n        this.isemail = /^[-a-z0-9~!$%^&*_=+}{\\'?]+(\\.[-a-z0-9~!$%^&*_=+}{\\'?]+)*@([a-z0-9_][-a-z0-9_]*(\\.[-a-z0-9_]+)*\\.(aero|arpa|biz|com|coop|edu|gov|info|int|mil|museum|name|net|org|pro|travel|mobi|[a-z][a-z])|([0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}))(:[0-9]{1,5})?$/;\n        this.isEmail = prospective_email => this.isemail.test(prospective_email);\n\n        //*VALIDATE USERNAMES\n        this.isusername = /^[a-z0-9_-]{4,16}$/;\n        this.isUsername = prospective_username => this.isusername.test(prospective_username);\n\n        //*VALIDATE PASSWORDS\n        this.ispassword = /^[-@./\\!\\$\\%\\^|#&,+\\w\\s]{6,50}$/;\n        this.isPassword = prospective_password => this.ispassword.test(prospective_password);\n\n        //* VALIDATE NUMBERS\n        this.isnumber = /^-{0,1}\\d*\\.{0,1}\\d+$/;\n        this.isNumber = prospective_number => this.isnumber.test(prospective_number);\n\n        //*VALIDATE TELEPHONE NUMBERS\n        this.istelephone = /^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/im;\n        this.isTelephone = prospective_telephone => this.istelephone.test(prospective_telephone);\n\n        //*VALIDATE DATETIME VALUES IN THE FORMAT  DD-MM-YYYY HH:MM e.g 29-02-2013 22:16\n        this.isdateTime = /^(0[1-9]|[12][0-9]|3[01])-(0[1-9]|1[012])-(19|20)[0-9]{2} (2[0-3]|[0-1][0-9]):[0-5][0-9]$/;\n        this.isDateTime = prospective_date=>this.isdate.test( prospective_date );\n\n        //*VALIDATE WHETHER TWO GIVEN VALUES MATCH\n        this.matches = (val1, val2) => (val1 === val2);\n\n        //*TRANFORM NUMBER TO MONTH\n        this.num2month = (month_number) => (!isNaN(month_number) && (month_number <= 11) )?$month_array[month_number]:\"Invalid Month\";\n\n        //*REMOVE DUPLICATES FROM ARRAY\n        this.unique = (array_) => {\n\n           if( !Array.isArray(array_) ){\n               notify('Could not remove duplicates from a non array object','danger');\n               return array_;\n           }else{\n\n               //* create a new array\n                var ret_array = new Array();\n\n                //* loop through the entire length of the provided array\n                for (var a = array_.length - 1; a >= 0; a--) {\n                    \n                    //* loop through the array once more (for re-verification)\n                    for (var b = array_.length - 1; b >= 0; b--) {\n                        //* de-populate duplicates in the array\n                        if (array_[a] == array_[b] && a != b) {\n                            delete array_[b];\n                        }\n                    };\n                    \n                    //* store the relevant values\n                    if (array_[a] != undefined){\n                        ret_array.push(array_[a]);\n                    }                    \n\n                };\n                //* return the reversed array (to avoid distortion from the initial)\n                return ret_array.reverse();\n\n           }\n        };\n\n        this.removeDuplicates = this.unique;\n\n        //* COUNT OCCURANCES IN AN ARRAY\n        this.count = (searchParam ,arrayObject) => {\n\n            var cnt = 0;\n\n            for(v in arrayObject) {\n                if (searchParam === arrayObject[v]) {\n                    cnt += 1;\n                }\n            }\n            return cnt;\n\n        };\n\n        //* CONDITIONALLY TRANSFORM TO STRING\n        this.str    = (obj) => (typeof(obj) === \"object\") ? JSON.stringify(obj) : obj;\n\n        //* CONDITIONALLY TRANSFORM TO JSON\n        this.json   = (obj) => (typeof(obj) === \"object\") ? obj : JSON.parse(obj);\n\n        //* CONDITIONALLY RETURN AN MD5 HASH\n        this.md5    = (str) => (/^[a-f0-9]{32}$/gm.test(str)) ? str : CryptoJS.MD5(str).toString();\n\n}])\n\n//The BASIC sms sending application service\n.service(\"sms\" \n,['app'\n,function(app) {\n\n        /**\n         * This angular service allows for you to easily send SMS messages conveniently using bixbyte's default SMS server\n         * \n         * It allows the use of your *Framify SMS* android phone application to send simple SMS messages. \n         * \n         * You can easily extend it as you will since the socket connection to the server can be hooked to as \"sms.socket\"\n         */\n\n        //@ BASIC APPLICATION INITIALIZATION\n        this.server = {};\n        this.server.host = '41.89.162.252:3000';\n        this.socket = io.connect(`${this.server.host}`);\n        const socket = this.socket;\n\n        //@ SEND EXPRESS SMS'\n        this.SMS = (smsData) => {\n            socket.emit(\"sendSMS\" ,smsData);\n            return Promise.resolve(true)            \n        };\n\n        //@ SEND A SINGLE SMS\n        this.oneSMS = (tel ,mess ,apiKey) => {\n\n            var obj;\n            if (Array.isArray(tel)) {\n                obj = tel;\n            } else {\n                obj = {\n                    telephone: tel,\n                    message: mess,\n                    password: apiKey\n                };\n            }\n\n            socket.emit(\"sendSMS\" ,obj);\n            return Promise.resolve(true);\n\n        };\n\n        //@ SEND BULK SMS MESSAGES\n        this.bulkSMS = (contacts ,data ,apiKey) => {\n\n            return new Promise( (resolve ,reject) => {\n\n                let obj = [];\n\n                //* Ensure that the API key has been set\n                if (!apiKey) {\n                    app.alert(\"<font style='weight:bold;color:red;'>ERROR</font>\",'<center>Failed to instantiate the SMS sending service before api Key definition.</center>');\n                } else if (Array.isArray(contacts)) {\n\n                    //* handle an array of contacts\n                    contacts.forEach( (element) => {\n\n                        if (app.isTelephone(element)) {\n\n                            obj.push({\n                                telephone: element,\n                                message: data,\n                                apiKey: apiKey\n                            });\n\n                        } else {\n\n                            app.alert(\"<font style='weight:bold;color:red;'>Invalid telephone number encountered</font>\",'<center>Could not send an SMS message to the invalid number ' + element + '.</center>');\n\n                        }\n\n                    }, this);\n\n                    socket.emit(\"sendSMS\", obj);\n                    resolve(true);\n\n                } else {\n                    app.alert(\"<font style='weight:bold;color:red;'>Bulk SMS error.</font>\" ,'<center>You can only use the bulk SMS service with an array of telephone contacts</center>');\n                }\n\n            });       \n           \n        };\n\n        // //@ SAMPLE SUCCESSFUL SMS SENDING INFORMATION HANDLER\n        // this.socket.on(\"trueSMS\", (data) => {\n        //     $scope.app.notify(\"The message has been conveyed.\");\n        // });\n\n}])\n\n.service(\"cgi\" \n,[\nfunction() {\n\n    //Handle background calls to the web server for database integration\n    this.ajax = function(data) {\n        return $.ajax({\n            method: \"GET\",\n            url: \"/php/index.php\",\n            data: data\n        });\n    };\n\n}])\n\n.run(\n[\"app\" ,\"cgi\" ,\"$rootScope\" ,\"$state\" ,\"$localStorage\" ,\"sms\"\n,function(app ,cgi ,$rootScope ,$state ,$localStorage ,sms) {\n\n        //! INJECT THE LOCATION SOURCE TO THE ROOT SCOPE\n        $rootScope.location     = $state;\n\n        //! INJECT THE $localStorage instance into the root scope\n        $rootScope.storage      = $localStorage;\n\n        //! INJECT THE APPLICATION'S MAIN SERVICE TO THE ROOT SCOPE SUCH THAT ALL SCOPES MAY INHERIT IT\n        $rootScope.app          = app;\n\n        //! INJECT THE APP BASICS SERVICE\n        $rootScope.cgi          = cgi;\n\n        //! SIMPLE APPLICATION BEHAVIOR SETUP\n        $rootScope.frame        = {};\n\n        //#! INJECT THE SMS INSTANCE INTO THE MAIN SCOPE\n        $rootScope.sms          = sms;\n\n        //! IDENTIFY THE CURRENT PATH\n        $rootScope.frame.path   = () => $state.absUrl().split(\"/#/\")[0] + \"/#/\" + $state.absUrl().split(\"/#/\")[1].split(\"#\")[0];\n        //p.split(\"/#/\")[0]+\"/#/\"+p.split(\"/#/\")[1].split(\"#\")[0]\n\n        //! RELOCATION HANDLING\n        $rootScope.frame.relocate = (loc) => {\n            console.log(`Relocating to: #${loc}`)\n            $rootScope.location.go(loc);\n        };\n\n        //! ADMIN HANDLING  \n        $rootScope.frame.is_admin = false;\n\n        //! ADMIN STATUS CHECKER \n        $rootScope.frame.isAdmin = () => ($rootScope.frame.is_admin) ? true : false;\n\n        //! ROOT USER STATUS CHECKER\n        $rootScope.frame.isRoot = () => ($rootScope.storage.admin.access == 0) ? true : false;\n\n        //! ADMIN STATUS SWITCH\n        $rootScope.frame.changeAdmin = (bool) => {\n            $rootScope.frame.is_admin = bool;\n            //  $rootScope.$apply();\n        };\n\n        //! RESET THE ADMIN STATUS\n        $rootScope.frame.reset = () => {\n            delete $rootScope.storage.admin;\n            delete $rootScope.storage.user;\n            $rootScope.frame.changeAdmin(false);\n            window.location = \"/#/\";\n        };\n\n\n    }])\n.controller(\"framifyController\"\n,['$scope' ,'$state' ,'$rootScope' \n,function($scope ,$state ,$rootScope) {\n\n        //!APPLICATION GLOBAL SCOPE COMPONENTS\n        $scope.current = {};\n        $scope.ui = {};\n\n        // $scope.urlParams = $stateParams;\n\n        $rootScope.nav = [];\n        //$rootScope.nav.search; \n        $rootScope.links = [];\n\n        $scope.nav.hasFilters = false;\n\n\n        //** MANAGE THE NAVIGATION SEARCH STATUS\n        $scope.openFilters = (hasFilters) => {\n            if (hasFilters === true) { $scope.nav.hasFilters = false; } else { $scope.nav.hasFilters = true; }\n        };\n\n        //!RE-INITIALIZE APPLICATION DATA\n        $rootScope.app.reinit = () => {\n            $scope.location.path(\"/framify\");\n        };\n\n\n        //@ FUNCTION EXECUTOR\n        $rootScope.exec = f => f();\n\n        /**\n         * SECURE THE PARENTAL CONTROLLED URLS\n         */\n        $rootScope.secure = (securityFunc) => {\n\n            var parts = window.location.href.split('/');\n\n            var part = parts[(parts.length - 1)];\n\n            if ($scope.links.indexOf(part) >= 0) {\n\n                $rootScope.exec(securityFunc);\n\n            }\n\n        };\n\n\n        /**\n         * DATABASE CENTRIC ADDITION AND DELETION\n         */\n\n        //Define the main application objects\n        $scope.add = {};\n        $scope.fetch = {};\n        $scope.fetched = {};\n        $scope.counted = {};\n        $scope.data = {};\n\n        $scope.data.login = {};\n        $scope.data.admin = {};\n\n        $rootScope.frame.changeAdmin(false);\n        $scope.logedin = false;\n\n        //! BASIC ADDITION\n        $scope.add = (table ,data ,cryptFields ,cb) => {\n\n            return new Promise( (resolve ,reject) => {\n\n                //* populate the data object \n                data                = (data) ? $scope.app.json(data) : {};\n                data.command        = \"add\";\n                data.table          = (table != undefined) ? table.toString().replace(/vw_/ig, '') : \"\";\n                data.token          = data.token || $scope.storage.admin._;\n                data.extras         = (data) ? ((data.extras) ? data.extras.replace(/LIMIT 1/ig, '') : undefined) : undefined;\n\n                //* Encrypt the specified cryptFields\n                 if (cryptFields) {\n                    cryptFields.split(\",\")\n                    .forEach((cryptField) => {\n                        data[cryptField] = $scope.app.md5(data[cryptField])\n                    });\n                }\n\n                //* Perform the actual addition\n                $scope.cgi.ajax(data)\n                .then((r) => {\n\n                    r = $scope.app.json(r);\n\n                    if (r.response == 200) {\n\n                        $scope.app.notify(`<center> ${r.data.message}</center>` ,\"success\" );\n\n                        $scope.fetch(table, { specifics: data.specifics });\n\n                        $scope.data[table.toString().replace(/vw_/ig, '')] = {};\n\n                        if ( cb && typeof(cb) == \"function\") {\n                            resolve( cb(r) );\n                        } else {\n                            resolve(true);\n                        }\n\n                    } else {\n\n                        // POSTGRESQL ERROR FORMAT MATCHING\n                        if (Array.isArray(r.data.message)) {\n\n                            var v = r.data.message[2].match(/DETAIL:(.*)/);\n\n                            if (v != undefined || v != null) {\n                                r.data.message = v[1];\n                            } else {\n                                r.data.message = r.data.message[2];\n                            }\n\n                        }\n\n\n                        $scope.app.notify(`<center>${ r.data.message }</center>` ,'danger');\n                        reject( $scope.app.makeResponse(500 ,v[1]) )\n                        \n                    }\n\n                    $scope.$apply();\n\n                });\n\n            });\n\n        \n            \n        };\n\n        //! BASIC UPDATING\n        $scope.update = (table ,data ,cryptFields ,cb) => {\n\n            return new Promise( (resolve ,reject) => {\n\n                //* pack the relevant info into the data object\n                data                = (data) ? $scope.app.json(data) : {};\n                data.command        = \"update\";\n                data.table          = (table != undefined) ? table.toString().replace(/vw_/ig, '') : \"\";\n                data.token          = data.token || $scope.storage.admin._;\n                data.extras         = (data) ? ((data.extras) ? data.extras.replace(/LIMIT 1/ig, '') : undefined) : undefined;\n\n                //* Encrypt the specified cryptFields\n                if (cryptFields) {\n                    cryptFields.split(\",\")\n                    .forEach((cryptField) => {\n                        data[cryptField] = $scope.app.md5(data[cryptField])\n                    });\n                }\n\n                //* perform the actual update\n                $scope.cgi.ajax(data)\n                .then( (r) => {\n\n                    r = $scope.app.json(r);\n\n                    if (r.response == 200) {\n\n                        $scope.app.notify(`<center> ${r.data.message}</center>`, \"success\");\n\n                        $scope.fetch(table, { specifics: data.specifics });\n\n                        $scope.data[table.toString().replace(/vw_/ig, '')] = {};\n\n                        $scope.$apply();\n\n                        if (typeof(cb) == 'function') {\n                            resolve( cb( r ) );                            \n                        }else{\n                            resolve(true);\n                        }\n\n                    } else {\n\n                        // POSTGRESQL ERROR FORMAT MATCHING\n                        if (Array.isArray(r.data.message)) {\n\n                            var v = r.data.message[2].match(/DETAIL:(.*)/)\n\n                            if (v != undefined || v != null) {\n                                r.data.message = v[1];\n                            } else {\n                                r.data.message = r.data.message[2];\n                            }\n                           \n                        }\n\n                        $scope.app.notify(`<center>${ r.data.message }</center>`,\"danger\");\n                        reject( $scope.app.makeResponse(500 ,r.data.message)  );\n\n                    }\n                    \n                })\n\n            });\n  \n        };\n\n\n        //! BASIC DATA FETCHING\n        var do_fetch = (table ,data ,cryptFields) => {\n\n            return new Promise( (resolve ,reject) => {\n\n                //* populate the \"data\" object\n                data               = (data) ? $scope.app.json(data) : {};\n                data.command       = \"get\";\n                data.table         = table;\n\n                console.log(\"\\nprocessing the fetching of table \" + table + \"\\n\")\n\n                //* Encrypt the specified cryptFields\n                if (cryptFields) {\n                    cryptFields.split(\",\")\n                    .forEach((cryptField) => {\n                        data[cryptField] = $scope.app.md5(data[cryptField])\n                    });\n                }\n\n                 //* perform the actual data fetching\n                 $scope.cgi.ajax(data)\n                 .then( (r) => {\n\n                    r = $scope.app.json(r);\n\n                    if (r.response == 200) {\n                        $scope.fetched[table] = r.data.message;\n                        $scope.$apply();\n                        resolve(r);\n                    } else {\n\n                        // POSTGRESQL ERROR FORMAT MATCHING\n                        if (Array.isArray(r.data.message)) {\n\n                            var v = r.data.message[2].match(/DETAIL:(.*)/)\n\n                            if (v != undefined || v != null) {\n                                r.data.message = v[1];\n                            } else {\n                                r.data.message = r.data.message[2];\n                            }\n\n                        }\n                        $scope.app.notify(`<center>${ r.data.message }</center>`,\"danger\");\n                        reject( $scope.app.makeResponse(500 ,r.data.message) );\n\n                    }\n                    \n                })\n\n            });\n\n        };\n\n        $scope.fetch = (table ,data ,cryptFields ,cb) => {\n\n            if (Array.isArray(table)) {\n\n                let promiseArr = new Array();\n\n                table\n                .filter(e=>typeof(e[0])!='undefined' )\n                .forEach( (tData ,tkey) => {\n                    promiseArr.push( do_fetch(tData[0] ,(tData[1] || {}) ) ,cryptFields)\n                });\n                \n                promiseArr = promiseArr.filter(e=>typeof(e)!='undefined');\n\n                return Promise.all( promiseArr );\n\n            } else {\n               return Promise.resolve( do_fetch(table, data, cryptFields) );\n            }\n\n        };\n\n        //! BASIC DELETION  \n        $scope.del = (table ,data ,cryptFields ,cb) => {\n\n            return new Promise( (reject ,resolve) => {\n\n                //* populate the data object\n                data            = (data) ? $scope.app.json(data) : {};\n                data.command    = \"del\";\n                data.table      = (table != undefined) ? table.toString().replace(/vw_/ig, '') : \"\";\n                data.token      = data.token || $scope.storage.admin._;\n\n                //* Encrypt the specified cryptFields\n                if (cryptFields) {\n                    cryptFields.split(\",\")\n                    .forEach((cryptField) => {\n                        data[cryptField] = $scope.app.md5(data[cryptField])\n                    });\n                }\n\n                $scope.cgi.ajax(data)\n                .then( (r) => {\n\n                    r = $scope.app.json(r);\n\n                    if (r.response == 200) {\n                        // $scope.fetched[table].splice(delID, 1);\n                        $scope.app.notify(`<center>${r.data.message}</center>`, \"success\");\n                        resolve(r);\n                    } else {\n\n                        // POSTGRESQL ERROR FORMAT MATCHING\n                        if (Array.isArray(r.data.message)) {\n\n                            var v = r.data.message[2].match(/DETAIL:(.*)/)\n\n                            if (v != undefined || v != null) {\n                                r.data.message = v[1];\n                            } else {\n                                r.data.message = r.data.message[2];\n                            }\n                        }\n                        $scope.app.notify(`<center>${ r.data.message }</center>`,\"danger\");\n                        reject( $scope.app.makeResponse(500 ,r.data.message) );\n\n                    }\n                    $scope.$apply();\n\n                })\n\n            })\n            \n        };\n\n        //Basic User Login\n        $scope.login = (cryptField) => {\n\n            return new Promise( (resolve ,reject) => {\n\n                if (cryptField) {\n                    $scope.data.login[cryptField] = $scope.app.md5($scope.data.login[cryptField])\n                }\n\n                $scope.data.login.command   = \"get\";\n                $scope.data.login.table     = \"users\";\n                $scope.data.login.extras    = \" AND active is true LIMIT 1\";\n\n                //* perform the actual login validation\n                $scope.cgi.ajax($scope.data.login)\n                .then((r) => {\n\n                    $scope.data.admin.extras = \"\";\n\n                    r = $scope.app.json(r);\n\n                    if (r.response == 200) {\n\n                        if (r.data.message.length > 0 && typeof(r.data.message[0]) == \"object\") {\n\n                            if (r.data.message[0]['username'] == $scope.data.login.username) {\n                                $scope.storage.user = r.data.message[0];\n                                $scope.logedin = true;\n                            } else {\n                                delete $scope.storage.user;\n                                window.location = \"/#/\";\n                            }\n\n                             resolve();\n\n                        } else {\n                            delete $scope.storage.user;\n                            $scope.app.notify(`<center>You have entered the wrong login credentials.</center>` ,\"danger\");\n                        }\n\n                    } else {\n\n                        // POSTGRESQL ERROR FORMAT MATCHING\n                        if (Array.isArray(r.data.message)) {\n\n                            var v = r.data.message[2].match(/DETAIL:(.*)/);\n\n                            if (v != undefined || v != null) {\n                                r.data.message = v[1];\n                            } else {\n                                r.data.message = r.data.message[2];\n                            }\n                        }\n\n                        delete $scope.storage.user;\n                        $scope.app.notify(`<center>${ r.data.message }</center>`,\"danger\");\n                        reject( $scope.app.makeResponse(500 ,r.data.message) );\n\n                    }\n                    $scope.$apply();\n\n                });\n\n            });\n\n        };\n\n        //Basic admin login\n        $scope.adminLogin = (cryptField) => {\n\n            return new Promise( (resolve,reject) =>{\n\n                if (cryptField) {\n                    $scope.data.admin[cryptField] = $scope.app.md5($scope.data.admin[cryptField])\n                }\n\n                $scope.data.admin.command   = \"get\";\n                $scope.data.admin.table     = \"admins\";\n                $scope.data.admin.extras    = \" AND active is true LIMIT 1\";\n\n                //* perform the actual login\n                $scope.cgi.ajax($scope.data.admin)\n                .then((r) => {\n\n                    $scope.data.admin.extras = \"\";\n\n                    r = $scope.app.json(r);\n\n                    if (r.response == 200) {\n\n                        if (r.data.message.length > 0 && typeof(r.data.message[0]) != undefined) {\n\n                            if (r.data.message[0]['password'] === $scope.data.admin.password) {\n                                $scope.storage.admin = r.data.message[0];\n                                $scope.storage.admin._ = {};\n                                $scope.storage.admin._.user = r.data.message[0].admin_name;\n                                $scope.storage.admin._.key = r.data.message[0].password;\n                                $rootScope.frame.changeAdmin(true);\n                                $scope.$apply();\n                                resolve(r)\n                            } else {\n                                delete $scope.data.admin;\n                                delete $scope.storage.admin;\n                                window.location = \"/#/admin\";                                \n                                resolve(r)\n                            }\n\n                        } else {\n                            delete $scope.data.admin;\n                            delete $scope.storage.admin;\n                            $scope.app.notify(`<center>You have entered the wrong login credentials.</center>` ,\"danger\");\n                            window.location = \"/#/admin\";\n                            reject(false);\n                        }\n\n                    } else {\n\n                        // POSTGRESQL ERROR FORMAT MATCHING\n                        if (Array.isArray(r.data.message)) {\n\n                            var v = r.data.message[2].match(/DETAIL:(.*)/)\n                            if (v != undefined || v != null) {\n                                r.data.message = v[1];\n                            } else {\n                                r.data.message = r.data.message[2];\n                            }\n                        }\n                        delete $scope.storage.admin;\n                        $scope.app.notify(`<center>${ r.data.message }</center>`,\"danger\");\n                        reject( $scope.app.makeResponse(500 ,r.data.message) );\n\n                    }\n                    $scope.$apply();\n                })\n\n            });\n\n        };\n\n        //@ Handle basic user re-authentication\n        $scope.islogedin = () => {\n\n            return new Promise( (resolve ,reject) => {\n\n                if ($scope.storage.user) {\n                    $scope.data.login.username = $scope.storage.user.username;\n                    $scope.data.login.password = $scope.storage.user.password;\n                    $scope.login();\n                    resolve(true);\n                }else{\n                    $scope.app.notify(`<center>You have no permission to access this content</center>`,'danger')\n                    reject(false);\n                }\n\n            })\n\n        };\n\n        //@ Handle basic app-user logout\n        $scope.logout = () => {\n\n            $scope.islogedin = false;\n            delete $scope.storage.user;\n            window.location = '/#/';\n            return Promise.resolve(true);\n            \n        };\n\n        //@ Handle basic application redirection\n        $scope.redirect = (loc) => {\n            if (loc) {\n                window.location = loc\n            } else {\n                window.location = \"/#/framify\";\n            }\n            return Promise.resolve(true)\n        };\n\n        // Basic Admin Auth\n        $scope.authorize = () => {\n\n            if ($scope.storage.admin) {\n                $scope.data.admin               = {};\n                $scope.data.admin.admin_name    = $scope.storage.admin.admin_name;\n                $scope.data.admin.password      = $scope.storage.admin.password;\n                $scope.adminLogin();\n            } else {\n                $scope.location = \"/#/admin\";\n            }\n\n            return Promise.resolve(true);\n\n        };\n\n        //@ HANDLE ADMINISTRATOR DEAUTHORIZATION\n        $scope.deauthorize = () => {\n            delete $scope.storage.admin;\n            $rootScope.frame.changeAdmin(false);\n            window.location = '/#/';\n            return Promise.resolve(true);\n        };\n\n\n        // BASIC Custom Queries\n        $scope.custom = (table ,data ,cryptFields ,cb) => {\n\n            return new Promise( (resolve,reject) => {\n\n                //* initialize the data object\n                data            = (data) ? $scope.app.json(data) : {};\n                data.command    = \"custom\";\n                data.token      = data.token || $scope.storage.admin._;\n\n                //* Encrypt the specified cryptFields\n                if (cryptFields) {\n                    cryptFields.split(\",\")\n                    .forEach((cryptField) => {\n                        data[cryptField] = $scope.app.md5(data[cryptField])\n                    });\n                }\n\n                //* Perform the actual custom query\n                $scope.cgi.ajax(data)\n                .then((r) => {\n\n                    r = $scope.app.json(r);\n\n                    if (r.response == 200) {\n\n                        $scope.app.notify(`<center>${(r.data.message || 'Successful')}</center>`, \"success\");\n\n                        $scope.cFetched[table] = r.data.message;\n                        $scope.data[table.toString().replace(/vw_/ig, '')] = {};\n                        $scope.$apply();\n\n                        resolve(r);\n\n                    } else {\n\n                        // POSTGRESQL ERROR FORMAT MATCHING\n                        if (Array.isArray(r.data.message)) {\n\n                            var v = r.data.message[2].match(/DETAIL:(.*)/)\n                            if (v != undefined || v != null) {\n                                r.data.message = v[1];\n                            } else {\n                                r.data.message = r.data.message[2];\n                            }\n\n                        } \n                        $scope.app.notify(`<center>${ r.data.message }</center>`);\n                        reject( $scope.app.makeResponse(500, r.data.message) )\n                    }\n                    $scope.$apply();\n                })\n\n            });   \n\n        };\n\n        //BASIC DATABASE INSTANCEOF COUNTER\n        $scope.count = (table ,data ,cryptFields ,cb) => {\n\n            return new Promise( (resolve ,reject) => {\n\n                data            = (data) ? $scope.app.json(data) : {};\n                data.table      = table;\n                data.command    = \"count\";\n                data.token      = data.token || {};\n\n                //* Encrypt the specified cryptFields\n                if (cryptFields) {\n                    cryptFields.split(\",\")\n                    .forEach((cryptField) => {\n                        data[cryptField] = $scope.app.md5(data[cryptField])\n                    });\n                }\n\n                //* perform the actual count\n                $scope.cgi.ajax(data)\n                .then((r) => {\n\n                    r = $scope.app.json(r);\n\n                    if (r.response == 200) {\n\n                        $scope.counted[table.toString().replace(/vw_/ig, '')] = r.data.message;\n                        $scope.data[table.toString().replace(/vw_/ig, '')] = {};\n\n                        $scope.$apply();\n\n                        resolve(r);\n\n                    } else {\n\n                        // POSTGRESQL ERROR FORMAT MATCHING\n                        if (Array.isArray(r.data.message)) {\n                            var v = r.data.message[2].match(/DETAIL:(.*)/)\n                            if (v != undefined || v != null) {\n                                r.data.message = v[1];\n                            } else {\n                                r.data.message = r.data.message[2];\n                            }\n                        }\n                        $scope.app.notify(`<center>${ r.data.message }</center>` ,'danger');\n                        reject( $scope.app.makeResponse(500 ,r.data.message ) );\n                    }\n                    $scope.$apply();\n                })\n\n            });\n\n        };\n\n        /**\n         * TABLE SORTER\n         */\n        $scope.sort = function(keyname) {\n            $scope.sortKey = keyname; //set the sortKey to the param passed\n            $scope.reverse = !$scope.reverse; //if true make it false and vice versa\n        }\n\n\n        /**\n         *  DELETE UNWANTED FIELDS\n         */\n        $scope.sanitize = (data ,keys) => {\n            if (keys) {\n                keys.split(\",\").forEach((key) => {\n                    delete data[key];\n                });\n                return Promise.resolve(data);\n            }\n        };\n\n        /**\n         * PUSH DATA TO OBJECT\n         */\n        $scope.dPush = (obj ,key ,val) => {\n            obj[key] = val;\n        };\n\n        /**\n         * @ MONTH REGULATION\n         */\n        $scope.currmoin = $scope.app.monthNum();\n        $scope.setMoin = (moin) => { $scope.currmoin = moin; }\n\n        //@ INJECT A STANDARD WHERE \"Extras\" OBJECT\n        $scope.addExtras = (targetObj ,extrasObj ,subStrings ,removeKeys) => {\n\n            return new Promise( (resolve,reject) => {\n\n                targetObj   = targetObj || {};\n                extrasObj   = extrasObj || {};\n                subStrings  = subStrings || '';\n                removeKeys  = removeKeys || '';\n\n                var extras  = '';\n\n                var k = [],\n                    v = [];\n\n                //@ CAPTURE THE REMOVE KEYS\n                removeKeys = removeKeys.split(',').filter(e => e);\n\n\n                removeKeys.forEach(e => {\n                    extrasObj[e] = null;\n                    delete extrasObj[e];\n                });\n\n                //@ CAPTURE REPLACE STRINGS\n                subStrings\n                    .split(',')\n                    .forEach((e, i) => {\n                        let x = e.split(':');\n                        k[i] = (x[0]);\n                        v[i] = (x[1]);\n                    })\n\n                //@ GET THE DEFINED KEYS\n                var keys = Object.keys(extrasObj);\n\n                //@ REPLACE THE DEFINED WITH THE DESIRED REPLACE KEYS\n                k.forEach((e, i) => {\n\n                    if (keys.indexOf(e) != -1) {\n\n                        extrasObj[v[i]] = extrasObj[e];\n                        extrasObj[e] = null;\n                        delete extrasObj[e];\n\n                    }\n\n                });\n\n\n                k = Object.keys(extrasObj);\n                v = null;\n\n                k.forEach((e, i) => {\n\n                    extras += ' ' + e + \"='\" + extrasObj[e] + \"' AND\";\n\n                });\n\n                k = null;\n\n\n                targetObj.extras = extras.replace(/AND+$/, '');\n\n                resolve( targetObj );\n\n            })\n\n        };\n\n        ///////////////////////////////////////////////////////////////////////////////////////////////////\n        // APPLICATION SPECIFIC ADDITIONS\n\n\n}])\n\n.directive(\"contenteditable\"\n,function() {\n    return {\n        restrict: \"A\",\n        require: \"ngModel\",\n        link: function(scope, element, attrs, ngModel) {\n\n            function read() {\n                ngModel.$setViewValue(element.html());\n            }\n\n            ngModel.$render = function() {\n                element.html(ngModel.$viewValue || \"\");\n            };\n\n            element.bind(\"blur keyup change\", function() {\n                scope.$apply(read);\n            });\n        }\n    };\n})"]}